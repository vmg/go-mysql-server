// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

import "fmt"

//import "runtime/debug"

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

func statementSeen(yylex interface{}) {
	if yylex.(*Tokenizer).stopAfterFirstStmt {
		yylex.(*Tokenizer).stopped = true
	}
}

func yyPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).Position
}

func yyOldPosition(yylex interface{}) int {
	return yylex.(*Tokenizer).OldPosition
}

func yySpecialCommentMode(yylex interface{}) bool {
	tkn := yylex.(*Tokenizer)
	return tkn.specialComment != nil
}

//line sql.y:64
type yySymType struct {
	yys                      int
	empty                    struct{}
	statement                Statement
	selStmt                  SelectStatement
	ddl                      *DDL
	ddls                     []*DDL
	ins                      *Insert
	byt                      byte
	bytes                    []byte
	bytes2                   [][]byte
	str                      string
	int                      int
	strs                     []string
	selectExprs              SelectExprs
	selectExpr               SelectExpr
	columns                  Columns
	statements               Statements
	partitions               Partitions
	variables                Variables
	into                     *Into
	colName                  *ColName
	tableExprs               TableExprs
	tableExpr                TableExpr
	subquery                 *Subquery
	simpleTableExpr          SimpleTableExpr
	joinCondition            JoinCondition
	triggerName              TriggerName
	tableName                TableName
	tableNames               TableNames
	procedureName            ProcedureName
	indexHints               *IndexHints
	asOf                     *AsOf
	expr                     Expr
	exprs                    Exprs
	boolVal                  BoolVal
	boolean                  bool
	sqlVal                   *SQLVal
	colTuple                 ColTuple
	values                   Values
	valTuple                 ValTuple
	whens                    []*When
	when                     *When
	orderBy                  OrderBy
	order                    *Order
	limit                    *Limit
	assignExprs              AssignmentExprs
	assignExpr               *AssignmentExpr
	setVarExprs              SetVarExprs
	setVarExpr               *SetVarExpr
	setScope                 SetScope
	colIdent                 ColIdent
	colIdents                []ColIdent
	tableIdent               TableIdent
	convertType              *ConvertType
	aliasedTableName         *AliasedTableExpr
	TableSpec                *TableSpec
	columnType               ColumnType
	columnOrder              *ColumnOrder
	triggerOrder             *TriggerOrder
	colKeyOpt                ColumnKeyOption
	optVal                   Expr
	LengthScaleOption        LengthScaleOption
	columnDefinition         *ColumnDefinition
	indexDefinition          *IndexDefinition
	indexInfo                *IndexInfo
	indexOption              *IndexOption
	indexOptions             []*IndexOption
	flushOption              *FlushOption
	indexColumn              *IndexColumn
	indexColumns             []*IndexColumn
	constraintDefinition     *ConstraintDefinition
	constraintInfo           ConstraintInfo
	ReferenceAction          ReferenceAction
	partDefs                 []*PartitionDefinition
	partDef                  *PartitionDefinition
	partSpec                 *PartitionSpec
	viewSpec                 *ViewSpec
	showFilter               *ShowFilter
	frame                    *Frame
	frameExtent              *FrameExtent
	frameBound               *FrameBound
	caseStatementCases       []CaseStatementCase
	caseStatementCase        CaseStatementCase
	ifStatementConditions    []IfStatementCondition
	ifStatementCondition     IfStatementCondition
	signalInfo               SignalInfo
	signalInfos              []SignalInfo
	signalConditionItemName  SignalConditionItemName
	declareHandlerAction     DeclareHandlerAction
	declareHandlerCondition  DeclareHandlerCondition
	declareHandlerConditions []DeclareHandlerCondition
	procedureParam           ProcedureParam
	procedureParams          []ProcedureParam
	characteristic           Characteristic
	characteristics          []Characteristic
	charsetCollate           *CharsetAndCollate
	charsetCollates          []*CharsetAndCollate
	Fields                   *Fields
	Lines                    *Lines
	EnclosedBy               *EnclosedBy
	tableAndLockType         *TableAndLockType
	tableAndLockTypes        TableAndLockTypes
	lockType                 LockType
	accountName              AccountName
	accountNames             []AccountName
	accountRenames           []AccountRename
	authentication           *Authentication
	accountWithAuth          AccountWithAuth
	accountsWithAuth         []AccountWithAuth
	tlsOptionItem            TLSOptionItem
	tlsOptionItems           []TLSOptionItem
	accountLimitItem         AccountLimitItem
	accountLimitItems        []AccountLimitItem
	passLockItem             PassLockItem
	passLockItems            []PassLockItem
	grantPrivilege           Privilege
	grantPrivileges          []Privilege
	grantObjectType          GrantObjectType
	privilegeLevel           PrivilegeLevel
	grantAssumption          *GrantUserAssumption
	with                     *With
	window                   Window
	over                     *Over
	windowDef                *WindowDef
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const CALL = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const OF = 57375
const OUTFILE = 57376
const DUMPFILE = 57377
const DATA = 57378
const LOAD = 57379
const LINES = 57380
const TERMINATED = 57381
const ESCAPED = 57382
const ENCLOSED = 57383
const OPTIONALLY = 57384
const STARTING = 57385
const UNIQUE = 57386
const KEY = 57387
const SYSTEM_TIME = 57388
const VALUES = 57389
const LAST_INSERT_ID = 57390
const SQL_CALC_FOUND_ROWS = 57391
const NEXT = 57392
const VALUE = 57393
const SHARE = 57394
const MODE = 57395
const SQL_NO_CACHE = 57396
const SQL_CACHE = 57397
const JOIN = 57398
const STRAIGHT_JOIN = 57399
const LEFT = 57400
const RIGHT = 57401
const INNER = 57402
const OUTER = 57403
const CROSS = 57404
const NATURAL = 57405
const USE = 57406
const FORCE = 57407
const ON = 57408
const USING = 57409
const ID = 57410
const HEX = 57411
const STRING = 57412
const INTEGRAL = 57413
const FLOAT = 57414
const HEXNUM = 57415
const VALUE_ARG = 57416
const LIST_ARG = 57417
const COMMENT = 57418
const COMMENT_KEYWORD = 57419
const BIT_LITERAL = 57420
const NULL = 57421
const TRUE = 57422
const FALSE = 57423
const OFF = 57424
const INTO = 57425
const OR = 57426
const XOR = 57427
const AND = 57428
const NOT = 57429
const BETWEEN = 57430
const CASE = 57431
const WHEN = 57432
const THEN = 57433
const ELSE = 57434
const ELSEIF = 57435
const END = 57436
const LE = 57437
const GE = 57438
const NE = 57439
const NULL_SAFE_EQUAL = 57440
const IS = 57441
const LIKE = 57442
const REGEXP = 57443
const IN = 57444
const UNBOUNDED = 57445
const PARTITION = 57446
const RANGE = 57447
const ROWS = 57448
const GROUPS = 57449
const PRECEDING = 57450
const FOLLOWING = 57451
const SHIFT_LEFT = 57452
const SHIFT_RIGHT = 57453
const DIV = 57454
const MOD = 57455
const UNARY = 57456
const COLLATE = 57457
const BINARY = 57458
const UNDERSCORE_ARMSCII8 = 57459
const UNDERSCORE_ASCII = 57460
const UNDERSCORE_BIG5 = 57461
const UNDERSCORE_BINARY = 57462
const UNDERSCORE_CP1250 = 57463
const UNDERSCORE_CP1251 = 57464
const UNDERSCORE_CP1256 = 57465
const UNDERSCORE_CP1257 = 57466
const UNDERSCORE_CP850 = 57467
const UNDERSCORE_CP852 = 57468
const UNDERSCORE_CP866 = 57469
const UNDERSCORE_CP932 = 57470
const UNDERSCORE_DEC8 = 57471
const UNDERSCORE_EUCJPMS = 57472
const UNDERSCORE_EUCKR = 57473
const UNDERSCORE_GB18030 = 57474
const UNDERSCORE_GB2312 = 57475
const UNDERSCORE_GBK = 57476
const UNDERSCORE_GEOSTD8 = 57477
const UNDERSCORE_GREEK = 57478
const UNDERSCORE_HEBREW = 57479
const UNDERSCORE_HP8 = 57480
const UNDERSCORE_KEYBCS2 = 57481
const UNDERSCORE_KOI8R = 57482
const UNDERSCORE_KOI8U = 57483
const UNDERSCORE_LATIN1 = 57484
const UNDERSCORE_LATIN2 = 57485
const UNDERSCORE_LATIN5 = 57486
const UNDERSCORE_LATIN7 = 57487
const UNDERSCORE_MACCE = 57488
const UNDERSCORE_MACROMAN = 57489
const UNDERSCORE_SJIS = 57490
const UNDERSCORE_SWE7 = 57491
const UNDERSCORE_TIS620 = 57492
const UNDERSCORE_UCS2 = 57493
const UNDERSCORE_UJIS = 57494
const UNDERSCORE_UTF16 = 57495
const UNDERSCORE_UTF16LE = 57496
const UNDERSCORE_UTF32 = 57497
const UNDERSCORE_UTF8 = 57498
const UNDERSCORE_UTF8MB3 = 57499
const UNDERSCORE_UTF8MB4 = 57500
const INTERVAL = 57501
const JSON_EXTRACT_OP = 57502
const JSON_UNQUOTE_EXTRACT_OP = 57503
const CREATE = 57504
const ALTER = 57505
const DROP = 57506
const RENAME = 57507
const ANALYZE = 57508
const ADD = 57509
const MODIFY = 57510
const CHANGE = 57511
const SCHEMA = 57512
const TABLE = 57513
const INDEX = 57514
const INDEXES = 57515
const VIEW = 57516
const TO = 57517
const IGNORE = 57518
const IF = 57519
const PRIMARY = 57520
const COLUMN = 57521
const SPATIAL = 57522
const FULLTEXT = 57523
const KEY_BLOCK_SIZE = 57524
const CHECK = 57525
const ACTION = 57526
const CASCADE = 57527
const CONSTRAINT = 57528
const FOREIGN = 57529
const NO = 57530
const REFERENCES = 57531
const RESTRICT = 57532
const FIRST = 57533
const AFTER = 57534
const LAST = 57535
const SHOW = 57536
const DESCRIBE = 57537
const EXPLAIN = 57538
const DATE = 57539
const ESCAPE = 57540
const REPAIR = 57541
const OPTIMIZE = 57542
const TRUNCATE = 57543
const FORMAT = 57544
const MAXVALUE = 57545
const REORGANIZE = 57546
const LESS = 57547
const THAN = 57548
const PROCEDURE = 57549
const TRIGGER = 57550
const TRIGGERS = 57551
const FUNCTION = 57552
const STATUS = 57553
const VARIABLES = 57554
const WARNINGS = 57555
const ERRORS = 57556
const KILL = 57557
const CONNECTION = 57558
const SEQUENCE = 57559
const ENABLE = 57560
const DISABLE = 57561
const EACH = 57562
const ROW = 57563
const BEFORE = 57564
const FOLLOWS = 57565
const PRECEDES = 57566
const DEFINER = 57567
const INVOKER = 57568
const INOUT = 57569
const OUT = 57570
const DETERMINISTIC = 57571
const CONTAINS = 57572
const READS = 57573
const MODIFIES = 57574
const SQL = 57575
const SECURITY = 57576
const TEMPORARY = 57577
const ALGORITHM = 57578
const MERGE = 57579
const TEMPTABLE = 57580
const UNDEFINED = 57581
const CLASS_ORIGIN = 57582
const SUBCLASS_ORIGIN = 57583
const MESSAGE_TEXT = 57584
const MYSQL_ERRNO = 57585
const CONSTRAINT_CATALOG = 57586
const CONSTRAINT_SCHEMA = 57587
const CONSTRAINT_NAME = 57588
const CATALOG_NAME = 57589
const SCHEMA_NAME = 57590
const TABLE_NAME = 57591
const COLUMN_NAME = 57592
const CURSOR_NAME = 57593
const SIGNAL = 57594
const RESIGNAL = 57595
const SQLSTATE = 57596
const DECLARE = 57597
const CONDITION = 57598
const CURSOR = 57599
const CONTINUE = 57600
const EXIT = 57601
const UNDO = 57602
const HANDLER = 57603
const FOUND = 57604
const SQLWARNING = 57605
const SQLEXCEPTION = 57606
const USER = 57607
const IDENTIFIED = 57608
const ROLE = 57609
const REUSE = 57610
const GRANT = 57611
const GRANTS = 57612
const REVOKE = 57613
const NONE = 57614
const ATTRIBUTE = 57615
const RANDOM = 57616
const PASSWORD = 57617
const INITIAL = 57618
const AUTHENTICATION = 57619
const SSL = 57620
const X509 = 57621
const CIPHER = 57622
const ISSUER = 57623
const SUBJECT = 57624
const ACCOUNT = 57625
const EXPIRE = 57626
const NEVER = 57627
const DAY = 57628
const OPTION = 57629
const OPTIONAL = 57630
const EXCEPT = 57631
const ADMIN = 57632
const PRIVILEGES = 57633
const MAX_QUERIES_PER_HOUR = 57634
const MAX_UPDATES_PER_HOUR = 57635
const MAX_CONNECTIONS_PER_HOUR = 57636
const MAX_USER_CONNECTIONS = 57637
const FLUSH = 57638
const FAILED_LOGIN_ATTEMPTS = 57639
const PASSWORD_LOCK_TIME = 57640
const REQUIRE = 57641
const PROXY = 57642
const ROUTINE = 57643
const TABLESPACE = 57644
const CLIENT = 57645
const SLAVE = 57646
const EVENT = 57647
const EXECUTE = 57648
const FILE = 57649
const RELOAD = 57650
const REPLICATION = 57651
const SHUTDOWN = 57652
const SUPER = 57653
const USAGE = 57654
const LOGS = 57655
const ENGINE = 57656
const ERROR = 57657
const GENERAL = 57658
const HOSTS = 57659
const OPTIMIZER_COSTS = 57660
const RELAY = 57661
const SLOW = 57662
const USER_RESOURCES = 57663
const NO_WRITE_TO_BINLOG = 57664
const CHANNEL = 57665
const BEGIN = 57666
const START = 57667
const TRANSACTION = 57668
const COMMIT = 57669
const ROLLBACK = 57670
const SAVEPOINT = 57671
const WORK = 57672
const RELEASE = 57673
const CHAIN = 57674
const BIT = 57675
const TINYINT = 57676
const SMALLINT = 57677
const MEDIUMINT = 57678
const INT = 57679
const INTEGER = 57680
const BIGINT = 57681
const INTNUM = 57682
const SERIAL = 57683
const REAL = 57684
const DOUBLE = 57685
const FLOAT_TYPE = 57686
const DECIMAL = 57687
const NUMERIC = 57688
const DEC = 57689
const FIXED = 57690
const PRECISION = 57691
const TIME = 57692
const TIMESTAMP = 57693
const DATETIME = 57694
const YEAR = 57695
const CHAR = 57696
const VARCHAR = 57697
const BOOL = 57698
const CHARACTER = 57699
const VARBINARY = 57700
const NCHAR = 57701
const NVARCHAR = 57702
const NATIONAL = 57703
const VARYING = 57704
const TEXT = 57705
const TINYTEXT = 57706
const MEDIUMTEXT = 57707
const LONGTEXT = 57708
const LONG = 57709
const BLOB = 57710
const TINYBLOB = 57711
const MEDIUMBLOB = 57712
const LONGBLOB = 57713
const JSON = 57714
const ENUM = 57715
const GEOMETRY = 57716
const POINT = 57717
const LINESTRING = 57718
const POLYGON = 57719
const GEOMETRYCOLLECTION = 57720
const MULTIPOINT = 57721
const MULTILINESTRING = 57722
const MULTIPOLYGON = 57723
const LOCAL = 57724
const LOW_PRIORITY = 57725
const NULLX = 57726
const AUTO_INCREMENT = 57727
const APPROXNUM = 57728
const SIGNED = 57729
const UNSIGNED = 57730
const ZEROFILL = 57731
const SRID = 57732
const COLLATION = 57733
const DATABASES = 57734
const SCHEMAS = 57735
const TABLES = 57736
const FULL = 57737
const PROCESSLIST = 57738
const COLUMNS = 57739
const FIELDS = 57740
const ENGINES = 57741
const PLUGINS = 57742
const NAMES = 57743
const CHARSET = 57744
const GLOBAL = 57745
const SESSION = 57746
const ISOLATION = 57747
const LEVEL = 57748
const READ = 57749
const WRITE = 57750
const ONLY = 57751
const REPEATABLE = 57752
const COMMITTED = 57753
const UNCOMMITTED = 57754
const SERIALIZABLE = 57755
const ENCRYPTION = 57756
const CURRENT_TIMESTAMP = 57757
const NOW = 57758
const DATABASE = 57759
const CURRENT_DATE = 57760
const CURRENT_USER = 57761
const CURRENT_TIME = 57762
const LOCALTIME = 57763
const LOCALTIMESTAMP = 57764
const UTC_DATE = 57765
const UTC_TIME = 57766
const UTC_TIMESTAMP = 57767
const REPLACE = 57768
const CONVERT = 57769
const CAST = 57770
const SUBSTR = 57771
const SUBSTRING = 57772
const TRIM = 57773
const LEADING = 57774
const TRAILING = 57775
const BOTH = 57776
const GROUP_CONCAT = 57777
const SEPARATOR = 57778
const TIMESTAMPADD = 57779
const TIMESTAMPDIFF = 57780
const OVER = 57781
const WINDOW = 57782
const GROUPING = 57783
const CURRENT = 57784
const AVG = 57785
const BIT_AND = 57786
const BIT_OR = 57787
const BIT_XOR = 57788
const COUNT = 57789
const JSON_ARRAYAGG = 57790
const JSON_OBJECTAGG = 57791
const MAX = 57792
const MIN = 57793
const STDDEV_POP = 57794
const STDDEV = 57795
const STD = 57796
const STDDEV_SAMP = 57797
const SUM = 57798
const VAR_POP = 57799
const VARIANCE = 57800
const VAR_SAMP = 57801
const CUME_DIST = 57802
const DENSE_RANK = 57803
const FIRST_VALUE = 57804
const LAG = 57805
const LAST_VALUE = 57806
const LEAD = 57807
const NTH_VALUE = 57808
const NTILE = 57809
const ROW_NUMBER = 57810
const PERCENT_RANK = 57811
const RANK = 57812
const DUAL = 57813
const JSON_TABLE = 57814
const PATH = 57815
const AVG_ROW_LENGTH = 57816
const CHECKSUM = 57817
const COMPRESSION = 57818
const DIRECTORY = 57819
const DELAY_KEY_WRITE = 57820
const ENGINE_ATTRIBUTE = 57821
const INSERT_METHOD = 57822
const MAX_ROWS = 57823
const MIN_ROWS = 57824
const PACK_KEYS = 57825
const ROW_FORMAT = 57826
const SECONDARY_ENGINE_ATTRIBUTE = 57827
const STATS_AUTO_RECALC = 57828
const STATS_PERSISTENT = 57829
const STATS_SAMPLE_PAGES = 57830
const STORAGE = 57831
const DISK = 57832
const MEMORY = 57833
const DYNAMIC = 57834
const COMPRESSED = 57835
const REDUNDANT = 57836
const COMPACT = 57837
const LIST = 57838
const HASH = 57839
const PARTITIONS = 57840
const SUBPARTITION = 57841
const SUBPARTITIONS = 57842
const MATCH = 57843
const AGAINST = 57844
const BOOLEAN = 57845
const LANGUAGE = 57846
const WITH = 57847
const QUERY = 57848
const EXPANSION = 57849
const ACCESSIBLE = 57850
const ASENSITIVE = 57851
const CUBE = 57852
const DAY_HOUR = 57853
const DAY_MICROSECOND = 57854
const DAY_MINUTE = 57855
const DAY_SECOND = 57856
const DELAYED = 57857
const DISTINCTROW = 57858
const EMPTY = 57859
const FETCH = 57860
const FLOAT4 = 57861
const FLOAT8 = 57862
const GET = 57863
const HIGH_PRIORITY = 57864
const HOUR_MICROSECOND = 57865
const HOUR_MINUTE = 57866
const HOUR_SECOND = 57867
const INSENSITIVE = 57868
const INT1 = 57869
const INT2 = 57870
const INT3 = 57871
const INT4 = 57872
const INT8 = 57873
const IO_AFTER_GTIDS = 57874
const IO_BEFORE_GTIDS = 57875
const ITERATE = 57876
const LEAVE = 57877
const LINEAR = 57878
const LOOP = 57879
const MASTER_BIND = 57880
const MASTER_SSL_VERIFY_SERVER_CERT = 57881
const MIDDLEINT = 57882
const MINUTE_MICROSECOND = 57883
const MINUTE_SECOND = 57884
const PURGE = 57885
const READ_WRITE = 57886
const REPEAT = 57887
const RETURN = 57888
const RLIKE = 57889
const SECOND_MICROSECOND = 57890
const SENSITIVE = 57891
const SPECIFIC = 57892
const SQL_BIG_RESULT = 57893
const SQL_SMALL_RESULT = 57894
const VARCHARACTER = 57895
const WHILE = 57896
const YEAR_MONTH = 57897
const UNUSED = 57898
const DESCRIPTION = 57899
const LATERAL = 57900
const MEMBER = 57901
const RECURSIVE = 57902
const BUCKETS = 57903
const CLONE = 57904
const COMPONENT = 57905
const DEFINITION = 57906
const ENFORCED = 57907
const EXCLUDE = 57908
const GEOMCOLLECTION = 57909
const GET_MASTER_PUBLIC_KEY = 57910
const HISTOGRAM = 57911
const HISTORY = 57912
const INACTIVE = 57913
const INVISIBLE = 57914
const LOCKED = 57915
const MASTER_COMPRESSION_ALGORITHMS = 57916
const MASTER_PUBLIC_KEY_PATH = 57917
const MASTER_TLS_CIPHERSUITES = 57918
const MASTER_ZSTD_COMPRESSION_LEVEL = 57919
const NESTED = 57920
const NETWORK_NAMESPACE = 57921
const NOWAIT = 57922
const NULLS = 57923
const OJ = 57924
const OLD = 57925
const ORDINALITY = 57926
const ORGANIZATION = 57927
const OTHERS = 57928
const PERSIST = 57929
const PERSIST_ONLY = 57930
const PRIVILEGE_CHECKS_USER = 57931
const PROCESS = 57932
const REFERENCE = 57933
const REQUIRE_ROW_FORMAT = 57934
const RESOURCE = 57935
const RESPECT = 57936
const RESTART = 57937
const RETAIN = 57938
const SECONDARY = 57939
const SECONDARY_ENGINE = 57940
const SECONDARY_LOAD = 57941
const SECONDARY_UNLOAD = 57942
const SKIP = 57943
const THREAD_PRIORITY = 57944
const TIES = 57945
const VCPU = 57946
const VISIBLE = 57947
const SYSTEM = 57948
const INFILE = 57949
const ACTIVE = 57950
const AGGREGATE = 57951
const ANY = 57952
const ARRAY = 57953
const ASCII = 57954
const AT = 57955
const AUTOEXTEND_SIZE = 57956
const ENDS = 57957
const EVENTS = 57958
const GENERATED = 57959
const ALWAYS = 57960
const STORED = 57961
const VIRTUAL = 57962
const NVAR = 57963
const PASSWORD_LOCK = 57964

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CALL",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"OF",
	"OUTFILE",
	"DUMPFILE",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"OPTIONALLY",
	"STARTING",
	"UNIQUE",
	"KEY",
	"SYSTEM_TIME",
	"VALUES",
	"LAST_INSERT_ID",
	"SQL_CALC_FOUND_ROWS",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"'@'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"INTO",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"UNBOUNDED",
	"PARTITION",
	"RANGE",
	"ROWS",
	"GROUPS",
	"PRECEDING",
	"FOLLOWING",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB3",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"MODIFY",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"INDEXES",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"FIRST",
	"AFTER",
	"LAST",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"FORMAT",
	"MAXVALUE",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"TRIGGERS",
	"FUNCTION",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"ERRORS",
	"KILL",
	"CONNECTION",
	"SEQUENCE",
	"ENABLE",
	"DISABLE",
	"EACH",
	"ROW",
	"BEFORE",
	"FOLLOWS",
	"PRECEDES",
	"DEFINER",
	"INVOKER",
	"INOUT",
	"OUT",
	"DETERMINISTIC",
	"CONTAINS",
	"READS",
	"MODIFIES",
	"SQL",
	"SECURITY",
	"TEMPORARY",
	"ALGORITHM",
	"MERGE",
	"TEMPTABLE",
	"UNDEFINED",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"SIGNAL",
	"RESIGNAL",
	"SQLSTATE",
	"DECLARE",
	"CONDITION",
	"CURSOR",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"HANDLER",
	"FOUND",
	"SQLWARNING",
	"SQLEXCEPTION",
	"USER",
	"IDENTIFIED",
	"ROLE",
	"REUSE",
	"GRANT",
	"GRANTS",
	"REVOKE",
	"NONE",
	"ATTRIBUTE",
	"RANDOM",
	"PASSWORD",
	"INITIAL",
	"AUTHENTICATION",
	"SSL",
	"X509",
	"CIPHER",
	"ISSUER",
	"SUBJECT",
	"ACCOUNT",
	"EXPIRE",
	"NEVER",
	"DAY",
	"OPTION",
	"OPTIONAL",
	"EXCEPT",
	"ADMIN",
	"PRIVILEGES",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FLUSH",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"REQUIRE",
	"PROXY",
	"ROUTINE",
	"TABLESPACE",
	"CLIENT",
	"SLAVE",
	"EVENT",
	"EXECUTE",
	"FILE",
	"RELOAD",
	"REPLICATION",
	"SHUTDOWN",
	"SUPER",
	"USAGE",
	"LOGS",
	"ENGINE",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"RELAY",
	"SLOW",
	"USER_RESOURCES",
	"NO_WRITE_TO_BINLOG",
	"CHANNEL",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"WORK",
	"RELEASE",
	"CHAIN",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"SERIAL",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DEC",
	"FIXED",
	"PRECISION",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"NVARCHAR",
	"NATIONAL",
	"VARYING",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"LONG",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"LOCAL",
	"LOW_PRIORITY",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"SRID",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ENCRYPTION",
	"CURRENT_TIMESTAMP",
	"NOW",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"TRIM",
	"LEADING",
	"TRAILING",
	"BOTH",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"OVER",
	"WINDOW",
	"GROUPING",
	"CURRENT",
	"AVG",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"COUNT",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"MAX",
	"MIN",
	"STDDEV_POP",
	"STDDEV",
	"STD",
	"STDDEV_SAMP",
	"SUM",
	"VAR_POP",
	"VARIANCE",
	"VAR_SAMP",
	"CUME_DIST",
	"DENSE_RANK",
	"FIRST_VALUE",
	"LAG",
	"LAST_VALUE",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"ROW_NUMBER",
	"PERCENT_RANK",
	"RANK",
	"DUAL",
	"JSON_TABLE",
	"PATH",
	"AVG_ROW_LENGTH",
	"CHECKSUM",
	"COMPRESSION",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"DISK",
	"MEMORY",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"LIST",
	"HASH",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"ACCESSIBLE",
	"ASENSITIVE",
	"CUBE",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DELAYED",
	"DISTINCTROW",
	"EMPTY",
	"FETCH",
	"FLOAT4",
	"FLOAT8",
	"GET",
	"HIGH_PRIORITY",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"INSENSITIVE",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"IO_AFTER_GTIDS",
	"IO_BEFORE_GTIDS",
	"ITERATE",
	"LEAVE",
	"LINEAR",
	"LOOP",
	"MASTER_BIND",
	"MASTER_SSL_VERIFY_SERVER_CERT",
	"MIDDLEINT",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"PURGE",
	"READ_WRITE",
	"REPEAT",
	"RETURN",
	"RLIKE",
	"SECOND_MICROSECOND",
	"SENSITIVE",
	"SPECIFIC",
	"SQL_BIG_RESULT",
	"SQL_SMALL_RESULT",
	"VARCHARACTER",
	"WHILE",
	"YEAR_MONTH",
	"UNUSED",
	"DESCRIPTION",
	"LATERAL",
	"MEMBER",
	"RECURSIVE",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PERSIST",
	"PERSIST_ONLY",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"THREAD_PRIORITY",
	"TIES",
	"VCPU",
	"VISIBLE",
	"SYSTEM",
	"INFILE",
	"ACTIVE",
	"AGGREGATE",
	"ANY",
	"ARRAY",
	"ASCII",
	"AT",
	"AUTOEXTEND_SIZE",
	"ENDS",
	"EVENTS",
	"GENERATED",
	"ALWAYS",
	"STORED",
	"VIRTUAL",
	"NVAR",
	"PASSWORD_LOCK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 35,
	641, 35,
	-2, 57,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	189, 1358,
	190, 1377,
	-2, 250,
	-1, 48,
	229, 827,
	230, 827,
	-2, 816,
	-1, 68,
	5, 62,
	-2, 43,
	-1, 489,
	1, 528,
	641, 528,
	-2, 526,
	-1, 512,
	177, 1748,
	-2, 1025,
	-1, 513,
	177, 1387,
	-2, 1381,
	-1, 514,
	177, 1388,
	-2, 1382,
	-1, 544,
	177, 1856,
	-2, 1276,
	-1, 545,
	177, 1937,
	-2, 1027,
	-1, 546,
	177, 1768,
	-2, 1028,
	-1, 613,
	177, 1719,
	-2, 1246,
	-1, 616,
	177, 1736,
	-2, 1175,
	-1, 617,
	177, 1949,
	-2, 1175,
	-1, 618,
	177, 1948,
	-2, 1175,
	-1, 619,
	177, 1947,
	-2, 1175,
	-1, 620,
	177, 1836,
	-2, 1175,
	-1, 621,
	177, 1837,
	-2, 1175,
	-1, 622,
	177, 1734,
	-2, 1175,
	-1, 623,
	177, 1735,
	-2, 1175,
	-1, 624,
	177, 1737,
	-2, 1175,
	-1, 872,
	100, 2047,
	177, 2047,
	-2, 1342,
	-1, 873,
	100, 2154,
	177, 2154,
	-2, 1343,
	-1, 878,
	100, 2071,
	177, 2071,
	-2, 1344,
	-1, 879,
	100, 2114,
	177, 2114,
	-2, 1345,
	-1, 880,
	100, 2115,
	177, 2115,
	-2, 1346,
	-1, 881,
	100, 1987,
	177, 1987,
	-2, 1350,
	-1, 883,
	100, 2092,
	177, 2092,
	-2, 1352,
	-1, 1037,
	349, 840,
	-2, 844,
	-1, 1039,
	349, 840,
	-2, 844,
	-1, 1142,
	5, 62,
	-2, 44,
	-1, 1147,
	1, 528,
	641, 528,
	-2, 526,
	-1, 1149,
	1, 529,
	641, 529,
	-2, 526,
	-1, 1413,
	1, 528,
	641, 528,
	-2, 526,
	-1, 1415,
	1, 528,
	641, 528,
	-2, 526,
	-1, 1882,
	177, 1390,
	-2, 1386,
	-1, 2002,
	1, 936,
	5, 936,
	12, 936,
	13, 936,
	14, 936,
	15, 936,
	17, 936,
	19, 936,
	29, 936,
	30, 936,
	56, 936,
	57, 936,
	58, 936,
	59, 936,
	60, 936,
	62, 936,
	63, 936,
	66, 936,
	67, 936,
	69, 936,
	70, 936,
	87, 936,
	413, 936,
	458, 936,
	641, 936,
	-2, 969,
	-1, 2010,
	67, 79,
	69, 79,
	-2, 83,
	-1, 2028,
	177, 1860,
	-2, 1347,
	-1, 2189,
	44, 706,
	196, 708,
	198, 706,
	199, 706,
	-2, 752,
	-1, 2238,
	5, 63,
	-2, 1057,
	-1, 2796,
	196, 709,
	-2, 707,
	-1, 2869,
	69, 1632,
	70, 1632,
	177, 1632,
	-2, 867,
	-1, 2895,
	1, 1011,
	5, 1011,
	12, 1011,
	13, 1011,
	14, 1011,
	15, 1011,
	17, 1011,
	19, 1011,
	29, 1011,
	30, 1011,
	56, 1011,
	57, 1011,
	58, 1011,
	59, 1011,
	60, 1011,
	62, 1011,
	63, 1011,
	66, 1011,
	67, 1011,
	69, 1011,
	70, 1011,
	87, 1011,
	413, 1011,
	458, 1011,
	641, 1011,
	-2, 969,
	-1, 3084,
	5, 63,
	-2, 1308,
	-1, 3187,
	41, 1397,
	-2, 1395,
	-1, 3410,
	5, 63,
	-2, 1311,
	-1, 3433,
	279, 316,
	-2, 1452,
	-1, 3434,
	279, 317,
	-2, 1493,
	-1, 3435,
	279, 318,
	-2, 1669,
	-1, 3608,
	95, 302,
	97, 302,
	99, 302,
	-2, 57,
	-1, 3640,
	97, 309,
	98, 309,
	99, 309,
	-2, 57,
}

const yyPrivate = 57344

const yyLast = 51456

var yyAct = [...]int{
	556, 77, 3558, 3600, 3588, 2437, 1164, 3438, 2578, 3539,
	444, 3540, 3499, 2025, 3560, 3402, 3458, 3337, 3, 3437,
	989, 2399, 485, 2398, 1247, 2769, 3340, 7, 3480, 3339,
	6, 3412, 3338, 5, 2958, 3300, 2740, 1343, 3341, 8,
	2905, 3256, 2693, 3125, 1828, 520, 3299, 516, 2604, 3187,
	2889, 2862, 3400, 2323, 1248, 2532, 3189, 80, 2779, 1448,
	2093, 2321, 2464, 3017, 505, 2753, 3332, 2863, 523, 2317,
	2111, 427, 430, 3011, 555, 1854, 481, 475, 77, 3041,
	2995, 3333, 2051, 2694, 2605, 2859, 469, 469, 2042, 1271,
	2385, 498, 1023, 2790, 92, 496, 1907, 533, 2389, 959,
	2006, 2871, 495, 2446, 1006, 1826, 2880, 105, 1847, 2683,
	1050, 2057, 519, 2348, 2188, 1999, 2306, 2548, 1998, 2079,
	1967, 2140, 1913, 2159, 1450, 2038, 1780, 1746, 952, 2299,
	1424, 2075, 2428, 1827, 2500, 2682, 877, 1165, 874, 1325,
	1321, 1958, 1172, 2002, 1079, 1168, 1058, 125, 951, 501,
	1324, 870, 871, 1884, 1002, 1186, 426, 2012, 1152, 1151,
	1785, 1150, 1148, 446, 447, 1758, 525, 484, 1759, 972,
	2055, 1057, 1419, 2390, 988, 68, 1416, 3640, 977, 82,
	490, 101, 3635, 97, 2406, 3627, 3608, 3606, 3583, 2410,
	3553, 3488, 79, 1176, 949, 3258, 3257, 2708, 1778, 2738,
	3166, 2988, 2909, 3637, 3633, 2415, 2414, 3631, 3570, 462,
	439, 456, 467, 450, 986, 36, 3164, 84, 36, 90,
	2996, 36, 36, 3398, 39, 1000, 3532, 2411, 36, 3308,
	2998, 3167, 2125, 457, 3179, 2586, 2458, 3502, 2599, 2125,
	3386, 2750, 2417, 3397, 2396, 3307, 2570, 3473, 3240, 3115,
	3109, 2950, 2397, 2608, 2906, 2665, 2600, 3122, 3123, 3225,
	2664, 75, 2319, 3509, 3537, 865, 866, 867, 1447, 483,
	974, 2421, 979, 980, 3280, 3454, 2276, 78, 2796, 2853,
	78, 971, 491, 78, 78, 1781, 2341, 3216, 982, 2340,
	78, 1841, 2342, 2027, 2400, 1203, 1202, 1212, 1213, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1204, 2647, 2648, 1214,
	2974, 3406, 1090, 2980, 2982, 2981, 2978, 2979, 2977, 2976,
	2975, 2158, 2938, 88, 86, 87, 2646, 3406, 1784, 3401,
	1156, 2384, 2983, 2984, 1010, 1011, 2022, 2023, 1014, 1844,
	1845, 2021, 119, 115, 116, 3001, 117, 3403, 956, 1037,
	78, 1404, 1782, 1783, 947, 1026, 1326, 2413, 1327, 511,
	2416, 1027, 1028, 3403, 514, 3238, 1802, 78, 1108, 441,
	438, 1012, 1013, 437, 2625, 1116, 2312, 2313, 2419, 121,
	120, 2053, 2054, 449, 448, 451, 2999, 3000, 3002, 3003,
	3004, 479, 2157, 455, 2308, 2311, 2312, 2313, 2309, 1076,
	2310, 2315, 3065, 2058, 2881, 2882, 2409, 968, 1033, 2058,
	459, 131, 3407, 2657, 131, 463, 2061, 2063, 2069, 2062,
	131, 2839, 2837, 2076, 77, 77, 2146, 2145, 3407, 466,
	472, 472, 418, 421, 131, 1405, 436, 122, 2677, 123,
	492, 1044, 496, 2490, 3598, 1823, 1822, 1821, 1764, 1048,
	1045, 480, 1820, 1047, 1040, 1819, 1046, 78, 131, 961,
	968, 1818, 538, 537, 540, 541, 542, 543, 1112, 1113,
	2453, 539, 1919, 2719, 2720, 2482, 3526, 3193, 131, 472,
	968, 961, 77, 1092, 2778, 2487, 1146, 2760, 1405, 131,
	1003, 2171, 3440, 1083, 1159, 3018, 3019, 3020, 3021, 3597,
	1034, 1035, 3165, 2308, 2311, 2312, 2313, 2309, 1405, 2310,
	2315, 3439, 2712, 1223, 1123, 3447, 1225, 1124, 3376, 1227,
	3374, 3284, 3274, 489, 3029, 3038, 452, 453, 454, 460,
	1792, 464, 465, 468, 1839, 2172, 2409, 3548, 1080, 3012,
	1024, 1092, 1025, 1027, 1028, 1813, 2457, 3015, 1239, 2455,
	3161, 1242, 1243, 1244, 1245, 1246, 2112, 1251, 3282, 3027,
	3592, 3013, 3014, 3485, 2412, 1092, 3483, 3484, 113, 2408,
	3154, 3159, 1422, 1834, 496, 2684, 2685, 3183, 3158, 1840,
	3157, 1009, 2686, 2763, 1224, 3156, 107, 107, 422, 118,
	3555, 1842, 3464, 1115, 1431, 1432, 1430, 1270, 112, 428,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 78, 1268, 1269, 1272, 1272, 1272,
	1278, 1272, 1272, 1278, 1272, 1278, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 2907, 2656, 1142, 3155, 440,
	2940, 2997, 114, 1784, 2422, 1099, 431, 132, 976, 975,
	3276, 133, 3153, 978, 134, 135, 3270, 3271, 2106, 2107,
	136, 2754, 2755, 2756, 2757, 2758, 2780, 1782, 1783, 3335,
	3099, 2737, 2549, 2165, 978, 2909, 3404, 3113, 109, 2631,
	3217, 2655, 3266, 3306, 3528, 2409, 1022, 1274, 1276, 432,
	1280, 1282, 3404, 1285, 3111, 2426, 3425, 3426, 3549, 3114,
	132, 2060, 2078, 1765, 133, 1968, 1097, 134, 135, 1041,
	3508, 2314, 497, 136, 1091, 497, 1084, 1019, 497, 497,
	132, 3180, 98, 2459, 133, 69, 1018, 134, 135, 3599,
	2456, 2314, 1143, 136, 131, 1158, 1098, 1125, 1094, 89,
	3162, 1193, 1093, 1100, 1101, 1103, 1104, 1105, 1106, 1107,
	1039, 1109, 1110, 1111, 2551, 1114, 3281, 1117, 1118, 1119,
	1120, 1121, 1102, 1130, 2196, 2190, 2191, 429, 2189, 2192,
	2193, 2102, 1095, 1096, 2688, 3182, 2407, 3275, 3375, 429,
	3248, 2762, 131, 3497, 2939, 2941, 2942, 2943, 2751, 2472,
	2473, 458, 1020, 1021, 2754, 2755, 2756, 2757, 2758, 1730,
	1786, 2101, 2714, 2717, 2687, 2199, 3254, 3564, 2715, 2716,
	3559, 424, 2929, 1760, 3604, 2930, 2697, 2931, 3622, 2198,
	2197, 968, 100, 3042, 3043, 2048, 3562, 131, 109, 968,
	968, 2518, 111, 110, 2048, 36, 1788, 3126, 968, 1787,
	2314, 958, 131, 2506, 2795, 3641, 3638, 425, 3628, 58,
	3609, 3128, 1189, 2050, 973, 74, 991, 3286, 39, 1140,
	3052, 491, 2326, 2328, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1088, 3053, 2776, 2481, 2477, 2461, 107, 2460, 2166,
	2050, 1436, 1434, 1042, 2096, 970, 2638, 108, 112, 429,
	2050, 2637, 2636, 969, 2475, 1155, 877, 78, 981, 389,
	3056, 877, 2553, 2876, 2050, 2050, 78, 2557, 2251, 2552,
	2248, 2550, 1229, 1230, 1228, 1226, 2555, 102, 2825, 103,
	2645, 2479, 2478, 3367, 2345, 2230, 3586, 3589, 3585, 2554,
	2219, 2393, 2181, 2122, 2105, 2103, 2017, 1857, 2121, 1136,
	1231, 1337, 1241, 1240, 2556, 2558, 1194, 3279, 1003, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1135, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1141,
	3127, 1426, 1400, 1401, 1402, 1403, 1001, 1036, 2027, 1214,
	1231, 469, 111, 110, 2962, 1338, 2195, 2337, 3602, 1329,
	1449, 3603, 2327, 3601, 1330, 1087, 1204, 2786, 2049, 1214,
	469, 2517, 1319, 2773, 1756, 2514, 2496, 429, 3301, 41,
	70, 45, 44, 47, 3079, 1228, 3561, 3563, 2494, 1425,
	3465, 3466, 3442, 1429, 3368, 2049, 1316, 1317, 3311, 3310,
	3051, 2513, 2506, 3462, 3463, 2049, 2510, 3169, 1407, 2509,
	2512, 48, 73, 72, 2525, 2963, 1850, 2300, 46, 2049,
	2049, 1410, 1747, 3057, 1185, 2244, 1008, 2506, 2787, 3328,
	1342, 968, 95, 2184, 2507, 2048, 3481, 2497, 3515, 99,
	3514, 1003, 1754, 3170, 1442, 1229, 1230, 1229, 1230, 2495,
	1207, 1208, 1209, 1210, 1211, 1204, 1029, 2585, 1214, 469,
	1731, 2878, 1737, 1738, 1739, 1740, 1741, 1891, 3443, 56,
	57, 2877, 3369, 1742, 1743, 1744, 1745, 94, 1339, 1776,
	2875, 2132, 1889, 1890, 1888, 2243, 65, 2242, 66, 1016,
	1183, 1184, 1182, 1811, 1773, 1438, 1335, 1855, 1856, 1795,
	1049, 1427, 1750, 1412, 1751, 1411, 1183, 1184, 1182, 1185,
	77, 1428, 984, 67, 2572, 77, 983, 93, 1959, 3626,
	1446, 1748, 1007, 1445, 1733, 1185, 1959, 496, 2264, 1735,
	1736, 1183, 1184, 1182, 1846, 1183, 1184, 1182, 1817, 3630,
	3550, 3370, 71, 3552, 52, 53, 60, 1414, 61, 3503,
	1185, 3028, 1031, 3022, 1185, 1762, 1182, 1761, 1962, 1038,
	1183, 1184, 1182, 1184, 1182, 1273, 1275, 1277, 1279, 1281,
	1283, 1284, 1286, 1185, 1768, 1769, 77, 2821, 1771, 1185,
	2133, 1185, 131, 3058, 3623, 1183, 1184, 1182, 1017, 1877,
	2153, 961, 3481, 496, 1774, 1848, 1790, 3612, 3589, 3611,
	1791, 1848, 1251, 1794, 1185, 1179, 1843, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1204, 2706, 1886, 1214, 78, 496,
	3632, 1911, 1885, 1917, 3372, 3573, 1935, 1918, 1920, 1887,
	1169, 1864, 3510, 1170, 1812, 1924, 1926, 1815, 3421, 3624,
	1203, 1202, 1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1204, 3379, 3371, 1214, 3277, 1944, 1947, 1838, 1836,
	1835, 1837, 1824, 3329, 1960, 2216, 2217, 2218, 2003, 1876,
	3241, 3373, 1203, 1202, 1212, 1213, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1204, 961, 131, 1214, 1908, 3177, 1909,
	1142, 3176, 2947, 1873, 472, 472, 2945, 3175, 472, 1183,
	1184, 1182, 3278, 2026, 3174, 131, 1793, 3482, 131, 1869,
	1871, 1872, 3168, 472, 472, 2434, 131, 1870, 1185, 877,
	3536, 1859, 69, 1183, 1184, 1182, 131, 131, 131, 131,
	131, 412, 2031, 1183, 1184, 1182, 2007, 1997, 2141, 2948,
	2987, 1753, 1185, 2946, 2986, 1860, 1816, 472, 1861, 2935,
	1831, 131, 1185, 2925, 1796, 2918, 2709, 1799, 1800, 1801,
	2433, 1803, 1804, 2431, 2420, 1805, 1082, 1996, 1973, 2010,
	1975, 1806, 2343, 1081, 2344, 1807, 1808, 3490, 1809, 1810,
	2033, 3489, 1055, 1923, 3444, 3441, 1927, 1928, 1929, 1930,
	1931, 1193, 1183, 1184, 1182, 3385, 3273, 3272, 3253, 3184,
	2574, 3152, 472, 472, 472, 1054, 3121, 961, 2119, 1956,
	3120, 1185, 2032, 2059, 990, 2064, 2065, 2066, 2067, 2068,
	2039, 3106, 3075, 2011, 3025, 2019, 2018, 3024, 2015, 2024,
	3023, 2985, 390, 2085, 2086, 2087, 2088, 472, 2944, 2034,
	2036, 2936, 472, 472, 2928, 2117, 2118, 3326, 538, 537,
	540, 541, 542, 543, 2089, 2090, 2091, 539, 1919, 131,
	2926, 961, 2922, 2921, 2920, 2047, 2081, 2082, 2083, 2084,
	131, 2785, 2725, 2528, 2527, 2498, 2077, 2429, 2113, 393,
	2154, 2127, 1770, 3478, 2115, 2116, 3477, 3283, 402, 410,
	411, 2123, 2072, 2073, 2074, 131, 1154, 3201, 2393, 3195,
	3049, 2858, 1189, 2815, 2811, 2797, 1883, 2764, 2467, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 399, 1452, 2097, 400, 2099, 2466,
	408, 409, 993, 994, 995, 996, 997, 998, 999, 2147,
	1147, 961, 2129, 961, 2128, 956, 961, 2246, 1910, 2228,
	1163, 1766, 1437, 961, 36, 961, 961, 538, 537, 540,
	541, 542, 543, 95, 1763, 131, 539, 1919, 58, 2255,
	1444, 1443, 1950, 1415, 74, 1413, 1077, 39, 1004, 435,
	433, 1122, 1963, 3135, 1163, 3135, 3512, 405, 1202, 1212,
	1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204, 2953,
	3495, 1214, 961, 961, 2326, 2328, 3391, 1163, 406, 1163,
	3469, 1163, 2953, 3450, 2953, 3387, 78, 1212, 1213, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1204, 3194, 1163, 1214,
	3145, 131, 131, 131, 3135, 3316, 2953, 3264, 2228, 1163,
	3135, 3231, 3367, 3135, 3134, 3088, 1163, 3639, 2180, 1163,
	2953, 2952, 2735, 2734, 1162, 2013, 961, 3144, 1203, 1202,
	1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204,
	2731, 2732, 1214, 2743, 391, 2728, 1203, 1202, 1212, 1213,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204, 2731, 2730,
	1214, 2303, 1163, 2168, 2167, 2727, 2183, 1933, 2151, 2726,
	2013, 1933, 1163, 1341, 1340, 81, 1278, 2302, 404, 394,
	395, 2014, 415, 2016, 1852, 2465, 396, 398, 1882, 392,
	414, 413, 2860, 2465, 2332, 2874, 1730, 2110, 41, 70,
	45, 44, 47, 1126, 2327, 1163, 1086, 1127, 1085, 1088,
	3529, 1086, 131, 3368, 3501, 2874, 3082, 2303, 131, 131,
	472, 472, 472, 1933, 2156, 131, 2014, 2303, 1730, 2228,
	48, 73, 72, 2125, 407, 1851, 2891, 46, 2109, 2744,
	2733, 2150, 2303, 2526, 2499, 2020, 2178, 2228, 2270, 2269,
	2874, 2126, 1772, 1203, 1202, 1212, 1213, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1204, 1088, 2124, 1214, 2130, 1853,
	2137, 2134, 1144, 948, 1814, 1779, 2139, 1730, 1435, 1433,
	1323, 2138, 78, 3422, 3388, 2890, 3297, 3198, 56, 57,
	3096, 3369, 2989, 2056, 2881, 2882, 3621, 2080, 2220, 2058,
	1080, 2705, 2076, 2383, 1092, 65, 2104, 66, 2071, 2070,
	1408, 1074, 2094, 2142, 2007, 443, 3619, 3577, 3575, 3541,
	2884, 2860, 1877, 2742, 2435, 1789, 1440, 1128, 1089, 2215,
	2888, 1882, 67, 2624, 2163, 78, 2621, 2619, 2623, 2149,
	2887, 2622, 2620, 2886, 2155, 2618, 2617, 502, 503, 3460,
	3396, 2529, 2205, 1863, 3452, 3085, 2170, 2213, 417, 2173,
	3370, 71, 2212, 52, 53, 60, 3222, 61, 1177, 1178,
	2162, 3048, 2956, 1912, 2810, 2809, 2724, 1886, 2723, 2722,
	2395, 2387, 474, 1885, 2699, 3288, 3291, 3384, 3383, 2177,
	3188, 3186, 3269, 3268, 434, 1767, 2524, 1175, 1936, 1937,
	1938, 2523, 2032, 2915, 1942, 1943, 1946, 1949, 2710, 1954,
	1955, 419, 420, 3171, 3172, 1961, 2208, 2206, 2207, 2901,
	1166, 2658, 2182, 1336, 2320, 1072, 1056, 1053, 1052, 2329,
	2330, 1167, 1005, 2003, 2225, 1966, 2003, 1969, 1970, 3593,
	3205, 496, 1974, 3204, 1976, 1977, 1154, 1855, 1856, 2325,
	1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991,
	1992, 1993, 2221, 3080, 2231, 2098, 1439, 3530, 1203, 1202,
	1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204,
	3030, 3377, 1214, 3190, 2961, 877, 1051, 3031, 2741, 1177,
	1178, 2211, 2007, 95, 2095, 1825, 1160, 1161, 3521, 2210,
	3520, 2007, 2333, 3519, 2007, 2334, 3149, 2176, 1032, 499,
	3446, 3445, 3395, 3381, 3320, 131, 2301, 2316, 3292, 2263,
	3221, 2650, 500, 81, 3394, 3303, 2465, 2440, 2441, 2442,
	3579, 3578, 131, 131, 131, 2169, 3060, 2783, 2488, 2486,
	3578, 69, 2485, 2252, 2249, 2174, 1749, 2148, 1180, 3579,
	3313, 2721, 1849, 948, 494, 3351, 51, 2392, 2394, 3596,
	2331, 1407, 3353, 19, 131, 83, 131, 3352, 18, 54,
	961, 3354, 20, 2471, 1, 961, 2164, 2335, 1329, 1797,
	2338, 3355, 21, 469, 3010, 2382, 3350, 15, 3009, 1425,
	3016, 2346, 2423, 2424, 2425, 2427, 2749, 961, 2856, 77,
	961, 3349, 14, 3343, 10, 2463, 3366, 34, 2752, 2846,
	3364, 33, 3363, 32, 3362, 28, 496, 2438, 3361, 27,
	3360, 26, 2452, 2855, 2430, 3358, 23, 2275, 2277, 3026,
	2432, 3357, 22, 961, 2283, 2284, 2285, 2286, 2388, 1423,
	2391, 3359, 24, 3160, 1915, 2462, 2492, 1203, 1202, 1212,
	1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204, 987,
	2454, 1214, 2108, 2469, 3348, 13, 3345, 12, 1078, 2222,
	2223, 2224, 1203, 1202, 1212, 1213, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1204, 2534, 2468, 1214, 3344, 11, 3342,
	9, 3382, 3287, 3289, 3185, 1877, 3033, 2579, 2994, 2993,
	2445, 2444, 2474, 2476, 1073, 1777, 2480, 2502, 1203, 1202,
	1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204,
	2601, 2603, 1214, 2505, 2003, 2003, 2003, 2003, 2003, 507,
	2530, 2256, 2257, 2258, 2491, 2503, 2120, 496, 2504, 2571,
	2194, 2320, 2175, 2632, 2602, 2508, 1129, 2519, 2520, 2040,
	3472, 2522, 3239, 2003, 3108, 2908, 2904, 2347, 496, 2627,
	2559, 2535, 2937, 2561, 2536, 1935, 2035, 2634, 2606, 3411,
	950, 2539, 91, 2143, 2131, 2541, 1015, 397, 2037, 2404,
	131, 3290, 2560, 2501, 2511, 2516, 1075, 2403, 131, 2418,
	2052, 131, 2007, 2007, 2007, 2007, 2007, 131, 1149, 2635,
	131, 131, 131, 1153, 2402, 2401, 3285, 2405, 1347, 2007,
	2534, 1345, 1346, 1344, 2641, 1349, 2643, 2644, 1348, 3572,
	3507, 2007, 2642, 401, 1331, 3432, 2857, 2707, 1181, 549,
	106, 2718, 55, 3050, 2515, 477, 478, 96, 104, 1862,
	2613, 2614, 2612, 2616, 403, 2615, 1222, 2209, 2339, 875,
	876, 1882, 2626, 868, 1831, 2483, 2201, 1145, 3309, 3453,
	3498, 3424, 1171, 2489, 3455, 3393, 3302, 2262, 1266, 2845,
	2639, 1957, 522, 2630, 3078, 3457, 1932, 1934, 2711, 961,
	1868, 131, 536, 2649, 1939, 535, 2759, 534, 961, 961,
	961, 531, 532, 2698, 472, 2700, 469, 3405, 2701, 2702,
	2703, 1858, 2704, 2598, 2089, 2745, 2091, 1196, 2736, 131,
	472, 509, 2001, 1994, 2152, 2307, 2305, 2304, 2770, 1441,
	1320, 2470, 1971, 1972, 2883, 2879, 2318, 472, 2005, 1978,
	1979, 1980, 1981, 2000, 2580, 2581, 2582, 2583, 2584, 2004,
	38, 2766, 3059, 2713, 1030, 2531, 423, 961, 2761, 2852,
	3215, 472, 2214, 961, 85, 493, 2739, 504, 2729, 472,
	25, 17, 1043, 16, 2187, 961, 961, 985, 1203, 1202,
	1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204,
	40, 2765, 1214, 42, 43, 2439, 2100, 3431, 3557, 1059,
	3587, 2851, 3479, 31, 131, 30, 2771, 29, 3356, 2768,
	3365, 3347, 3346, 3543, 961, 3542, 2538, 4, 1157, 76,
	35, 1452, 2793, 946, 2, 0, 0, 2822, 0, 0,
	0, 2865, 77, 0, 0, 0, 0, 1407, 2562, 2563,
	2794, 2564, 2565, 2814, 2788, 2566, 2812, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 2866, 0, 0, 2575,
	2576, 0, 2893, 0, 0, 0, 0, 2897, 2898, 2899,
	2820, 961, 0, 0, 0, 2606, 0, 0, 2861, 0,
	0, 0, 0, 2232, 2233, 2234, 2235, 2236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2873, 131, 131,
	131, 131, 131, 2835, 0, 2864, 0, 0, 0, 0,
	0, 131, 2261, 0, 0, 131, 0, 0, 2896, 131,
	2640, 0, 0, 0, 0, 0, 0, 131, 0, 2902,
	0, 0, 0, 0, 0, 2903, 2892, 2868, 0, 0,
	961, 0, 0, 0, 0, 2966, 2968, 2970, 2971, 0,
	2832, 2833, 2885, 2834, 0, 1173, 2836, 1174, 2838, 0,
	0, 0, 0, 0, 2894, 1195, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 2690, 2772, 2991, 961, 0,
	2777, 2913, 0, 0, 2781, 2782, 0, 2784, 496, 0,
	2964, 0, 0, 2802, 2807, 2990, 0, 0, 0, 0,
	2919, 0, 0, 0, 126, 0, 0, 416, 2927, 0,
	0, 1249, 0, 126, 3006, 3007, 3008, 2910, 2911, 2912,
	0, 0, 0, 0, 0, 0, 0, 486, 2957, 0,
	131, 0, 0, 0, 1882, 0, 0, 2932, 2933, 2934,
	0, 0, 508, 961, 961, 961, 0, 2949, 885, 2973,
	472, 126, 0, 0, 0, 131, 472, 0, 2951, 3044,
	3045, 3035, 0, 0, 0, 0, 3037, 0, 1267, 0,
	131, 126, 472, 2992, 961, 0, 472, 0, 3005, 0,
	472, 472, 126, 472, 3046, 1831, 0, 2770, 0, 3064,
	0, 0, 3034, 0, 0, 2792, 2954, 2955, 0, 0,
	2534, 0, 0, 3032, 2800, 2805, 961, 3061, 3062, 0,
	131, 961, 0, 3040, 2792, 2698, 0, 961, 0, 0,
	961, 961, 0, 3047, 3054, 0, 2089, 2824, 0, 2844,
	0, 0, 0, 0, 0, 0, 0, 3110, 3112, 3055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2606, 0, 0, 0, 0, 3098, 0, 2848, 2849, 2850,
	0, 3089, 3103, 3104, 3105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3081, 0, 3101,
	0, 0, 0, 0, 2691, 0, 0, 0, 0, 3090,
	0, 0, 3137, 0, 0, 2144, 961, 0, 961, 0,
	0, 0, 0, 0, 0, 1272, 1272, 1272, 1278, 1272,
	1272, 1278, 1272, 1278, 1287, 1288, 0, 0, 0, 0,
	3102, 0, 0, 2895, 3107, 0, 3147, 961, 1203, 1202,
	1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204,
	0, 3116, 1214, 0, 3119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2690, 3118, 0, 3148, 0,
	3130, 3131, 3146, 2690, 3124, 2179, 0, 3129, 0, 0,
	0, 0, 0, 0, 0, 3036, 0, 3132, 3133, 3150,
	0, 0, 3039, 0, 0, 2200, 0, 0, 0, 3206,
	0, 2003, 0, 0, 0, 1274, 1276, 2960, 1280, 1282,
	961, 1285, 0, 0, 0, 3151, 0, 0, 2972, 0,
	3173, 0, 0, 2865, 3163, 0, 2865, 3227, 3178, 0,
	0, 0, 0, 0, 3192, 3191, 0, 0, 0, 3181,
	2893, 0, 0, 0, 496, 0, 0, 131, 0, 961,
	0, 3226, 3243, 0, 3245, 3246, 3247, 126, 0, 2227,
	0, 2229, 3207, 2325, 0, 3234, 3210, 3196, 3197, 2007,
	3209, 3230, 0, 0, 0, 3203, 3220, 3224, 3199, 3200,
	0, 472, 0, 0, 2238, 2239, 2240, 2241, 472, 77,
	3223, 2245, 2247, 0, 2792, 2250, 0, 2864, 2253, 2254,
	2864, 0, 3233, 2259, 2260, 126, 496, 0, 3250, 2266,
	2267, 0, 2268, 3265, 3232, 2271, 2272, 0, 2273, 2274,
	2792, 3229, 2278, 2279, 2280, 2281, 2282, 3267, 0, 0,
	961, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 3066, 3067, 3068, 3069, 0, 0, 0,
	486, 3073, 0, 547, 3249, 3076, 3077, 0, 0, 0,
	3242, 0, 3244, 0, 0, 486, 2865, 0, 77, 0,
	0, 0, 0, 1734, 2691, 131, 3251, 0, 0, 3318,
	3319, 3295, 2691, 0, 0, 496, 0, 0, 3294, 0,
	3293, 0, 3315, 0, 1752, 961, 0, 0, 0, 0,
	3296, 0, 961, 961, 961, 0, 3304, 0, 77, 0,
	0, 3334, 0, 0, 0, 3336, 3312, 3314, 3322, 0,
	3324, 2690, 3327, 0, 0, 0, 0, 0, 3317, 0,
	0, 0, 0, 0, 3325, 0, 0, 0, 0, 1249,
	2864, 0, 0, 0, 884, 0, 0, 0, 953, 0,
	0, 0, 2965, 2967, 2969, 0, 0, 0, 961, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	992, 0, 0, 0, 0, 0, 3378, 3380, 0, 0,
	3389, 0, 3427, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 961, 3330, 0, 0, 0, 2606,
	0, 3415, 3409, 3413, 3408, 0, 3414, 0, 0, 0,
	0, 77, 127, 3423, 0, 0, 0, 3250, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 1865, 1866, 1867,
	0, 0, 0, 0, 3436, 0, 886, 3461, 961, 127,
	954, 0, 3474, 0, 0, 131, 0, 3451, 0, 0,
	3476, 3449, 0, 0, 0, 0, 0, 0, 0, 127,
	2542, 2543, 2544, 2545, 2546, 2547, 0, 0, 0, 0,
	127, 3470, 0, 961, 3448, 3467, 0, 3475, 3494, 0,
	0, 961, 0, 0, 0, 131, 0, 131, 469, 0,
	3486, 0, 0, 0, 0, 2690, 1249, 2690, 0, 0,
	0, 1940, 1941, 77, 0, 0, 0, 0, 0, 77,
	2691, 2690, 0, 0, 0, 0, 3525, 3259, 0, 0,
	961, 3506, 3518, 0, 0, 0, 0, 0, 3516, 3511,
	2770, 0, 3522, 3513, 3413, 0, 77, 3496, 3531, 3533,
	0, 77, 0, 0, 0, 0, 2628, 2629, 3535, 3567,
	0, 2579, 3523, 0, 3554, 3551, 3565, 3566, 496, 3569,
	3547, 0, 3568, 3546, 2026, 3556, 3545, 469, 3580, 77,
	3576, 3574, 3544, 77, 77, 472, 3582, 3571, 77, 0,
	2030, 3525, 3527, 961, 3298, 3590, 0, 0, 3581, 0,
	0, 0, 3584, 1273, 1275, 1277, 1279, 1281, 1283, 1284,
	1286, 0, 0, 3605, 77, 0, 0, 77, 2185, 2186,
	0, 3525, 3613, 0, 3615, 1322, 0, 0, 885, 0,
	0, 0, 0, 885, 0, 0, 3610, 77, 961, 77,
	961, 0, 961, 77, 3525, 0, 3525, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 77, 3629, 2092, 0, 3525, 77, 0, 0, 0,
	0, 77, 0, 3525, 0, 0, 0, 0, 3525, 0,
	3636, 2826, 2827, 2828, 2829, 2830, 0, 0, 0, 0,
	0, 0, 961, 0, 0, 0, 961, 0, 36, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 961, 2691, 0, 2691, 0, 74, 2843,
	0, 39, 3138, 0, 3139, 0, 3140, 3142, 126, 0,
	2691, 0, 0, 1418, 1421, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 126, 0,
	0, 126, 0, 0, 1418, 1421, 0, 0, 0, 1451,
	78, 0, 0, 0, 961, 0, 0, 0, 0, 126,
	126, 126, 126, 126, 2823, 0, 0, 0, 0, 0,
	0, 0, 0, 961, 0, 0, 3367, 2831, 0, 0,
	0, 3634, 0, 127, 1757, 0, 0, 0, 2840, 2841,
	2842, 0, 0, 0, 0, 2847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 961, 1203, 1202,
	1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204,
	0, 0, 1214, 0, 0, 0, 0, 0, 487, 0,
	2867, 0, 472, 0, 0, 0, 0, 0, 0, 961,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 961, 1190, 961, 0, 0, 0, 0, 961,
	0, 0, 41, 70, 45, 44, 47, 0, 2900, 0,
	0, 0, 961, 2569, 0, 0, 0, 3368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 486, 0, 48, 73, 72, 0, 0, 0,
	0, 46, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 472, 0, 0, 961, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	0, 0, 1451, 0, 0, 0, 0, 3594, 0, 2493,
	0, 0, 56, 57, 0, 3369, 0, 0, 0, 0,
	0, 0, 2521, 0, 0, 0, 0, 0, 0, 65,
	0, 66, 0, 3616, 0, 1916, 0, 0, 3620, 0,
	1203, 1202, 1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1204, 0, 0, 1214, 0, 67, 0, 486, 0,
	1916, 1916, 1916, 0, 0, 0, 1916, 1916, 1916, 1916,
	0, 1916, 1916, 0, 0, 0, 885, 1916, 0, 0,
	0, 0, 0, 0, 3370, 71, 0, 52, 53, 60,
	0, 61, 0, 0, 0, 0, 0, 1916, 1916, 1916,
	1916, 0, 0, 1916, 1916, 1916, 1916, 1916, 0, 0,
	0, 0, 1916, 1916, 1916, 1916, 1916, 1916, 1916, 1916,
	1916, 1916, 1916, 1916, 126, 126, 126, 0, 0, 0,
	0, 885, 0, 0, 0, 0, 0, 3070, 3071, 3072,
	0, 3074, 0, 0, 0, 1451, 0, 0, 0, 0,
	0, 2381, 0, 0, 3083, 3084, 0, 3086, 1173, 0,
	3087, 0, 0, 0, 884, 0, 0, 0, 0, 884,
	1332, 0, 0, 0, 2355, 0, 0, 0, 2651, 2652,
	2653, 2654, 2362, 3100, 2659, 2660, 2661, 2662, 2663, 0,
	0, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2568, 2678, 2679, 2680, 2681, 0, 2692, 0,
	0, 0, 0, 0, 0, 2349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2359, 0, 0,
	0, 0, 0, 0, 0, 126, 36, 0, 2237, 0,
	0, 126, 126, 0, 0, 0, 0, 0, 126, 3136,
	58, 0, 0, 0, 0, 0, 74, 0, 2350, 39,
	3141, 3143, 0, 1409, 2265, 69, 0, 0, 0, 1417,
	1420, 0, 0, 127, 0, 0, 886, 0, 2358, 0,
	0, 886, 0, 0, 0, 0, 0, 0, 0, 0,
	1417, 1420, 0, 0, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1203,
	1202, 1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1204, 0, 0, 1214, 3367, 0, 0, 0, 0, 3625,
	0, 0, 0, 0, 0, 0, 2363, 0, 0, 0,
	0, 0, 0, 2567, 0, 0, 2369, 0, 0, 0,
	0, 0, 0, 0, 0, 3211, 3212, 3213, 3214, 0,
	0, 0, 0, 0, 1406, 3218, 3219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	2361, 0, 0, 0, 0, 0, 1798, 0, 0, 0,
	0, 0, 3235, 3236, 3237, 0, 127, 0, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	41, 70, 45, 44, 47, 0, 0, 127, 127, 127,
	127, 127, 0, 0, 0, 3368, 0, 3260, 3261, 3262,
	0, 3263, 0, 0, 0, 0, 0, 0, 0, 2373,
	1833, 0, 48, 73, 72, 0, 0, 0, 0, 46,
	1203, 1202, 1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1204, 0, 0, 1214, 0, 2380, 0, 0, 0,
	0, 0, 0, 0, 0, 2381, 0, 0, 2366, 0,
	0, 0, 2914, 0, 2916, 2917, 0, 0, 1833, 2375,
	0, 2923, 2924, 0, 0, 0, 0, 0, 2355, 0,
	56, 57, 0, 3369, 3305, 0, 2362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 65, 0, 66,
	1833, 2356, 1833, 0, 0, 1921, 0, 0, 0, 0,
	0, 3321, 1922, 3323, 1833, 1833, 0, 0, 126, 0,
	0, 0, 0, 0, 67, 0, 0, 0, 3331, 2352,
	487, 2359, 1829, 0, 0, 2135, 2136, 126, 0, 0,
	0, 127, 884, 0, 0, 0, 2354, 0, 0, 2573,
	0, 0, 3370, 71, 0, 52, 53, 60, 2365, 61,
	0, 1964, 1965, 0, 0, 0, 127, 126, 3390, 486,
	2537, 0, 0, 1190, 0, 0, 0, 0, 3399, 0,
	1879, 0, 2358, 0, 3410, 0, 0, 0, 0, 0,
	0, 3416, 0, 3417, 3418, 3419, 3420, 884, 1203, 1202,
	1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204,
	0, 1833, 1214, 0, 0, 953, 0, 0, 2353, 2357,
	2360, 0, 2364, 2367, 2368, 2370, 2371, 2372, 2374, 2376,
	2377, 2378, 2379, 2226, 0, 548, 487, 0, 0, 0,
	2363, 0, 0, 0, 0, 1451, 0, 0, 0, 0,
	2369, 0, 0, 0, 886, 0, 0, 0, 0, 0,
	0, 1203, 1202, 1212, 1213, 1205, 1206, 1207, 1208, 1209,
	1210, 1211, 1204, 0, 0, 1214, 0, 0, 0, 0,
	3468, 0, 128, 3471, 2361, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 127, 127, 0, 0, 0, 0, 886,
	0, 1916, 0, 0, 0, 1916, 1916, 1916, 1916, 1916,
	0, 0, 3117, 1879, 0, 0, 0, 954, 0, 128,
	955, 0, 0, 69, 0, 0, 0, 3505, 0, 0,
	0, 0, 0, 2373, 1916, 0, 0, 0, 0, 128,
	2767, 0, 0, 0, 0, 0, 0, 0, 2351, 0,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3538, 0, 2366, 126, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 2375, 486, 0, 0, 0, 0, 0,
	126, 0, 0, 126, 2336, 1451, 2816, 885, 0, 0,
	0, 0, 0, 127, 0, 36, 37, 507, 0, 127,
	127, 0, 0, 0, 0, 2356, 127, 0, 0, 58,
	0, 0, 0, 0, 0, 74, 0, 0, 39, 62,
	63, 0, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 0, 2352, 0, 0, 0, 0, 0, 2854,
	0, 0, 0, 3617, 3618, 0, 0, 0, 0, 0,
	2354, 0, 1369, 49, 0, 0, 0, 78, 0, 0,
	0, 0, 2365, 0, 126, 0, 1198, 0, 1201, 0,
	0, 0, 0, 0, 0, 1215, 1216, 1217, 1218, 1219,
	1220, 1221, 0, 1199, 1200, 1197, 0, 0, 0, 0,
	0, 0, 126, 1203, 1202, 1212, 1213, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1204, 0, 0, 1214, 0, 0,
	0, 0, 0, 0, 3252, 0, 0, 0, 0, 0,
	0, 0, 2353, 2357, 2360, 0, 2364, 2367, 2368, 2370,
	2371, 2372, 2374, 2376, 2377, 2378, 2379, 1203, 1202, 1212,
	1213, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1204, 0,
	0, 1214, 0, 0, 0, 0, 1356, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 41,
	70, 45, 44, 47, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1916, 0,
	0, 0, 0, 0, 0, 0, 1916, 0, 1451, 0,
	0, 48, 73, 72, 0, 128, 0, 0, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1370, 2161,
	0, 0, 0, 0, 2161, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 56,
	57, 0, 2351, 0, 0, 0, 2161, 0, 0, 2161,
	885, 126, 126, 126, 126, 126, 65, 0, 66, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 126, 0,
	0, 0, 486, 0, 0, 0, 127, 1916, 0, 0,
	126, 0, 2204, 67, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 127, 0, 0, 0, 0,
	0, 0, 0, 1192, 0, 0, 0, 0, 0, 0,
	1249, 50, 71, 0, 52, 53, 60, 0, 61, 0,
	3091, 3092, 3093, 3094, 0, 127, 3095, 487, 0, 3097,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1383, 1386, 1387, 1388, 1389, 1390,
	1391, 0, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	0, 1371, 1372, 1373, 1374, 1350, 1354, 1384, 1351, 1357,
	1353, 1355, 1352, 126, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1879, 0, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 0, 0, 36, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 58, 0, 0, 0, 0, 0, 74, 0, 0,
	39, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3367, 507, 0, 0, 0,
	3607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1385, 0, 0, 0, 2436, 0,
	0, 0, 0, 0, 0, 0, 0, 2443, 2447, 2451,
	0, 127, 0, 0, 0, 0, 0, 885, 0, 127,
	0, 0, 487, 0, 0, 0, 0, 0, 127, 0,
	0, 127, 0, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2386, 0, 0,
	0, 41, 70, 45, 44, 47, 2161, 0, 0, 0,
	0, 0, 2484, 0, 0, 0, 3368, 0, 0, 0,
	0, 0, 0, 0, 1833, 1833, 0, 0, 0, 0,
	0, 0, 0, 48, 73, 72, 0, 0, 0, 0,
	46, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 1833, 0, 1249, 0, 0, 0,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 57, 0, 3369, 0, 0, 0, 0, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 65, 0,
	66, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3370, 71, 127, 52, 53, 60, 0,
	61, 0, 0, 0, 0, 0, 128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 128, 0, 0, 128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 128, 128,
	128, 128, 3428, 3429, 0, 0, 0, 2695, 486, 0,
	0, 0, 885, 0, 0, 0, 0, 1369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3456,
	3459, 0, 0, 0, 0, 0, 0, 0, 2607, 127,
	127, 127, 127, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 0, 0, 127, 3487, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 2746, 2747, 2748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2775, 1916, 0, 1916, 0, 1916, 1916,
	0, 0, 0, 0, 0, 0, 3517, 0, 0, 2696,
	0, 1356, 0, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 0, 2808, 3459, 0, 0, 0,
	2813, 128, 0, 0, 0, 0, 2817, 0, 0, 2818,
	2819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 0, 0,
	0, 127, 0, 1192, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 126, 508,
	0, 0, 0, 1370, 0, 0, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 36, 0, 884, 3614, 1833, 0, 2872, 0, 0,
	0, 0, 0, 0, 0, 58, 0, 0, 486, 0,
	486, 74, 0, 2386, 39, 2799, 2804, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 2872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 3591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 128, 128, 0, 0, 0, 0, 3367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 955, 0, 2959,
	0, 0, 0, 0, 0, 2607, 0, 1829, 0, 1383,
	1386, 1387, 1388, 1389, 1390, 1391, 0, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 0, 1371, 1372, 1373, 1374,
	1350, 1354, 1384, 1351, 1357, 1353, 1355, 1352, 2447, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 0, 0,
	0, 0, 126, 0, 0, 41, 70, 45, 44, 47,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3368, 0, 0, 128, 0, 0, 0, 0, 0, 128,
	128, 0, 0, 0, 0, 0, 128, 48, 73, 72,
	0, 0, 0, 0, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 0, 0, 0, 0, 0, 1833,
	0, 885, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 0, 74, 0, 0, 39, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 56, 57, 0, 3369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 884, 0,
	0, 0, 65, 0, 66, 78, 0, 0, 0, 1385,
	0, 0, 0, 0, 2959, 0, 0, 0, 0, 0,
	0, 2959, 2959, 2959, 0, 0, 0, 0, 0, 67,
	0, 3367, 0, 0, 0, 0, 3524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3370, 71, 0,
	52, 53, 60, 0, 61, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 0, 0,
	2607, 0, 0, 2695, 0, 0, 0, 41, 70, 45,
	44, 47, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3368, 0, 0, 0, 0, 0, 0, 36,
	0, 0, 0, 486, 0, 0, 0, 0, 0, 48,
	73, 72, 0, 58, 0, 0, 46, 0, 0, 74,
	0, 0, 39, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 0, 0, 0, 0, 3202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 486, 0, 2696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 0, 0, 0, 56, 57, 0,
	3369, 0, 3228, 0, 0, 0, 128, 0, 0, 0,
	2959, 0, 0, 0, 65, 2696, 66, 3367, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 3255,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3370,
	71, 0, 52, 53, 60, 0, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 41, 70, 45, 44, 47, 0, 0,
	0, 0, 2695, 0, 0, 0, 0, 0, 3368, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 487, 0,
	0, 0, 0, 1878, 0, 48, 73, 72, 0, 0,
	0, 0, 46, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2959, 0, 2959,
	0, 2959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 56, 57, 0, 3369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	65, 2695, 66, 0, 0, 3392, 0, 0, 0, 0,
	0, 0, 0, 0, 2696, 0, 0, 884, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3370, 71, 0, 52, 53,
	60, 128, 61, 0, 0, 0, 0, 0, 0, 128,
	127, 0, 0, 1833, 0, 0, 0, 0, 128, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2959, 0, 0, 2607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3500, 0,
	0, 0, 128, 0, 0, 0, 0, 0, 0, 0,
	0, 3504, 0, 1833, 0, 0, 0, 0, 2959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2696, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3500, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 128,
	128, 128, 128, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 0,
	0, 0, 0, 0, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 198, 0, 0, 0, 0, 0, 0,
	0, 2046, 2050, 0, 0, 255, 0, 964, 380, 344,
	275, 967, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 309, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2801, 2806, 0, 0, 0,
	0, 128, 0, 276, 0, 0, 0, 2049, 244, 155,
	0, 0, 0, 2043, 0, 2044, 2045, 252, 968, 156,
	0, 2041, 2048, 287, 0, 0, 143, 159, 254, 0,
	0, 0, 199, 957, 320, 0, 374, 963, 0, 319,
	256, 367, 0, 0, 373, 0, 351, 381, 385, 221,
	0, 190, 341, 212, 207, 0, 0, 0, 229, 308,
	202, 248, 0, 0, 0, 195, 0, 0, 0, 340,
	364, 161, 272, 365, 384, 179, 357, 273, 280, 192,
	194, 193, 173, 334, 363, 184, 197, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 230, 0, 0,
	378, 145, 329, 328, 0, 237, 0, 146, 137, 315,
	147, 245, 164, 0, 387, 178, 250, 358, 962, 224,
	286, 201, 0, 296, 0, 158, 311, 268, 270, 267,
	271, 227, 141, 148, 0, 313, 331, 362, 180, 347,
	139, 140, 142, 150, 322, 151, 152, 0, 262, 216,
	220, 231, 242, 0, 318, 348, 379, 0, 175, 167,
	350, 372, 185, 330, 333, 386, 0, 174, 169, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 226, 0, 370, 371, 200, 388, 0,
	0, 170, 0, 0, 283, 291, 282, 0, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 219, 233,
	306, 258, 307, 234, 278, 277, 279, 260, 0, 0,
	165, 0, 345, 0, 0, 349, 182, 0, 128, 361,
	144, 312, 183, 225, 217, 305, 281, 176, 236, 343,
	249, 257, 0, 0, 295, 321, 189, 376, 342, 213,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 154, 0, 0, 0, 196, 132, 0,
	0, 0, 133, 1732, 0, 134, 135, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 166,
	177, 188, 206, 204, 218, 246, 269, 274, 300, 332,
	337, 352, 353, 354, 355, 208, 0, 211, 187, 316,
	186, 259, 239, 301, 359, 360, 0, 160, 171, 253,
	0, 314, 223, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 582, 583,
	584, 585, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 595, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 377, 205, 0, 0, 0, 172, 181, 191, 203,
	215, 222, 232, 235, 240, 241, 243, 247, 261, 263,
	264, 265, 266, 284, 285, 289, 290, 293, 294, 297,
	298, 299, 303, 304, 310, 149, 317, 323, 324, 325,
	326, 327, 335, 336, 338, 339, 346, 368, 369, 382,
	383, 0, 0, 157, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 844,
	0, 356, 606, 848, 691, 714, 857, 720, 722, 785,
	667, 762, 292, 711, 668, 0, 128, 659, 515, 660,
	692, 210, 512, 818, 763, 846, 748, 778, 788, 209,
	198, 755, 754, 835, 703, 702, 783, 831, 845, 0,
	0, 614, 255, 0, 0, 380, 344, 275, 0, 0,
	746, 0, 599, 600, 731, 787, 679, 774, 850, 712,
	779, 851, 78, 0, 1163, 0, 513, 538, 537, 540,
	541, 542, 543, 0, 0, 138, 539, 544, 545, 546,
	0, 741, 784, 862, 658, 510, 529, 663, 613, 0,
	836, 699, 700, 214, 0, 0, 0, 0, 0, 0,
	0, 744, 761, 803, 728, 375, 790, 799, 813, 721,
	309, 228, 0, 0, 0, 0, 526, 527, 1914, 0,
	0, 0, 629, 0, 528, 0, 673, 524, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	530, 0, 0, 0, 678, 656, 697, 805, 657, 655,
	276, 670, 602, 834, 729, 244, 155, 840, 727, 627,
	793, 674, 822, 715, 252, 672, 156, 669, 675, 713,
	287, 802, 808, 611, 159, 254, 819, 693, 706, 199,
	128, 320, 780, 374, 518, 766, 319, 256, 367, 794,
	842, 373, 716, 351, 381, 385, 221, 749, 190, 341,
	212, 207, 698, 812, 662, 229, 308, 202, 248, 732,
	786, 694, 195, 797, 773, 824, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 820, 807, 826, 689, 676, 681,
	677, 705, 843, 238, 230, 827, 825, 378, 145, 329,
	328, 719, 237, 810, 146, 137, 315, 147, 245, 164,
	830, 387, 178, 250, 358, 517, 224, 286, 201, 782,
	296, 704, 158, 311, 268, 270, 267, 271, 227, 141,
	148, 806, 313, 331, 362, 180, 347, 139, 140, 142,
	150, 322, 151, 152, 849, 262, 216, 220, 231, 242,
	781, 318, 348, 379, 775, 175, 167, 350, 372, 185,
	330, 333, 386, 804, 174, 169, 838, 821, 768, 734,
	740, 664, 0, 168, 800, 696, 708, 688, 776, 687,
	226, 792, 370, 371, 200, 388, 605, 853, 170, 671,
	852, 283, 291, 282, 855, 366, 839, 769, 758, 756,
	665, 837, 767, 757, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 760, 0, 165, 0, 345,
	847, 864, 349, 182, 682, 814, 361, 144, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 796,
	861, 295, 321, 189, 376, 342, 213, 616, 288, 628,
	622, 624, 623, 620, 621, 619, 618, 617, 630, 603,
	604, 607, 608, 609, 751, 841, 666, 612, 817, 625,
	626, 789, 859, 601, 196, 550, 642, 643, 644, 551,
	645, 646, 552, 553, 647, 648, 649, 650, 554, 651,
	652, 653, 631, 632, 633, 634, 635, 636, 637, 638,
	641, 639, 640, 0, 747, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 610, 160, 171, 253, 860, 314, 223,
	654, 661, 680, 683, 684, 685, 686, 690, 695, 701,
	707, 709, 710, 718, 723, 724, 725, 726, 733, 735,
	736, 737, 738, 739, 742, 743, 745, 752, 753, 759,
	764, 765, 771, 772, 0, 795, 798, 615, 809, 811,
	815, 816, 823, 828, 829, 854, 858, 863, 377, 205,
	750, 770, 801, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 149, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 833, 730,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 717,
	162, 832, 856, 777, 791, 844, 0, 356, 606, 848,
	691, 714, 857, 720, 722, 785, 667, 762, 292, 711,
	668, 0, 0, 659, 515, 660, 692, 210, 512, 818,
	763, 846, 748, 778, 788, 209, 198, 755, 754, 835,
	703, 702, 783, 831, 845, 0, 0, 614, 255, 0,
	0, 380, 344, 275, 0, 0, 746, 0, 599, 600,
	731, 787, 679, 774, 850, 712, 779, 851, 78, 0,
	0, 0, 513, 538, 537, 540, 541, 542, 543, 0,
	0, 138, 539, 544, 545, 546, 0, 741, 784, 862,
	658, 510, 529, 663, 613, 0, 836, 699, 700, 214,
	0, 0, 0, 0, 0, 0, 0, 744, 761, 803,
	728, 375, 790, 799, 813, 721, 309, 228, 0, 0,
	0, 0, 526, 527, 506, 0, 0, 0, 629, 0,
	528, 0, 673, 524, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 530, 0, 0, 0,
	678, 656, 697, 805, 657, 655, 276, 670, 602, 834,
	729, 244, 155, 840, 727, 627, 793, 674, 822, 715,
	252, 672, 156, 669, 675, 713, 287, 802, 808, 611,
	159, 254, 819, 693, 706, 199, 0, 320, 780, 374,
	518, 766, 319, 256, 367, 794, 842, 373, 716, 351,
	381, 385, 221, 749, 190, 341, 212, 207, 698, 812,
	662, 229, 308, 202, 248, 732, 786, 694, 195, 797,
	773, 824, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	820, 807, 826, 689, 676, 681, 677, 705, 843, 238,
	230, 827, 825, 378, 145, 329, 328, 719, 237, 810,
	146, 137, 315, 147, 245, 164, 830, 387, 178, 250,
	358, 517, 224, 286, 201, 782, 296, 704, 158, 311,
	268, 270, 267, 271, 227, 141, 148, 806, 313, 331,
	362, 180, 347, 139, 140, 142, 150, 322, 151, 152,
	849, 262, 216, 220, 231, 242, 781, 318, 348, 379,
	775, 175, 167, 350, 372, 185, 330, 333, 386, 804,
	174, 169, 838, 821, 768, 734, 740, 664, 0, 168,
	800, 696, 708, 688, 776, 687, 226, 792, 370, 371,
	200, 388, 605, 853, 170, 671, 852, 283, 291, 282,
	855, 366, 839, 769, 758, 756, 665, 837, 767, 757,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 760, 0, 165, 0, 345, 847, 864, 349, 182,
	682, 814, 361, 144, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 796, 861, 295, 321, 189,
	376, 342, 213, 616, 288, 628, 622, 624, 623, 620,
	621, 619, 618, 617, 630, 603, 604, 607, 608, 609,
	751, 841, 666, 612, 817, 625, 626, 789, 859, 601,
	196, 550, 642, 643, 644, 551, 645, 646, 552, 553,
	647, 648, 649, 650, 554, 651, 652, 653, 631, 632,
	633, 634, 635, 636, 637, 638, 641, 639, 640, 0,
	747, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 610,
	160, 171, 253, 860, 314, 223, 654, 661, 680, 683,
	684, 685, 686, 690, 695, 701, 707, 709, 710, 718,
	723, 724, 725, 726, 733, 735, 736, 737, 738, 739,
	742, 743, 745, 752, 753, 759, 764, 765, 771, 772,
	0, 795, 798, 615, 809, 811, 815, 816, 823, 828,
	829, 854, 858, 863, 377, 205, 750, 770, 801, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 149, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 833, 730, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 717, 162, 832, 856, 777,
	791, 844, 0, 356, 606, 848, 691, 714, 857, 720,
	722, 785, 667, 762, 292, 711, 668, 0, 0, 659,
	515, 660, 692, 210, 512, 818, 763, 846, 748, 778,
	788, 209, 198, 755, 754, 835, 703, 702, 783, 831,
	845, 0, 0, 614, 255, 0, 0, 380, 344, 275,
	0, 0, 746, 0, 599, 600, 731, 787, 679, 774,
	850, 712, 779, 851, 78, 0, 1163, 0, 513, 538,
	537, 540, 541, 542, 543, 0, 0, 138, 539, 544,
	545, 546, 0, 741, 784, 862, 658, 510, 529, 663,
	613, 0, 836, 699, 700, 214, 0, 0, 0, 0,
	0, 0, 0, 744, 761, 803, 728, 375, 790, 799,
	813, 721, 309, 228, 0, 0, 0, 0, 526, 527,
	0, 0, 0, 0, 629, 0, 528, 0, 673, 524,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 530, 0, 0, 0, 678, 656, 697, 805,
	657, 655, 276, 670, 602, 834, 729, 244, 155, 840,
	727, 627, 793, 674, 822, 715, 252, 672, 156, 669,
	675, 713, 287, 802, 808, 611, 159, 254, 819, 693,
	706, 199, 0, 320, 780, 374, 518, 766, 319, 256,
	367, 794, 842, 373, 716, 351, 381, 385, 221, 749,
	190, 341, 212, 207, 698, 812, 662, 229, 308, 202,
	248, 732, 786, 694, 195, 797, 773, 824, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 820, 807, 826, 689,
	676, 681, 677, 705, 843, 238, 230, 827, 825, 378,
	145, 329, 328, 719, 237, 810, 146, 137, 315, 147,
	245, 164, 830, 387, 178, 250, 358, 517, 224, 286,
	201, 782, 296, 704, 158, 311, 268, 270, 267, 271,
	227, 141, 148, 806, 313, 331, 362, 180, 347, 139,
	140, 142, 150, 322, 151, 152, 849, 262, 216, 220,
	231, 242, 781, 318, 348, 379, 775, 175, 167, 350,
	372, 185, 330, 333, 386, 804, 174, 169, 838, 821,
	768, 734, 740, 664, 0, 168, 800, 696, 708, 688,
	776, 687, 226, 792, 370, 371, 200, 388, 605, 853,
	170, 671, 852, 283, 291, 282, 855, 366, 839, 769,
	758, 756, 665, 837, 767, 757, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 760, 0, 165,
	0, 345, 847, 864, 349, 182, 682, 814, 361, 144,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 796, 861, 295, 321, 189, 376, 342, 213, 616,
	288, 628, 622, 624, 623, 620, 621, 619, 618, 617,
	630, 603, 604, 607, 608, 609, 751, 841, 666, 612,
	817, 625, 626, 789, 859, 601, 196, 550, 642, 643,
	644, 551, 645, 646, 552, 553, 647, 648, 649, 650,
	554, 651, 652, 653, 631, 632, 633, 634, 635, 636,
	637, 638, 641, 639, 640, 0, 747, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 610, 160, 171, 253, 860,
	314, 223, 654, 661, 680, 683, 684, 685, 686, 690,
	695, 701, 707, 709, 710, 718, 723, 724, 725, 726,
	733, 735, 736, 737, 738, 739, 742, 743, 745, 752,
	753, 759, 764, 765, 771, 772, 0, 795, 798, 615,
	809, 811, 815, 816, 823, 828, 829, 854, 858, 863,
	377, 205, 750, 770, 801, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 149, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	833, 730, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 717, 162, 832, 856, 777, 791, 844, 0, 356,
	606, 848, 691, 714, 857, 720, 722, 785, 667, 762,
	292, 711, 668, 0, 0, 659, 515, 660, 692, 210,
	512, 818, 763, 846, 748, 778, 788, 209, 198, 755,
	754, 835, 703, 702, 783, 831, 845, 0, 0, 614,
	255, 0, 0, 380, 344, 275, 0, 0, 746, 0,
	599, 600, 731, 787, 679, 774, 850, 712, 779, 851,
	78, 0, 0, 0, 513, 538, 537, 540, 541, 542,
	543, 0, 0, 138, 539, 544, 545, 546, 0, 741,
	784, 862, 658, 510, 529, 663, 613, 0, 836, 699,
	700, 214, 0, 0, 0, 0, 0, 0, 0, 744,
	761, 803, 728, 375, 790, 799, 813, 721, 309, 228,
	0, 0, 0, 0, 526, 527, 1914, 0, 0, 0,
	629, 0, 528, 0, 673, 524, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 530, 0,
	0, 0, 678, 656, 697, 805, 657, 655, 276, 670,
	602, 834, 729, 244, 155, 840, 727, 627, 793, 674,
	822, 715, 252, 672, 156, 669, 675, 713, 287, 802,
	808, 611, 159, 254, 819, 693, 706, 199, 0, 320,
	780, 374, 518, 766, 319, 256, 367, 794, 842, 373,
	716, 351, 381, 385, 221, 749, 190, 341, 212, 207,
	698, 812, 662, 229, 308, 202, 248, 732, 786, 694,
	195, 797, 773, 824, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 820, 807, 826, 689, 676, 681, 677, 705,
	843, 238, 230, 827, 825, 378, 145, 329, 328, 719,
	237, 810, 146, 137, 315, 147, 245, 164, 830, 387,
	178, 250, 358, 517, 224, 286, 201, 782, 296, 704,
	158, 311, 268, 270, 267, 271, 227, 141, 148, 806,
	313, 331, 362, 180, 347, 139, 140, 142, 150, 322,
	151, 152, 849, 262, 216, 220, 231, 242, 781, 318,
	348, 379, 775, 175, 167, 350, 372, 185, 330, 333,
	386, 804, 174, 169, 838, 821, 768, 734, 740, 664,
	0, 168, 800, 696, 708, 688, 776, 687, 226, 792,
	370, 371, 200, 388, 605, 853, 170, 671, 852, 283,
	291, 282, 855, 366, 839, 769, 758, 756, 665, 837,
	767, 757, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 760, 0, 165, 0, 345, 847, 864,
	349, 182, 682, 814, 361, 144, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 796, 861, 295,
	321, 189, 376, 342, 213, 616, 288, 628, 622, 624,
	623, 620, 621, 619, 618, 617, 630, 603, 604, 607,
	608, 609, 751, 841, 666, 612, 817, 625, 626, 789,
	859, 601, 196, 550, 642, 643, 644, 551, 645, 646,
	552, 553, 647, 648, 649, 650, 554, 651, 652, 653,
	631, 632, 633, 634, 635, 636, 637, 638, 641, 639,
	640, 0, 747, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 610, 160, 171, 253, 860, 314, 223, 654, 661,
	680, 683, 684, 685, 686, 690, 695, 701, 707, 709,
	710, 718, 723, 724, 725, 726, 733, 735, 736, 737,
	738, 739, 742, 743, 745, 752, 753, 759, 764, 765,
	771, 772, 0, 795, 798, 615, 809, 811, 815, 816,
	823, 828, 829, 854, 858, 863, 377, 205, 750, 770,
	801, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	149, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 833, 730, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 717, 162, 832,
	856, 777, 791, 844, 0, 356, 606, 848, 691, 714,
	857, 720, 722, 785, 667, 762, 292, 711, 668, 0,
	0, 659, 515, 660, 692, 210, 512, 818, 763, 846,
	748, 778, 788, 209, 198, 755, 754, 835, 703, 702,
	783, 831, 845, 0, 0, 614, 255, 0, 0, 380,
	344, 275, 0, 0, 746, 0, 599, 600, 731, 787,
	679, 774, 850, 712, 2028, 851, 78, 0, 0, 0,
	513, 538, 537, 540, 541, 542, 543, 0, 0, 138,
	539, 544, 545, 546, 2029, 741, 784, 862, 658, 510,
	529, 663, 613, 0, 836, 699, 700, 214, 0, 0,
	0, 0, 0, 0, 0, 744, 761, 803, 728, 375,
	790, 799, 813, 721, 309, 228, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 0, 629, 0, 528, 0,
	673, 524, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 530, 0, 0, 0, 678, 656,
	697, 805, 657, 655, 276, 670, 602, 834, 729, 244,
	155, 840, 727, 627, 793, 674, 822, 715, 252, 672,
	156, 669, 675, 713, 287, 802, 808, 611, 159, 254,
	819, 693, 706, 199, 0, 320, 780, 374, 518, 766,
	319, 256, 367, 794, 842, 373, 716, 351, 381, 385,
	221, 749, 190, 341, 212, 207, 698, 812, 662, 229,
	308, 202, 248, 732, 786, 694, 195, 797, 773, 824,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 820, 807,
	826, 689, 676, 681, 677, 705, 843, 238, 230, 827,
	825, 378, 145, 329, 328, 719, 237, 810, 146, 137,
	315, 147, 245, 164, 830, 387, 178, 250, 358, 517,
	224, 286, 201, 782, 296, 704, 158, 311, 268, 270,
	267, 271, 227, 141, 148, 806, 313, 331, 362, 180,
	347, 139, 140, 142, 150, 322, 151, 152, 849, 262,
	216, 220, 231, 242, 781, 318, 348, 379, 775, 175,
	167, 350, 372, 185, 330, 333, 386, 804, 174, 169,
	838, 821, 768, 734, 740, 664, 0, 168, 800, 696,
	708, 688, 776, 687, 226, 792, 370, 371, 200, 388,
	605, 853, 170, 671, 852, 283, 291, 282, 855, 366,
	839, 769, 758, 756, 665, 837, 767, 757, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 760,
	0, 165, 0, 345, 847, 864, 349, 182, 682, 814,
	361, 144, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 796, 861, 295, 321, 189, 376, 342,
	213, 616, 288, 628, 622, 624, 623, 620, 621, 619,
	618, 617, 630, 603, 604, 607, 608, 609, 751, 841,
	666, 612, 817, 625, 626, 789, 859, 601, 196, 550,
	642, 643, 644, 551, 645, 646, 552, 553, 647, 648,
	649, 650, 554, 651, 652, 653, 631, 632, 633, 634,
	635, 636, 637, 638, 641, 639, 640, 0, 747, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 610, 160, 171,
	253, 860, 314, 223, 654, 661, 680, 683, 684, 685,
	686, 690, 695, 701, 707, 709, 710, 718, 723, 724,
	725, 726, 733, 735, 736, 737, 738, 739, 742, 743,
	745, 752, 753, 759, 764, 765, 771, 772, 0, 795,
	798, 615, 809, 811, 815, 816, 823, 828, 829, 854,
	858, 863, 377, 205, 750, 770, 801, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 149, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 833, 730, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 717, 162, 832, 856, 777, 791, 844,
	0, 356, 606, 848, 691, 714, 857, 720, 722, 785,
	667, 762, 292, 711, 668, 0, 0, 659, 904, 660,
	692, 210, 902, 818, 763, 846, 748, 778, 788, 209,
	198, 755, 754, 835, 703, 702, 783, 831, 845, 0,
	0, 614, 255, 0, 0, 380, 344, 275, 0, 0,
	746, 0, 599, 600, 731, 787, 679, 774, 850, 712,
	779, 851, 78, 0, 1163, 0, 513, 538, 537, 540,
	541, 542, 543, 0, 0, 138, 539, 544, 545, 546,
	0, 741, 784, 862, 658, 921, 529, 663, 613, 0,
	836, 699, 700, 214, 0, 0, 0, 0, 0, 0,
	0, 744, 761, 803, 728, 375, 790, 799, 813, 721,
	309, 228, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 629, 0, 528, 0, 673, 524, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	530, 0, 0, 0, 678, 656, 697, 805, 657, 655,
	276, 670, 602, 834, 729, 244, 155, 840, 727, 627,
	793, 674, 822, 715, 252, 672, 156, 669, 675, 713,
	287, 802, 808, 611, 159, 254, 819, 693, 706, 199,
	0, 320, 780, 374, 518, 766, 319, 256, 367, 794,
	842, 373, 716, 351, 381, 385, 221, 749, 190, 341,
	212, 207, 698, 812, 662, 229, 308, 202, 248, 732,
	786, 694, 195, 797, 773, 824, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 820, 807, 826, 689, 676, 681,
	677, 705, 843, 238, 230, 827, 825, 378, 145, 329,
	328, 719, 237, 810, 146, 137, 315, 147, 245, 164,
	830, 387, 178, 250, 358, 517, 224, 286, 201, 782,
	296, 704, 158, 311, 268, 270, 267, 271, 227, 141,
	148, 806, 313, 331, 362, 180, 347, 139, 140, 142,
	150, 322, 151, 152, 849, 262, 216, 220, 231, 242,
	781, 318, 348, 379, 775, 175, 167, 350, 372, 185,
	330, 333, 386, 804, 174, 169, 838, 821, 768, 734,
	740, 664, 0, 168, 800, 696, 708, 688, 776, 687,
	226, 792, 370, 371, 200, 388, 605, 853, 170, 671,
	852, 283, 291, 282, 855, 366, 839, 769, 758, 756,
	665, 837, 767, 757, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 760, 0, 165, 0, 345,
	847, 864, 349, 182, 682, 814, 361, 144, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 796,
	861, 295, 321, 189, 376, 342, 213, 616, 288, 628,
	622, 624, 623, 620, 621, 619, 618, 617, 630, 603,
	604, 607, 608, 609, 751, 841, 666, 612, 817, 625,
	626, 789, 859, 601, 196, 550, 642, 643, 644, 551,
	645, 646, 552, 553, 647, 648, 649, 650, 554, 651,
	652, 653, 631, 632, 633, 634, 635, 636, 637, 638,
	641, 639, 640, 0, 747, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 610, 160, 171, 253, 860, 314, 223,
	654, 661, 680, 683, 684, 685, 686, 690, 695, 701,
	707, 709, 710, 718, 723, 724, 725, 726, 733, 735,
	736, 737, 738, 739, 742, 743, 745, 752, 753, 759,
	764, 765, 771, 772, 0, 795, 798, 615, 809, 811,
	815, 816, 823, 828, 829, 854, 858, 863, 377, 205,
	750, 770, 801, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 149, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 833, 730,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 717,
	162, 832, 856, 777, 791, 844, 0, 356, 606, 848,
	691, 714, 857, 720, 722, 785, 667, 762, 292, 711,
	668, 0, 0, 659, 515, 660, 692, 210, 512, 818,
	763, 846, 748, 778, 788, 209, 198, 755, 754, 835,
	703, 702, 783, 831, 845, 0, 0, 614, 255, 0,
	0, 380, 344, 275, 0, 0, 746, 0, 599, 600,
	731, 787, 679, 774, 850, 712, 779, 851, 78, 0,
	0, 0, 513, 538, 1948, 540, 541, 542, 543, 0,
	0, 138, 539, 544, 545, 546, 0, 741, 784, 862,
	658, 510, 529, 663, 613, 0, 836, 699, 700, 214,
	0, 0, 0, 0, 0, 0, 0, 744, 761, 803,
	728, 375, 790, 799, 813, 721, 309, 228, 0, 0,
	0, 0, 526, 527, 1914, 0, 0, 0, 629, 0,
	528, 0, 673, 524, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 530, 0, 0, 0,
	678, 656, 697, 805, 657, 655, 276, 670, 602, 834,
	729, 244, 155, 840, 727, 627, 793, 674, 822, 715,
	252, 672, 156, 669, 675, 713, 287, 802, 808, 611,
	159, 254, 819, 693, 706, 199, 0, 320, 780, 374,
	518, 766, 319, 256, 367, 794, 842, 373, 716, 351,
	381, 385, 221, 749, 190, 341, 212, 207, 698, 812,
	662, 229, 308, 202, 248, 732, 786, 694, 195, 797,
	773, 824, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	820, 807, 826, 689, 676, 681, 677, 705, 843, 238,
	230, 827, 825, 378, 145, 329, 328, 719, 237, 810,
	146, 137, 315, 147, 245, 164, 830, 387, 178, 250,
	358, 517, 224, 286, 201, 782, 296, 704, 158, 311,
	268, 270, 267, 271, 227, 141, 148, 806, 313, 331,
	362, 180, 347, 139, 140, 142, 150, 322, 151, 152,
	849, 262, 216, 220, 231, 242, 781, 318, 348, 379,
	775, 175, 167, 350, 372, 185, 330, 333, 386, 804,
	174, 169, 838, 821, 768, 734, 740, 664, 0, 168,
	800, 696, 708, 688, 776, 687, 226, 792, 370, 371,
	200, 388, 605, 853, 170, 671, 852, 283, 291, 282,
	855, 366, 839, 769, 758, 756, 665, 837, 767, 757,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 760, 0, 165, 0, 345, 847, 864, 349, 182,
	682, 814, 361, 144, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 796, 861, 295, 321, 189,
	376, 342, 213, 616, 288, 628, 622, 624, 623, 620,
	621, 619, 618, 617, 630, 603, 604, 607, 608, 609,
	751, 841, 666, 612, 817, 625, 626, 789, 859, 601,
	196, 550, 642, 643, 644, 551, 645, 646, 552, 553,
	647, 648, 649, 650, 554, 651, 652, 653, 631, 632,
	633, 634, 635, 636, 637, 638, 641, 639, 640, 0,
	747, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 610,
	160, 171, 253, 860, 314, 223, 654, 661, 680, 683,
	684, 685, 686, 690, 695, 701, 707, 709, 710, 718,
	723, 724, 725, 726, 733, 735, 736, 737, 738, 739,
	742, 743, 745, 752, 753, 759, 764, 765, 771, 772,
	0, 795, 798, 615, 809, 811, 815, 816, 823, 828,
	829, 854, 858, 863, 377, 205, 750, 770, 801, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 149, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 833, 730, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 717, 162, 832, 856, 777,
	791, 844, 0, 356, 606, 848, 691, 714, 857, 720,
	722, 785, 667, 762, 292, 711, 668, 0, 0, 659,
	515, 660, 692, 210, 512, 818, 763, 846, 748, 778,
	788, 209, 198, 755, 754, 835, 703, 702, 783, 831,
	845, 0, 0, 614, 255, 0, 0, 380, 344, 275,
	0, 0, 746, 0, 599, 600, 731, 787, 679, 774,
	850, 712, 779, 851, 78, 0, 0, 0, 513, 538,
	1945, 540, 541, 542, 543, 0, 0, 138, 539, 544,
	545, 546, 0, 741, 784, 862, 658, 510, 529, 663,
	613, 0, 836, 699, 700, 214, 0, 0, 0, 0,
	0, 0, 0, 744, 761, 803, 728, 375, 790, 799,
	813, 721, 309, 228, 0, 0, 0, 0, 526, 527,
	1914, 0, 0, 0, 629, 0, 528, 0, 673, 524,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 530, 0, 0, 0, 678, 656, 697, 805,
	657, 655, 276, 670, 602, 834, 729, 244, 155, 840,
	727, 627, 793, 674, 822, 715, 252, 672, 156, 669,
	675, 713, 287, 802, 808, 611, 159, 254, 819, 693,
	706, 199, 0, 320, 780, 374, 518, 766, 319, 256,
	367, 794, 842, 373, 716, 351, 381, 385, 221, 749,
	190, 341, 212, 207, 698, 812, 662, 229, 308, 202,
	248, 732, 786, 694, 195, 797, 773, 824, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 820, 807, 826, 689,
	676, 681, 677, 705, 843, 238, 230, 827, 825, 378,
	145, 329, 328, 719, 237, 810, 146, 137, 315, 147,
	245, 164, 830, 387, 178, 250, 358, 517, 224, 286,
	201, 782, 296, 704, 158, 311, 268, 270, 267, 271,
	227, 141, 148, 806, 313, 331, 362, 180, 347, 139,
	140, 142, 150, 322, 151, 152, 849, 262, 216, 220,
	231, 242, 781, 318, 348, 379, 775, 175, 167, 350,
	372, 185, 330, 333, 386, 804, 174, 169, 838, 821,
	768, 734, 740, 664, 0, 168, 800, 696, 708, 688,
	776, 687, 226, 792, 370, 371, 200, 388, 605, 853,
	170, 671, 852, 283, 291, 282, 855, 366, 839, 769,
	758, 756, 665, 837, 767, 757, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 760, 0, 165,
	0, 345, 847, 864, 349, 182, 682, 814, 361, 144,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 796, 861, 295, 321, 189, 376, 342, 213, 616,
	288, 628, 622, 624, 623, 620, 621, 619, 618, 617,
	630, 603, 604, 607, 608, 609, 751, 841, 666, 612,
	817, 625, 626, 789, 859, 601, 196, 550, 642, 643,
	644, 551, 645, 646, 552, 553, 647, 648, 649, 650,
	554, 651, 652, 653, 631, 632, 633, 634, 635, 636,
	637, 638, 641, 639, 640, 0, 747, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 610, 160, 171, 253, 860,
	314, 223, 654, 661, 680, 683, 684, 685, 686, 690,
	695, 701, 707, 709, 710, 718, 723, 724, 725, 726,
	733, 735, 736, 737, 738, 739, 742, 743, 745, 752,
	753, 759, 764, 765, 771, 772, 0, 795, 798, 615,
	809, 811, 815, 816, 823, 828, 829, 854, 858, 863,
	377, 205, 750, 770, 801, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 149, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	833, 730, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 717, 162, 832, 856, 777, 791, 844, 36, 356,
	606, 848, 691, 714, 857, 720, 722, 785, 667, 762,
	292, 711, 668, 0, 0, 659, 515, 660, 692, 210,
	512, 818, 763, 846, 748, 778, 788, 209, 198, 755,
	754, 835, 703, 702, 783, 831, 845, 0, 0, 614,
	255, 0, 0, 380, 344, 275, 0, 0, 746, 0,
	599, 600, 731, 787, 679, 774, 850, 712, 779, 851,
	78, 0, 0, 0, 513, 538, 537, 540, 541, 542,
	543, 0, 0, 138, 539, 544, 545, 546, 0, 741,
	784, 862, 658, 510, 529, 663, 613, 0, 836, 699,
	700, 214, 0, 0, 0, 0, 0, 0, 0, 744,
	761, 803, 728, 375, 790, 799, 813, 721, 309, 228,
	0, 0, 0, 0, 526, 527, 0, 0, 0, 0,
	629, 0, 528, 0, 673, 524, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 530, 0,
	0, 0, 678, 656, 697, 805, 657, 655, 276, 670,
	602, 834, 729, 244, 155, 840, 727, 627, 793, 674,
	822, 715, 252, 672, 156, 669, 675, 713, 287, 802,
	808, 611, 159, 254, 819, 693, 706, 199, 0, 320,
	780, 374, 518, 766, 319, 256, 367, 794, 842, 373,
	716, 351, 381, 385, 221, 749, 190, 341, 212, 207,
	698, 812, 662, 229, 308, 202, 248, 732, 786, 694,
	195, 797, 773, 824, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 820, 807, 826, 689, 676, 681, 677, 705,
	843, 238, 230, 827, 825, 378, 145, 329, 328, 719,
	237, 810, 146, 137, 315, 147, 245, 164, 830, 387,
	178, 250, 358, 517, 224, 286, 201, 782, 296, 704,
	158, 311, 268, 270, 267, 271, 227, 141, 148, 806,
	313, 331, 362, 180, 347, 139, 140, 142, 150, 322,
	151, 152, 849, 262, 216, 220, 231, 242, 781, 318,
	348, 379, 775, 175, 167, 350, 372, 185, 330, 333,
	386, 804, 174, 169, 838, 821, 768, 734, 740, 664,
	0, 168, 800, 696, 708, 688, 776, 687, 226, 792,
	370, 371, 200, 388, 605, 853, 170, 671, 852, 283,
	291, 282, 855, 366, 839, 769, 758, 756, 665, 837,
	767, 757, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 760, 0, 165, 0, 345, 847, 864,
	349, 182, 682, 814, 361, 144, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 796, 861, 295,
	321, 189, 376, 342, 213, 616, 288, 628, 622, 624,
	623, 620, 621, 619, 618, 617, 630, 603, 604, 607,
	608, 609, 751, 841, 666, 612, 817, 625, 626, 789,
	859, 601, 196, 550, 642, 643, 644, 551, 645, 646,
	552, 553, 647, 648, 649, 650, 554, 651, 652, 653,
	631, 632, 633, 634, 635, 636, 637, 638, 641, 639,
	640, 0, 747, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 610, 160, 171, 253, 1250, 314, 223, 654, 661,
	680, 683, 684, 685, 686, 690, 695, 701, 707, 709,
	710, 718, 723, 724, 725, 726, 733, 735, 736, 737,
	738, 739, 742, 743, 745, 752, 753, 759, 764, 765,
	771, 772, 0, 795, 798, 615, 809, 811, 815, 816,
	823, 828, 829, 854, 858, 863, 377, 205, 750, 770,
	801, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	149, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 833, 730, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 717, 162, 832,
	856, 777, 791, 844, 0, 356, 606, 848, 691, 714,
	857, 720, 722, 785, 667, 762, 292, 711, 668, 0,
	0, 659, 515, 660, 692, 210, 512, 818, 763, 846,
	748, 778, 788, 209, 198, 755, 754, 835, 703, 702,
	783, 831, 845, 0, 0, 614, 255, 0, 0, 380,
	344, 275, 0, 0, 746, 0, 599, 600, 731, 787,
	679, 774, 850, 712, 779, 851, 78, 0, 1775, 0,
	513, 538, 537, 540, 541, 542, 543, 0, 0, 138,
	539, 544, 545, 546, 0, 741, 784, 862, 658, 510,
	529, 663, 613, 0, 836, 699, 700, 214, 0, 0,
	0, 0, 0, 0, 0, 744, 761, 803, 728, 375,
	790, 799, 813, 721, 309, 228, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 0, 629, 0, 528, 0,
	673, 524, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 530, 0, 0, 0, 678, 656,
	697, 805, 657, 655, 276, 670, 602, 834, 729, 244,
	155, 840, 727, 627, 793, 674, 822, 715, 252, 672,
	156, 669, 675, 713, 287, 802, 808, 611, 159, 254,
	819, 693, 706, 199, 0, 320, 780, 374, 518, 766,
	319, 256, 367, 794, 842, 373, 716, 351, 381, 385,
	221, 749, 190, 341, 212, 207, 698, 812, 662, 229,
	308, 202, 248, 732, 786, 694, 195, 797, 773, 824,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 820, 807,
	826, 689, 676, 681, 677, 705, 843, 238, 230, 827,
	825, 378, 145, 329, 328, 719, 237, 810, 146, 137,
	315, 147, 245, 164, 830, 387, 178, 250, 358, 517,
	224, 286, 201, 782, 296, 704, 158, 311, 268, 270,
	267, 271, 227, 141, 148, 806, 313, 331, 362, 180,
	347, 139, 140, 142, 150, 322, 151, 152, 849, 262,
	216, 220, 231, 242, 781, 318, 348, 379, 775, 175,
	167, 350, 372, 185, 330, 333, 386, 804, 174, 169,
	838, 821, 768, 734, 740, 664, 0, 168, 800, 696,
	708, 688, 776, 687, 226, 792, 370, 371, 200, 388,
	605, 853, 170, 671, 852, 283, 291, 282, 855, 366,
	839, 769, 758, 756, 665, 837, 767, 757, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 760,
	0, 165, 0, 345, 847, 864, 349, 182, 682, 814,
	361, 144, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 796, 861, 295, 321, 189, 376, 342,
	213, 616, 288, 628, 622, 624, 623, 620, 621, 619,
	618, 617, 630, 603, 604, 607, 608, 609, 751, 841,
	666, 612, 817, 625, 626, 789, 859, 601, 196, 550,
	642, 643, 644, 551, 645, 646, 552, 553, 647, 648,
	649, 650, 554, 651, 652, 653, 631, 632, 633, 634,
	635, 636, 637, 638, 641, 639, 640, 0, 747, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 610, 160, 171,
	253, 860, 314, 223, 654, 661, 680, 683, 684, 685,
	686, 690, 695, 701, 707, 709, 710, 718, 723, 724,
	725, 726, 733, 735, 736, 737, 738, 739, 742, 743,
	745, 752, 753, 759, 764, 765, 771, 772, 0, 795,
	798, 615, 809, 811, 815, 816, 823, 828, 829, 854,
	858, 863, 377, 205, 750, 770, 801, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 149, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 833, 730, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 717, 162, 832, 856, 777, 791, 844,
	0, 356, 606, 848, 691, 714, 857, 720, 722, 785,
	667, 762, 292, 711, 668, 0, 0, 659, 904, 660,
	692, 210, 902, 818, 763, 846, 748, 778, 788, 209,
	198, 755, 754, 835, 703, 702, 783, 831, 845, 0,
	0, 614, 255, 0, 0, 380, 344, 275, 0, 0,
	746, 0, 599, 600, 731, 787, 679, 774, 850, 712,
	779, 851, 78, 0, 0, 0, 513, 538, 537, 540,
	541, 542, 543, 0, 0, 138, 539, 544, 545, 546,
	0, 741, 784, 862, 658, 921, 529, 663, 613, 0,
	836, 699, 700, 214, 0, 0, 0, 0, 0, 0,
	0, 744, 761, 803, 728, 375, 790, 799, 813, 721,
	309, 228, 0, 0, 0, 0, 526, 527, 0, 0,
	0, 0, 629, 0, 528, 0, 673, 524, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 581, 582, 583, 584, 585, 586, 587, 588,
	589, 590, 591, 592, 593, 594, 595, 596, 597, 598,
	530, 0, 0, 0, 678, 656, 697, 805, 657, 655,
	276, 670, 602, 834, 729, 244, 155, 840, 727, 627,
	793, 674, 822, 715, 252, 672, 156, 669, 675, 713,
	287, 802, 808, 611, 159, 254, 819, 693, 706, 199,
	0, 320, 780, 374, 518, 766, 319, 256, 367, 794,
	842, 373, 716, 351, 381, 385, 221, 749, 190, 341,
	212, 207, 698, 812, 662, 229, 308, 202, 248, 732,
	786, 694, 195, 797, 773, 824, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 820, 807, 826, 689, 676, 681,
	677, 705, 843, 238, 230, 827, 825, 378, 145, 329,
	328, 719, 237, 810, 146, 137, 315, 147, 245, 164,
	830, 387, 178, 250, 358, 517, 224, 286, 201, 782,
	296, 704, 158, 311, 268, 270, 267, 271, 227, 141,
	148, 806, 313, 331, 362, 180, 347, 139, 140, 142,
	150, 322, 151, 152, 849, 262, 216, 220, 231, 242,
	781, 318, 348, 379, 775, 175, 167, 350, 372, 185,
	330, 333, 386, 804, 174, 169, 838, 821, 768, 734,
	740, 664, 0, 168, 800, 696, 708, 688, 776, 687,
	226, 792, 370, 371, 200, 388, 605, 853, 170, 671,
	852, 283, 291, 282, 855, 366, 839, 769, 758, 756,
	665, 837, 767, 757, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 760, 0, 165, 0, 345,
	847, 864, 349, 182, 682, 814, 361, 144, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 796,
	861, 295, 321, 189, 376, 342, 213, 616, 288, 628,
	622, 624, 623, 620, 621, 619, 618, 617, 630, 603,
	604, 607, 608, 609, 751, 841, 666, 612, 817, 625,
	626, 789, 859, 601, 196, 550, 642, 643, 644, 551,
	645, 646, 552, 553, 647, 648, 649, 650, 554, 651,
	652, 653, 631, 632, 633, 634, 635, 636, 637, 638,
	641, 639, 640, 0, 747, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 610, 160, 171, 253, 860, 314, 223,
	654, 661, 680, 683, 684, 685, 686, 690, 695, 701,
	707, 709, 710, 718, 723, 724, 725, 726, 733, 735,
	736, 737, 738, 739, 742, 743, 745, 752, 753, 759,
	764, 765, 771, 772, 0, 795, 798, 615, 809, 811,
	815, 816, 823, 828, 829, 854, 858, 863, 377, 205,
	750, 770, 801, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 149, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 833, 730,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 717,
	162, 832, 856, 777, 791, 844, 0, 356, 606, 848,
	691, 714, 857, 720, 722, 785, 667, 762, 292, 711,
	668, 0, 0, 659, 515, 660, 692, 210, 512, 818,
	763, 846, 748, 778, 788, 209, 198, 755, 754, 835,
	703, 702, 783, 831, 845, 0, 0, 614, 255, 0,
	0, 380, 344, 275, 0, 0, 746, 0, 599, 600,
	731, 787, 679, 774, 850, 712, 779, 851, 78, 0,
	0, 0, 513, 538, 537, 540, 541, 542, 543, 0,
	0, 138, 539, 544, 545, 546, 0, 741, 784, 862,
	658, 510, 529, 663, 613, 0, 836, 699, 700, 214,
	0, 0, 0, 0, 0, 0, 0, 744, 761, 803,
	728, 375, 790, 799, 813, 721, 309, 228, 0, 0,
	0, 0, 526, 527, 0, 0, 0, 0, 629, 0,
	528, 0, 673, 524, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 589, 590, 591, 592,
	593, 594, 595, 596, 597, 598, 530, 0, 0, 0,
	678, 656, 697, 805, 657, 655, 276, 670, 602, 834,
	729, 244, 155, 840, 727, 627, 793, 674, 822, 715,
	252, 672, 156, 669, 675, 713, 287, 802, 808, 611,
	159, 254, 819, 693, 706, 199, 0, 320, 780, 374,
	518, 766, 319, 256, 367, 794, 842, 373, 716, 351,
	381, 385, 221, 749, 190, 341, 212, 207, 698, 812,
	662, 229, 308, 202, 248, 732, 786, 694, 195, 797,
	773, 824, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	820, 807, 826, 689, 676, 681, 677, 705, 843, 238,
	230, 827, 825, 378, 145, 329, 328, 719, 237, 810,
	146, 137, 315, 147, 245, 164, 830, 387, 178, 250,
	358, 517, 224, 286, 201, 782, 296, 704, 158, 311,
	268, 270, 267, 271, 227, 141, 148, 806, 313, 331,
	362, 180, 347, 139, 140, 142, 150, 322, 151, 152,
	849, 262, 216, 220, 231, 242, 781, 318, 348, 379,
	775, 175, 167, 350, 372, 185, 330, 333, 386, 804,
	174, 169, 838, 821, 768, 734, 740, 664, 0, 168,
	800, 696, 708, 688, 776, 687, 226, 792, 370, 371,
	200, 388, 605, 853, 170, 671, 852, 283, 291, 282,
	855, 366, 839, 769, 758, 756, 665, 837, 767, 757,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 760, 0, 165, 0, 345, 847, 864, 349, 182,
	682, 814, 361, 144, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 796, 861, 295, 321, 189,
	376, 342, 213, 616, 288, 628, 622, 624, 623, 620,
	621, 619, 618, 617, 630, 603, 604, 607, 608, 609,
	751, 841, 666, 612, 817, 625, 626, 789, 859, 601,
	196, 550, 642, 643, 644, 551, 645, 646, 552, 553,
	647, 648, 649, 650, 554, 651, 652, 653, 631, 632,
	633, 634, 635, 636, 637, 638, 641, 639, 640, 0,
	747, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 610,
	160, 171, 253, 860, 314, 223, 654, 661, 680, 683,
	684, 685, 686, 690, 695, 701, 707, 709, 710, 718,
	723, 724, 725, 726, 733, 735, 736, 737, 738, 739,
	742, 743, 745, 752, 753, 759, 764, 765, 771, 772,
	0, 795, 798, 615, 809, 811, 815, 816, 823, 828,
	829, 854, 858, 863, 377, 205, 750, 770, 801, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 149, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 833, 730, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 717, 162, 832, 856, 777,
	791, 844, 0, 356, 606, 848, 691, 714, 857, 720,
	722, 785, 667, 762, 292, 711, 668, 0, 0, 659,
	904, 660, 692, 210, 902, 818, 763, 846, 748, 778,
	788, 209, 198, 755, 754, 835, 703, 702, 783, 831,
	845, 0, 0, 614, 255, 0, 0, 380, 344, 275,
	0, 0, 746, 0, 599, 600, 731, 787, 679, 774,
	850, 712, 779, 851, 78, 0, 0, 0, 513, 538,
	537, 540, 541, 542, 543, 0, 0, 138, 539, 544,
	545, 546, 0, 741, 784, 862, 658, 921, 529, 663,
	613, 0, 836, 699, 700, 214, 0, 0, 0, 0,
	0, 0, 0, 744, 761, 803, 728, 375, 790, 799,
	813, 721, 309, 228, 0, 0, 0, 0, 526, 527,
	0, 0, 0, 0, 629, 0, 528, 0, 673, 524,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 581, 582, 583, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 530, 0, 0, 0, 678, 656, 697, 805,
	657, 655, 276, 670, 602, 834, 729, 244, 155, 840,
	727, 627, 793, 674, 822, 715, 252, 672, 156, 669,
	675, 713, 287, 802, 808, 611, 159, 254, 819, 693,
	706, 199, 0, 320, 780, 374, 518, 3595, 319, 256,
	367, 794, 842, 373, 716, 351, 381, 385, 221, 749,
	190, 341, 212, 207, 698, 812, 662, 229, 308, 202,
	248, 732, 786, 694, 195, 797, 773, 824, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 820, 807, 826, 689,
	676, 681, 677, 705, 843, 238, 230, 827, 825, 378,
	145, 329, 328, 719, 237, 810, 146, 137, 315, 147,
	245, 164, 830, 387, 178, 250, 358, 517, 224, 286,
	201, 782, 296, 704, 158, 311, 268, 270, 267, 271,
	227, 141, 148, 806, 313, 331, 362, 180, 347, 139,
	140, 142, 150, 322, 151, 152, 849, 262, 216, 220,
	231, 242, 781, 318, 348, 379, 775, 175, 167, 350,
	372, 185, 330, 333, 386, 804, 174, 169, 838, 821,
	768, 734, 740, 664, 0, 168, 800, 696, 708, 688,
	776, 687, 226, 792, 370, 371, 200, 388, 605, 853,
	170, 671, 852, 283, 291, 282, 855, 366, 839, 769,
	758, 756, 665, 837, 767, 757, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 760, 0, 165,
	0, 345, 847, 864, 349, 182, 682, 814, 361, 144,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 796, 861, 295, 321, 189, 376, 342, 213, 616,
	288, 628, 622, 624, 623, 620, 621, 619, 618, 617,
	630, 603, 604, 607, 608, 609, 751, 841, 666, 612,
	817, 625, 626, 789, 859, 601, 196, 550, 642, 643,
	644, 551, 645, 646, 552, 553, 647, 648, 649, 650,
	554, 651, 652, 653, 631, 632, 633, 634, 635, 636,
	637, 638, 641, 639, 640, 0, 747, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 610, 160, 171, 253, 860,
	314, 223, 654, 661, 680, 683, 684, 685, 686, 690,
	695, 701, 707, 709, 710, 718, 723, 724, 725, 726,
	733, 735, 736, 737, 738, 739, 742, 743, 745, 752,
	753, 759, 764, 765, 771, 772, 0, 795, 798, 615,
	809, 811, 815, 816, 823, 828, 829, 854, 858, 863,
	377, 205, 750, 770, 801, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 149, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	833, 730, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 717, 162, 832, 856, 777, 791, 844, 0, 356,
	606, 848, 691, 714, 857, 720, 722, 785, 667, 762,
	292, 711, 668, 0, 0, 659, 904, 660, 692, 210,
	902, 818, 763, 846, 748, 778, 788, 209, 198, 755,
	754, 835, 703, 702, 783, 831, 845, 0, 0, 614,
	255, 0, 0, 380, 344, 275, 0, 0, 746, 0,
	599, 600, 731, 787, 679, 774, 850, 712, 779, 851,
	78, 0, 0, 0, 513, 538, 537, 540, 541, 542,
	543, 0, 0, 138, 539, 544, 545, 546, 0, 741,
	784, 862, 658, 921, 529, 663, 613, 0, 836, 699,
	700, 214, 0, 0, 0, 0, 0, 0, 0, 744,
	761, 803, 728, 375, 790, 799, 813, 721, 309, 228,
	0, 0, 0, 0, 526, 527, 0, 0, 0, 0,
	629, 0, 528, 0, 673, 524, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	581, 582, 583, 584, 585, 586, 587, 588, 589, 590,
	591, 592, 593, 594, 595, 596, 597, 598, 530, 0,
	0, 0, 678, 656, 697, 805, 657, 655, 276, 670,
	602, 834, 729, 244, 155, 840, 727, 627, 793, 674,
	822, 715, 252, 672, 156, 669, 675, 713, 287, 802,
	808, 611, 159, 254, 819, 693, 706, 199, 0, 320,
	780, 374, 518, 766, 319, 256, 367, 794, 842, 373,
	716, 351, 381, 385, 221, 749, 190, 341, 212, 207,
	698, 812, 662, 229, 308, 202, 248, 732, 786, 694,
	195, 797, 773, 824, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 820, 807, 826, 689, 676, 681, 677, 705,
	843, 238, 230, 827, 825, 378, 145, 329, 328, 719,
	237, 810, 146, 137, 315, 147, 245, 164, 830, 387,
	178, 250, 358, 517, 224, 286, 201, 782, 296, 704,
	158, 311, 268, 270, 267, 271, 227, 141, 148, 806,
	313, 331, 362, 180, 347, 139, 140, 142, 150, 322,
	151, 152, 849, 262, 216, 220, 231, 242, 781, 318,
	348, 379, 775, 175, 167, 350, 372, 185, 330, 333,
	386, 804, 174, 169, 838, 821, 768, 734, 740, 664,
	0, 168, 800, 696, 708, 688, 776, 687, 226, 792,
	370, 371, 200, 388, 605, 853, 170, 671, 852, 283,
	291, 282, 855, 366, 839, 769, 758, 756, 665, 837,
	767, 757, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 760, 0, 165, 0, 345, 847, 864,
	349, 182, 682, 814, 361, 144, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 796, 861, 295,
	321, 189, 376, 342, 213, 616, 288, 628, 622, 624,
	623, 620, 621, 619, 618, 617, 630, 603, 604, 607,
	608, 609, 1951, 1952, 1953, 612, 817, 625, 626, 789,
	859, 601, 196, 550, 642, 643, 644, 551, 645, 646,
	552, 553, 647, 648, 649, 650, 554, 651, 652, 653,
	631, 632, 633, 634, 635, 636, 637, 638, 641, 639,
	640, 0, 747, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 610, 160, 171, 253, 860, 314, 223, 654, 661,
	680, 683, 684, 685, 686, 690, 695, 701, 707, 709,
	710, 718, 723, 724, 725, 726, 733, 735, 736, 737,
	738, 739, 742, 743, 745, 752, 753, 759, 764, 765,
	771, 772, 0, 795, 798, 615, 809, 811, 815, 816,
	823, 828, 829, 854, 858, 863, 377, 205, 750, 770,
	801, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	149, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 833, 730, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 717, 162, 832,
	856, 777, 791, 1701, 2869, 356, 1556, 1705, 1505, 1535,
	1722, 1541, 1544, 1625, 1471, 1594, 292, 1532, 1472, 1455,
	1510, 1459, 1523, 1460, 1507, 210, 1503, 1666, 1597, 1703,
	1576, 1618, 1628, 209, 198, 1586, 1585, 1691, 1521, 1520,
	1623, 1680, 1702, 1575, 0, 1712, 255, 1677, 964, 380,
	344, 275, 967, 966, 1571, 1686, 1592, 1655, 1554, 1627,
	1487, 1610, 1707, 1533, 1619, 1708, 78, 0, 1163, 0,
	960, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 1615, 1699, 1526, 965, 1566, 1624, 1727, 1458, 1611,
	0, 1463, 1474, 1721, 1692, 1517, 1518, 214, 0, 0,
	0, 0, 0, 0, 0, 1569, 1593, 1645, 1551, 375,
	1630, 1640, 1658, 1543, 309, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 1608, 0, 0, 0,
	1479, 1465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 0, 0, 0, 1486, 1456,
	1514, 1647, 1457, 1454, 276, 1475, 1660, 1690, 1552, 244,
	155, 1696, 1550, 1549, 1634, 1480, 1670, 1536, 252, 1478,
	156, 1473, 1481, 1534, 287, 1644, 1652, 143, 159, 254,
	1667, 1508, 1525, 199, 1832, 320, 1620, 374, 963, 1601,
	319, 256, 367, 1635, 1698, 373, 1537, 351, 381, 385,
	221, 1577, 190, 341, 212, 207, 1516, 1657, 1462, 229,
	308, 202, 248, 1555, 1626, 1509, 195, 1638, 1609, 1672,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 1668, 1651,
	1674, 1502, 1482, 1493, 1483, 1524, 1700, 238, 230, 1675,
	1673, 378, 145, 329, 328, 1540, 237, 1654, 146, 137,
	315, 147, 245, 164, 1679, 387, 178, 250, 358, 962,
	224, 286, 201, 1622, 296, 1522, 158, 311, 268, 270,
	267, 271, 227, 141, 148, 1650, 313, 331, 362, 180,
	347, 139, 140, 142, 150, 322, 151, 152, 1706, 262,
	216, 220, 231, 242, 1621, 318, 348, 379, 1612, 175,
	167, 350, 372, 185, 330, 333, 386, 1646, 174, 169,
	1694, 1669, 1603, 1558, 1564, 1464, 0, 168, 1642, 1513,
	1529, 1501, 1616, 1500, 226, 1633, 370, 371, 200, 388,
	1476, 1714, 170, 1477, 1713, 283, 291, 282, 1717, 366,
	1695, 1604, 1589, 1587, 1469, 1693, 1602, 1588, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 1591,
	0, 165, 0, 345, 1704, 1729, 349, 182, 1495, 1661,
	361, 144, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 1637, 1726, 295, 321, 189, 376, 342,
	213, 1491, 288, 1494, 1489, 1492, 1490, 1595, 1596, 1709,
	1710, 1711, 1649, 1484, 0, 1687, 1688, 0, 1582, 1697,
	1470, 0, 1665, 153, 154, 1629, 1724, 1542, 196, 132,
	1466, 1467, 1468, 133, 1572, 1573, 134, 135, 1683, 1682,
	1681, 1684, 136, 1718, 1716, 1719, 1485, 1506, 1528, 1578,
	1579, 1581, 1613, 1614, 1659, 1632, 1641, 1515, 1574, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 1600, 160, 171,
	253, 2870, 314, 223, 1453, 1461, 1488, 1496, 1497, 1498,
	1499, 1504, 1511, 1519, 1527, 1530, 1531, 1539, 1545, 1546,
	1547, 1548, 1557, 1559, 1560, 1561, 1562, 1563, 1567, 1568,
	1570, 1583, 1584, 1590, 1598, 1599, 1606, 1607, 0, 1636,
	1639, 1648, 1653, 1656, 1662, 1664, 1671, 1676, 1678, 1715,
	1723, 1728, 377, 205, 1580, 1605, 1643, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 149, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 1689, 1553, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 1538, 162, 1685, 1720, 1617, 1631, 1701,
	1663, 356, 1556, 1705, 1505, 1535, 1722, 1541, 1544, 1625,
	1471, 1594, 292, 1532, 1472, 1455, 1510, 1459, 1523, 1460,
	1507, 210, 1503, 1666, 1597, 1703, 1576, 1618, 1628, 209,
	198, 1586, 1585, 1691, 1521, 1520, 1623, 1680, 1702, 1575,
	0, 1712, 255, 1677, 964, 380, 344, 275, 967, 966,
	1571, 1686, 1592, 1655, 1554, 1627, 1487, 1610, 1707, 1533,
	1619, 1708, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 1615, 1699, 1526,
	965, 1566, 1624, 1727, 1458, 1611, 0, 1463, 1474, 1721,
	1692, 1517, 1518, 214, 0, 0, 0, 0, 0, 0,
	0, 1569, 1593, 1645, 1551, 375, 1630, 1640, 1658, 1543,
	309, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 1608, 0, 0, 0, 1479, 1465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 1486, 1456, 1514, 1647, 1457, 1454,
	276, 1475, 1660, 1690, 1552, 244, 155, 1696, 1550, 1549,
	1634, 1480, 1670, 1536, 252, 1478, 156, 1473, 1481, 1534,
	287, 1644, 1652, 143, 159, 254, 1667, 1508, 1525, 199,
	1832, 320, 1620, 374, 963, 1601, 319, 256, 367, 1635,
	1698, 373, 1537, 351, 381, 385, 221, 1577, 190, 341,
	212, 207, 1516, 1657, 1462, 229, 308, 202, 248, 1555,
	1626, 1509, 195, 1638, 1609, 1672, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 1668, 1651, 1674, 1502, 1482, 1493,
	1483, 1524, 1700, 238, 230, 1675, 1673, 378, 145, 329,
	328, 1540, 237, 1654, 146, 137, 315, 147, 245, 164,
	1679, 387, 178, 250, 358, 962, 224, 286, 201, 1622,
	296, 1522, 158, 311, 268, 270, 267, 271, 227, 141,
	148, 1650, 313, 331, 362, 180, 347, 139, 140, 142,
	150, 322, 151, 152, 1706, 262, 216, 220, 231, 242,
	1621, 318, 348, 379, 1612, 175, 167, 350, 372, 185,
	330, 333, 386, 1646, 174, 169, 1694, 1669, 1603, 1558,
	1564, 1464, 0, 168, 1642, 1513, 1529, 1501, 1616, 1500,
	226, 1633, 370, 371, 200, 388, 1476, 1714, 170, 1477,
	1713, 283, 291, 282, 1717, 366, 1695, 1604, 1589, 1587,
	1469, 1693, 1602, 1588, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 1591, 0, 165, 0, 345,
	1704, 1729, 349, 182, 1495, 1661, 361, 144, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 1637,
	1726, 295, 321, 189, 376, 342, 213, 1491, 288, 1494,
	1489, 1492, 1490, 1595, 1596, 1709, 1710, 1711, 1649, 1484,
	0, 1687, 1688, 0, 1582, 1697, 1470, 0, 1665, 153,
	154, 1629, 1724, 1542, 196, 132, 1466, 1467, 1468, 133,
	1572, 1573, 134, 135, 1683, 1682, 1681, 1684, 136, 1718,
	1716, 1719, 1485, 1506, 1528, 1578, 1579, 1581, 1613, 1614,
	1659, 1632, 1641, 1515, 1574, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 1600, 160, 171, 253, 1725, 314, 223,
	1453, 1461, 1488, 1496, 1497, 1498, 1499, 1504, 1511, 1519,
	1527, 1530, 1531, 1539, 1545, 1546, 1547, 1548, 1557, 1559,
	1560, 1561, 1562, 1563, 1567, 1568, 1570, 1583, 1584, 1590,
	1598, 1599, 1606, 1607, 0, 1636, 1639, 1648, 1653, 1656,
	1662, 1664, 1671, 1676, 1678, 1715, 1723, 1728, 377, 205,
	1580, 1605, 1643, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 149, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 1689, 1553,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 1538,
	162, 1685, 1720, 1617, 1631, 1701, 1663, 356, 1556, 1705,
	1505, 1535, 1722, 1541, 1544, 1625, 1471, 1594, 292, 1532,
	1472, 1455, 1510, 1459, 1523, 1460, 1507, 210, 1503, 1666,
	1597, 1703, 1576, 1618, 1628, 209, 198, 1586, 1585, 1691,
	1521, 1520, 1623, 1680, 1702, 1575, 0, 1712, 255, 1677,
	0, 380, 344, 275, 0, 0, 1571, 1686, 1592, 1655,
	1554, 1627, 1487, 1610, 1707, 1533, 1619, 1708, 0, 0,
	0, 0, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 1615, 1699, 1526, 0, 1566, 1624, 1727,
	1458, 1611, 0, 1463, 1474, 1721, 1692, 1517, 1518, 214,
	0, 0, 0, 0, 0, 0, 0, 1569, 1593, 1645,
	1551, 375, 1630, 1640, 1658, 1543, 309, 228, 0, 0,
	0, 0, 0, 0, 2540, 0, 1512, 0, 1608, 0,
	0, 0, 1479, 1465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 0, 0, 0,
	1486, 1456, 1514, 1647, 1457, 1454, 276, 1475, 1660, 1690,
	1552, 244, 155, 1696, 1550, 1549, 1634, 1480, 1670, 1536,
	252, 1478, 156, 1473, 1481, 1534, 287, 1644, 1652, 143,
	159, 254, 1667, 1508, 1525, 199, 0, 320, 1620, 374,
	1881, 1601, 319, 256, 367, 1635, 1698, 373, 1537, 351,
	381, 385, 221, 1577, 190, 341, 212, 207, 1516, 1657,
	1462, 229, 308, 202, 248, 1555, 1626, 1509, 195, 1638,
	1609, 1672, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	1668, 1651, 1674, 1502, 1482, 1493, 1483, 1524, 1700, 238,
	230, 1675, 1673, 378, 145, 329, 328, 1540, 237, 1654,
	146, 137, 315, 147, 245, 164, 1679, 387, 178, 250,
	358, 1880, 224, 286, 201, 1622, 296, 1522, 158, 311,
	268, 270, 267, 271, 227, 141, 148, 1650, 313, 331,
	362, 180, 347, 139, 140, 142, 150, 322, 151, 152,
	1706, 262, 216, 220, 231, 242, 1621, 318, 348, 379,
	1612, 175, 167, 350, 372, 185, 330, 333, 386, 1646,
	174, 169, 1694, 1669, 1603, 1558, 1564, 1464, 0, 168,
	1642, 1513, 1529, 1501, 1616, 1500, 226, 1633, 370, 371,
	200, 388, 1476, 1714, 170, 1477, 1713, 283, 291, 282,
	1717, 366, 1695, 1604, 1589, 1587, 1469, 1693, 1602, 1588,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 1591, 0, 165, 0, 345, 1704, 1729, 349, 182,
	1495, 1661, 361, 144, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 1637, 1726, 295, 321, 189,
	376, 342, 213, 1491, 288, 1494, 1489, 1492, 1490, 1595,
	1596, 1709, 1710, 1711, 1649, 1484, 0, 1687, 1688, 0,
	1582, 1697, 1470, 0, 1665, 153, 154, 1629, 1724, 1542,
	196, 132, 1466, 1467, 1468, 133, 1572, 1573, 134, 135,
	1683, 1682, 1681, 1684, 136, 1718, 1716, 1719, 1485, 1506,
	1528, 1578, 1579, 1581, 1613, 1614, 1659, 1632, 1641, 1515,
	1574, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 1600,
	160, 171, 253, 1725, 314, 223, 1453, 1461, 1488, 1496,
	1497, 1498, 1499, 1504, 1511, 1519, 1527, 1530, 1531, 1539,
	1545, 1546, 1547, 1548, 1557, 1559, 1560, 1561, 1562, 1563,
	1567, 1568, 1570, 1583, 1584, 1590, 1598, 1599, 1606, 1607,
	0, 1636, 1639, 1648, 1653, 1656, 1662, 1664, 1671, 1676,
	1678, 1715, 1723, 1728, 377, 205, 1580, 1605, 1643, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 149, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 1689, 1553, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 1538, 162, 1685, 1720, 1617,
	1631, 1701, 1663, 356, 1556, 1705, 1505, 1535, 1722, 1541,
	1544, 1625, 1471, 1594, 292, 1532, 1472, 1455, 1510, 1459,
	1523, 1460, 1507, 210, 1503, 1666, 1597, 1703, 1576, 1618,
	1628, 209, 198, 1586, 1585, 1691, 1521, 1520, 1623, 1680,
	1702, 1575, 0, 1712, 255, 1677, 0, 380, 344, 275,
	0, 0, 1571, 1686, 1592, 1655, 1554, 1627, 1487, 1610,
	1707, 1533, 1619, 1708, 0, 0, 0, 0, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 1615,
	1699, 1526, 0, 1566, 1624, 1727, 1458, 1611, 0, 1463,
	1474, 1721, 1692, 1517, 1518, 214, 0, 0, 0, 0,
	0, 0, 0, 1569, 1593, 1645, 1551, 375, 1630, 1640,
	1658, 1543, 309, 228, 0, 0, 0, 0, 0, 0,
	1875, 0, 1512, 0, 1608, 0, 0, 0, 1479, 1465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 0, 1486, 1456, 1514, 1647,
	1457, 1454, 276, 1475, 1660, 1690, 1552, 244, 155, 1696,
	1550, 1549, 1634, 1480, 1670, 1536, 252, 1478, 156, 1473,
	1481, 1534, 287, 1644, 1652, 143, 159, 254, 1667, 1508,
	1525, 199, 0, 320, 1620, 374, 1881, 1601, 319, 256,
	367, 1635, 1698, 373, 1537, 351, 381, 385, 221, 1577,
	190, 341, 212, 207, 1516, 1657, 1462, 229, 308, 202,
	248, 1555, 1626, 1509, 195, 1638, 1609, 1672, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 1668, 1651, 1674, 1502,
	1482, 1493, 1483, 1524, 1700, 238, 230, 1675, 1673, 378,
	145, 329, 328, 1540, 237, 1654, 146, 137, 315, 147,
	245, 164, 1679, 387, 178, 250, 358, 1880, 224, 286,
	201, 1622, 296, 1522, 158, 311, 268, 270, 267, 271,
	227, 141, 148, 1650, 313, 331, 362, 180, 347, 139,
	140, 142, 150, 322, 151, 152, 1706, 262, 216, 220,
	231, 242, 1621, 318, 348, 379, 1612, 175, 167, 350,
	372, 185, 330, 333, 386, 1646, 174, 169, 1694, 1669,
	1603, 1558, 1564, 1464, 0, 168, 1642, 1513, 1529, 1501,
	1616, 1500, 226, 1633, 370, 371, 200, 388, 1476, 1714,
	170, 1477, 1713, 283, 291, 282, 1717, 366, 1695, 1604,
	1589, 1587, 1469, 1693, 1602, 1588, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 1591, 0, 165,
	0, 345, 1704, 1729, 349, 182, 1495, 1661, 361, 144,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 1637, 1726, 295, 321, 189, 376, 342, 213, 1491,
	288, 1494, 1489, 1492, 1490, 1595, 1596, 1709, 1710, 1711,
	1649, 1484, 0, 1687, 1688, 0, 1582, 1697, 1470, 0,
	1665, 153, 154, 1629, 1724, 1542, 196, 132, 1466, 1467,
	1468, 133, 1572, 1573, 134, 135, 1683, 1682, 1681, 1684,
	136, 1718, 1716, 1719, 1485, 1506, 1528, 1578, 1579, 1581,
	1613, 1614, 1659, 1632, 1641, 1515, 1574, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 1600, 160, 171, 253, 1725,
	314, 223, 1453, 1461, 1488, 1496, 1497, 1498, 1499, 1504,
	1511, 1519, 1527, 1530, 1531, 1539, 1545, 1546, 1547, 1548,
	1557, 1559, 1560, 1561, 1562, 1563, 1567, 1568, 1570, 1583,
	1584, 1590, 1598, 1599, 1606, 1607, 0, 1636, 1639, 1648,
	1653, 1656, 1662, 1664, 1671, 1676, 1678, 1715, 1723, 1728,
	377, 205, 1580, 1605, 1643, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 149, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	1689, 1553, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 1538, 162, 1685, 1720, 1617, 1631, 1701, 1663, 356,
	1556, 1705, 1505, 1535, 1722, 1541, 1544, 1625, 1471, 1594,
	292, 1532, 1472, 1455, 1510, 1459, 1523, 1460, 1507, 210,
	1503, 1666, 1597, 1703, 1576, 1618, 1628, 209, 198, 1586,
	1585, 1691, 1521, 1520, 1623, 1680, 1702, 1575, 0, 1712,
	255, 1677, 0, 380, 344, 275, 0, 0, 1571, 1686,
	1592, 1655, 1554, 1627, 1487, 1610, 1707, 1533, 1619, 1708,
	0, 0, 0, 0, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 1615, 1699, 1526, 0, 1566,
	1624, 1727, 1458, 1611, 0, 1463, 1474, 1721, 1692, 1517,
	1518, 214, 0, 0, 0, 0, 0, 0, 0, 1569,
	1593, 1645, 1551, 375, 1630, 1640, 1658, 1543, 309, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	1608, 0, 0, 0, 1479, 1465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 1486, 1456, 1514, 1647, 1457, 1454, 276, 1475,
	1660, 1690, 1552, 244, 155, 1696, 1550, 1549, 1634, 1480,
	1670, 1536, 252, 1478, 156, 1473, 1481, 1534, 287, 1644,
	1652, 143, 159, 254, 1667, 1508, 1525, 199, 0, 320,
	1620, 374, 1881, 1601, 319, 256, 367, 1635, 1698, 373,
	1537, 351, 381, 385, 221, 1577, 190, 341, 212, 207,
	1516, 1657, 1462, 229, 308, 202, 248, 1555, 1626, 1509,
	195, 1638, 1609, 1672, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 1668, 1651, 1674, 1502, 1482, 1493, 1483, 1524,
	1700, 238, 230, 1675, 1673, 378, 145, 329, 328, 1540,
	237, 1654, 146, 137, 315, 147, 245, 164, 1679, 387,
	178, 250, 358, 1880, 224, 286, 201, 1622, 296, 1522,
	158, 311, 268, 270, 267, 271, 227, 141, 148, 1650,
	313, 331, 362, 180, 347, 139, 140, 142, 150, 322,
	151, 152, 1706, 262, 216, 220, 231, 242, 1621, 318,
	348, 379, 1612, 175, 167, 350, 372, 185, 330, 333,
	386, 1646, 174, 169, 1694, 1669, 1603, 1558, 1564, 1464,
	0, 168, 1642, 1513, 1529, 1501, 1616, 1500, 226, 1633,
	370, 371, 200, 388, 1476, 1714, 170, 1477, 1713, 283,
	291, 282, 1717, 366, 1695, 1604, 1589, 1587, 1469, 1693,
	1602, 1588, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 1591, 0, 165, 0, 345, 1704, 1729,
	349, 182, 1495, 1661, 361, 144, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 1637, 1726, 295,
	321, 189, 376, 342, 213, 1491, 288, 1494, 1489, 1492,
	1490, 1595, 1596, 1709, 1710, 1711, 1649, 1484, 0, 1687,
	1688, 0, 1582, 1697, 1470, 0, 1665, 153, 154, 1629,
	1724, 1542, 196, 132, 1466, 1467, 1468, 133, 1572, 1573,
	134, 135, 1683, 1682, 1681, 1684, 136, 1718, 1716, 1719,
	1485, 1506, 1528, 1578, 1579, 1581, 1613, 1614, 1659, 1632,
	1641, 1515, 1574, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 1600, 160, 171, 253, 1725, 314, 223, 1453, 1461,
	1488, 1496, 1497, 1498, 1499, 1504, 1511, 1519, 1527, 1530,
	1531, 1539, 1545, 1546, 1547, 1548, 1557, 1559, 1560, 1561,
	1562, 1563, 1567, 1568, 1570, 1583, 1584, 1590, 1598, 1599,
	1606, 1607, 0, 1636, 1639, 1648, 1653, 1656, 1662, 1664,
	1671, 1676, 1678, 1715, 1723, 1728, 377, 205, 1580, 1605,
	1643, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	149, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 1689, 1553, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 1538, 162, 1685,
	1720, 1617, 1631, 844, 0, 356, 909, 848, 691, 714,
	857, 720, 722, 785, 667, 762, 292, 711, 668, 0,
	0, 659, 904, 660, 692, 210, 902, 818, 763, 846,
	748, 778, 788, 209, 198, 755, 754, 835, 703, 702,
	783, 831, 845, 0, 0, 942, 255, 0, 964, 380,
	344, 275, 967, 966, 746, 0, 916, 929, 731, 787,
	679, 774, 850, 712, 779, 851, 0, 0, 0, 0,
	513, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 924, 938, 905, 965, 741, 784, 862, 658, 921,
	0, 663, 893, 0, 836, 699, 700, 214, 0, 0,
	0, 0, 0, 0, 0, 744, 761, 803, 728, 375,
	790, 799, 813, 721, 309, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	673, 889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 910, 0, 0, 0, 678, 656,
	697, 805, 657, 655, 276, 670, 931, 834, 729, 244,
	155, 840, 727, 908, 793, 674, 822, 715, 252, 672,
	156, 669, 675, 713, 287, 802, 808, 143, 159, 254,
	819, 693, 706, 199, 2609, 320, 780, 374, 2611, 766,
	319, 256, 367, 794, 842, 373, 716, 351, 381, 385,
	221, 749, 190, 341, 212, 207, 698, 812, 662, 229,
	308, 202, 248, 732, 786, 694, 195, 797, 773, 824,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 820, 807,
	826, 689, 676, 681, 677, 705, 843, 238, 230, 827,
	825, 378, 145, 329, 328, 719, 237, 810, 146, 137,
	315, 147, 245, 164, 830, 387, 178, 250, 358, 2610,
	224, 286, 201, 782, 296, 704, 158, 311, 268, 270,
	267, 271, 227, 141, 148, 806, 313, 331, 362, 180,
	347, 139, 140, 142, 150, 322, 151, 152, 849, 262,
	216, 220, 231, 242, 781, 318, 348, 379, 775, 175,
	167, 350, 372, 185, 330, 333, 386, 804, 174, 169,
	838, 821, 768, 734, 740, 664, 0, 168, 800, 696,
	708, 688, 776, 687, 226, 792, 370, 371, 200, 388,
	894, 853, 170, 671, 852, 283, 291, 282, 855, 366,
	839, 769, 758, 756, 665, 837, 767, 757, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 760,
	0, 165, 0, 345, 847, 864, 349, 182, 682, 814,
	361, 144, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 796, 861, 295, 321, 189, 376, 342,
	213, 899, 288, 901, 897, 900, 898, 917, 918, 939,
	940, 941, 928, 895, 0, 936, 937, 0, 751, 841,
	666, 0, 817, 153, 154, 789, 859, 907, 196, 132,
	890, 891, 892, 133, 911, 912, 134, 135, 934, 933,
	932, 935, 136, 944, 943, 945, 896, 903, 906, 913,
	914, 915, 922, 923, 930, 925, 926, 0, 747, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 919, 160, 171,
	253, 860, 314, 223, 654, 661, 680, 683, 684, 685,
	686, 690, 695, 701, 707, 709, 710, 718, 723, 724,
	725, 726, 733, 735, 736, 737, 738, 739, 742, 743,
	745, 752, 753, 759, 764, 765, 771, 772, 0, 795,
	798, 927, 809, 811, 815, 816, 823, 828, 829, 854,
	858, 863, 377, 205, 750, 770, 801, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 149, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 833, 730, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 717, 162, 832, 856, 777, 791, 844,
	0, 356, 909, 848, 691, 714, 857, 720, 722, 785,
	667, 762, 292, 711, 668, 0, 0, 659, 904, 660,
	692, 210, 902, 818, 763, 846, 748, 778, 788, 209,
	198, 755, 754, 835, 703, 702, 783, 831, 845, 0,
	0, 942, 255, 0, 0, 380, 344, 275, 0, 0,
	746, 0, 916, 929, 731, 787, 679, 774, 850, 712,
	779, 851, 0, 0, 0, 0, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 924, 938, 905,
	0, 741, 784, 862, 658, 921, 0, 663, 893, 0,
	836, 699, 700, 214, 0, 0, 0, 0, 0, 0,
	0, 744, 761, 803, 728, 375, 790, 799, 813, 721,
	309, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 673, 889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	910, 0, 0, 0, 678, 656, 697, 805, 657, 655,
	276, 670, 931, 834, 729, 244, 155, 840, 727, 908,
	793, 674, 822, 715, 252, 672, 156, 669, 675, 713,
	287, 802, 808, 143, 159, 254, 819, 693, 706, 199,
	0, 320, 780, 374, 888, 766, 319, 256, 367, 794,
	842, 373, 716, 351, 381, 385, 221, 749, 190, 341,
	212, 207, 698, 812, 662, 229, 308, 202, 248, 732,
	786, 694, 195, 797, 773, 824, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 820, 807, 826, 689, 676, 681,
	677, 705, 843, 238, 230, 827, 825, 378, 145, 329,
	328, 719, 237, 810, 146, 137, 315, 147, 245, 164,
	830, 387, 178, 250, 358, 887, 224, 286, 201, 782,
	296, 704, 158, 311, 268, 270, 267, 271, 227, 141,
	148, 806, 313, 331, 362, 180, 347, 139, 140, 142,
	150, 322, 151, 152, 849, 262, 216, 220, 231, 242,
	781, 318, 348, 379, 775, 175, 167, 350, 372, 185,
	330, 333, 386, 804, 174, 169, 838, 821, 768, 734,
	740, 664, 0, 168, 800, 696, 708, 688, 776, 687,
	226, 792, 370, 371, 200, 388, 894, 853, 170, 671,
	852, 283, 291, 282, 855, 366, 839, 769, 758, 756,
	665, 837, 767, 757, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 760, 0, 165, 0, 345,
	847, 864, 349, 182, 682, 814, 361, 144, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 796,
	861, 295, 321, 189, 376, 342, 213, 899, 288, 901,
	897, 900, 898, 917, 918, 939, 940, 941, 928, 895,
	0, 936, 937, 0, 751, 841, 666, 0, 817, 153,
	154, 789, 859, 907, 196, 132, 890, 891, 892, 133,
	911, 912, 134, 135, 934, 933, 932, 935, 136, 944,
	943, 945, 896, 903, 906, 913, 914, 915, 922, 923,
	930, 925, 926, 0, 747, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 919, 160, 171, 253, 860, 314, 223,
	654, 661, 680, 683, 684, 685, 686, 690, 695, 701,
	707, 709, 710, 718, 723, 724, 725, 726, 733, 735,
	736, 737, 738, 739, 742, 743, 745, 752, 753, 759,
	764, 765, 771, 772, 0, 795, 798, 927, 809, 811,
	815, 816, 823, 828, 829, 854, 858, 863, 377, 205,
	750, 770, 801, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 149, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 833, 730,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 717,
	162, 832, 856, 777, 791, 844, 0, 356, 909, 848,
	691, 714, 857, 720, 722, 785, 667, 762, 292, 711,
	668, 0, 0, 659, 904, 660, 692, 210, 902, 818,
	763, 846, 748, 778, 788, 209, 198, 755, 754, 835,
	703, 702, 783, 831, 845, 0, 0, 942, 255, 0,
	0, 380, 344, 275, 0, 0, 746, 0, 916, 929,
	731, 787, 679, 774, 850, 712, 779, 851, 0, 0,
	0, 0, 513, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 924, 938, 905, 0, 741, 784, 862,
	658, 921, 0, 663, 893, 0, 836, 699, 700, 214,
	0, 0, 0, 0, 0, 0, 0, 744, 761, 803,
	728, 375, 790, 799, 813, 721, 309, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 920, 0,
	0, 0, 673, 889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 910, 0, 0, 0,
	678, 656, 697, 805, 657, 655, 276, 670, 931, 834,
	729, 244, 155, 840, 727, 908, 793, 674, 822, 715,
	252, 672, 156, 669, 675, 713, 287, 802, 808, 143,
	159, 254, 819, 693, 706, 199, 0, 320, 780, 374,
	888, 766, 319, 256, 367, 794, 842, 373, 716, 351,
	381, 385, 221, 749, 190, 341, 212, 207, 698, 812,
	662, 229, 308, 202, 248, 732, 786, 694, 195, 797,
	773, 824, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	820, 807, 826, 689, 676, 681, 677, 705, 843, 238,
	230, 827, 825, 378, 145, 329, 328, 719, 237, 810,
	146, 137, 315, 147, 245, 164, 830, 387, 178, 250,
	358, 887, 224, 286, 201, 782, 296, 704, 158, 311,
	268, 270, 267, 271, 227, 141, 148, 806, 313, 331,
	362, 180, 347, 139, 140, 142, 150, 322, 151, 152,
	849, 262, 216, 220, 231, 242, 781, 318, 348, 379,
	775, 175, 167, 350, 372, 185, 330, 333, 386, 804,
	174, 169, 838, 821, 768, 734, 740, 664, 0, 168,
	800, 696, 708, 688, 776, 687, 226, 792, 370, 371,
	200, 388, 894, 853, 170, 882, 852, 283, 291, 282,
	855, 366, 839, 769, 758, 756, 665, 837, 767, 757,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	878, 760, 0, 165, 0, 345, 847, 864, 349, 182,
	682, 814, 361, 144, 312, 183, 225, 217, 305, 883,
	881, 872, 873, 249, 257, 796, 861, 295, 321, 189,
	376, 342, 213, 899, 288, 901, 897, 900, 898, 917,
	918, 939, 940, 941, 928, 895, 0, 936, 937, 0,
	751, 841, 666, 0, 817, 153, 154, 789, 859, 907,
	196, 132, 890, 891, 892, 133, 911, 912, 134, 135,
	934, 933, 932, 935, 136, 944, 943, 945, 896, 903,
	906, 913, 914, 915, 922, 923, 930, 925, 926, 0,
	747, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 919,
	160, 171, 253, 860, 314, 223, 654, 661, 680, 683,
	684, 685, 686, 690, 695, 701, 707, 709, 710, 718,
	723, 724, 725, 726, 733, 735, 736, 737, 738, 739,
	742, 743, 745, 752, 753, 759, 764, 765, 771, 772,
	0, 795, 798, 927, 809, 811, 815, 816, 823, 828,
	829, 854, 858, 863, 377, 205, 750, 770, 801, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 879, 880, 310, 149, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 833, 730, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 717, 162, 832, 856, 777,
	791, 844, 0, 356, 909, 848, 691, 714, 857, 720,
	722, 785, 667, 762, 292, 711, 668, 0, 0, 659,
	904, 660, 692, 210, 902, 818, 763, 846, 748, 778,
	788, 209, 198, 755, 754, 835, 703, 702, 783, 831,
	845, 0, 0, 942, 255, 0, 0, 380, 344, 275,
	0, 0, 746, 0, 916, 929, 731, 787, 679, 774,
	850, 712, 779, 851, 0, 0, 0, 0, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 924,
	938, 905, 0, 741, 784, 862, 658, 921, 0, 663,
	893, 0, 836, 699, 700, 214, 0, 0, 0, 0,
	0, 0, 0, 744, 761, 803, 728, 375, 790, 799,
	813, 721, 309, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 673, 889,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 910, 0, 0, 0, 678, 656, 697, 805,
	657, 655, 276, 670, 931, 834, 729, 244, 155, 840,
	727, 908, 793, 674, 822, 715, 252, 672, 156, 669,
	675, 713, 287, 802, 808, 143, 159, 254, 819, 693,
	706, 199, 0, 320, 780, 374, 888, 766, 319, 256,
	367, 794, 842, 373, 716, 351, 381, 385, 221, 749,
	190, 341, 212, 207, 698, 812, 662, 229, 308, 202,
	248, 732, 786, 694, 195, 797, 773, 824, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 820, 807, 826, 689,
	676, 681, 677, 705, 843, 238, 230, 827, 825, 378,
	145, 329, 328, 719, 237, 810, 146, 137, 315, 147,
	245, 164, 830, 387, 178, 250, 358, 887, 224, 286,
	201, 782, 296, 704, 158, 311, 268, 270, 267, 271,
	227, 141, 148, 806, 313, 331, 362, 180, 347, 139,
	140, 142, 150, 322, 151, 152, 849, 262, 216, 220,
	231, 242, 781, 318, 348, 379, 775, 175, 167, 350,
	1328, 185, 330, 333, 386, 804, 174, 169, 838, 821,
	768, 734, 740, 664, 0, 168, 800, 696, 708, 688,
	776, 687, 226, 792, 370, 371, 200, 388, 894, 853,
	170, 671, 852, 283, 291, 282, 855, 366, 839, 769,
	758, 756, 665, 837, 767, 757, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 760, 0, 165,
	0, 345, 847, 864, 349, 182, 682, 814, 361, 144,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 796, 861, 295, 321, 189, 376, 342, 213, 899,
	288, 901, 897, 900, 898, 917, 918, 939, 940, 941,
	928, 895, 0, 936, 937, 0, 751, 841, 666, 0,
	817, 153, 154, 789, 859, 907, 196, 132, 890, 891,
	892, 133, 911, 912, 134, 135, 934, 933, 932, 935,
	136, 944, 943, 945, 896, 903, 906, 913, 914, 915,
	922, 923, 930, 925, 926, 0, 747, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 919, 160, 171, 253, 860,
	314, 223, 654, 661, 680, 683, 684, 685, 686, 690,
	695, 701, 707, 709, 710, 718, 723, 724, 725, 726,
	733, 735, 736, 737, 738, 739, 742, 743, 745, 752,
	753, 759, 764, 765, 771, 772, 0, 795, 798, 927,
	809, 811, 815, 816, 823, 828, 829, 854, 858, 863,
	377, 205, 750, 770, 801, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 149, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	833, 730, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 717, 162, 832, 856, 777, 791, 844, 0, 356,
	909, 848, 691, 714, 857, 720, 722, 785, 667, 762,
	292, 711, 668, 0, 0, 659, 904, 660, 692, 210,
	902, 818, 763, 846, 748, 778, 788, 209, 198, 755,
	754, 835, 703, 702, 783, 831, 845, 0, 0, 942,
	255, 0, 0, 380, 344, 275, 0, 0, 746, 0,
	916, 929, 731, 787, 679, 774, 850, 712, 779, 851,
	0, 0, 0, 0, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 924, 938, 905, 0, 741,
	784, 862, 658, 921, 0, 663, 893, 0, 836, 699,
	700, 214, 0, 0, 0, 0, 0, 0, 0, 744,
	761, 803, 728, 375, 790, 799, 813, 721, 309, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 673, 889, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 910, 0,
	0, 0, 678, 656, 697, 805, 657, 655, 276, 670,
	931, 834, 729, 244, 155, 840, 727, 908, 793, 674,
	822, 715, 252, 672, 156, 669, 675, 713, 287, 802,
	808, 143, 159, 254, 819, 693, 706, 199, 0, 320,
	780, 374, 888, 766, 319, 256, 367, 794, 842, 373,
	716, 351, 381, 385, 221, 749, 190, 341, 212, 207,
	698, 812, 662, 229, 308, 202, 248, 732, 786, 694,
	195, 797, 773, 824, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 820, 807, 826, 689, 676, 681, 677, 705,
	843, 238, 230, 827, 825, 378, 145, 329, 328, 719,
	237, 810, 146, 137, 315, 147, 245, 164, 830, 387,
	178, 250, 358, 887, 224, 286, 201, 782, 296, 704,
	158, 311, 268, 270, 267, 271, 227, 141, 148, 806,
	313, 331, 362, 180, 347, 139, 140, 142, 150, 322,
	151, 152, 849, 262, 216, 220, 231, 242, 781, 318,
	348, 379, 775, 175, 167, 350, 869, 185, 330, 333,
	386, 804, 174, 169, 838, 821, 768, 734, 740, 664,
	0, 168, 800, 696, 708, 688, 776, 687, 226, 792,
	370, 371, 200, 388, 894, 853, 170, 882, 852, 283,
	291, 282, 855, 366, 839, 769, 758, 756, 665, 837,
	767, 757, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 878, 760, 0, 165, 0, 345, 847, 864,
	349, 182, 682, 814, 361, 144, 312, 183, 225, 217,
	305, 883, 881, 872, 873, 249, 257, 796, 861, 295,
	321, 189, 376, 342, 213, 899, 288, 901, 897, 900,
	898, 917, 918, 939, 940, 941, 928, 895, 0, 936,
	937, 0, 751, 841, 666, 0, 817, 153, 154, 789,
	859, 907, 196, 132, 890, 891, 892, 133, 911, 912,
	134, 135, 934, 933, 932, 935, 136, 944, 943, 945,
	896, 903, 906, 913, 914, 915, 922, 923, 930, 925,
	926, 0, 747, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 919, 160, 171, 253, 860, 314, 223, 654, 661,
	680, 683, 684, 685, 686, 690, 695, 701, 707, 709,
	710, 718, 723, 724, 725, 726, 733, 735, 736, 737,
	738, 739, 742, 743, 745, 752, 753, 759, 764, 765,
	771, 772, 0, 795, 798, 927, 809, 811, 815, 816,
	823, 828, 829, 854, 858, 863, 377, 205, 750, 770,
	801, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 879, 880, 310,
	149, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 833, 730, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 717, 162, 832,
	856, 777, 791, 1701, 1663, 356, 1556, 1705, 1505, 1535,
	1722, 1541, 1544, 1625, 1471, 1594, 292, 1532, 1472, 1455,
	1510, 1459, 1523, 1460, 1507, 210, 1503, 1666, 1597, 1703,
	1576, 1618, 1628, 209, 198, 1586, 1585, 1691, 1521, 1520,
	1623, 1680, 1702, 1575, 0, 1712, 255, 1677, 0, 380,
	344, 275, 0, 0, 1571, 1686, 1592, 1655, 1554, 1627,
	1487, 1610, 1707, 1533, 1619, 1708, 0, 0, 0, 0,
	2689, 0, 2684, 2685, 0, 0, 0, 0, 0, 2686,
	0, 1615, 1699, 1526, 0, 1566, 1624, 1727, 1458, 1611,
	0, 1463, 1474, 1721, 1692, 1517, 1518, 214, 0, 0,
	0, 0, 0, 0, 0, 1569, 1593, 1645, 1551, 375,
	1630, 1640, 1658, 1543, 309, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 1608, 0, 0, 0,
	1479, 1465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 0, 0, 0, 1486, 1456,
	1514, 1647, 1457, 1454, 276, 1475, 1660, 1690, 1552, 244,
	0, 1696, 1550, 1549, 1634, 1480, 1670, 1536, 252, 1478,
	156, 1473, 1481, 1534, 287, 1644, 1652, 0, 159, 254,
	1667, 1508, 1525, 199, 0, 320, 1620, 374, 0, 1601,
	319, 256, 367, 1635, 1698, 373, 1537, 351, 381, 385,
	221, 1577, 190, 341, 212, 207, 1516, 1657, 1462, 229,
	308, 202, 248, 1555, 1626, 1509, 195, 1638, 1609, 1672,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 1668, 1651,
	1674, 1502, 1482, 1493, 1483, 1524, 1700, 238, 230, 1675,
	1673, 378, 0, 329, 328, 1540, 237, 1654, 0, 0,
	315, 2688, 245, 164, 1679, 387, 178, 250, 358, 0,
	224, 286, 201, 1622, 296, 1522, 158, 311, 268, 270,
	267, 271, 227, 0, 0, 1650, 313, 331, 362, 180,
	347, 2687, 0, 0, 0, 322, 0, 0, 1706, 262,
	216, 220, 231, 242, 1621, 318, 348, 379, 1612, 175,
	167, 350, 372, 185, 330, 333, 386, 1646, 174, 169,
	1694, 1669, 1603, 1558, 1564, 1464, 0, 168, 1642, 1513,
	1529, 1501, 1616, 1500, 226, 1633, 370, 371, 200, 388,
	1476, 1714, 170, 1477, 1713, 283, 291, 282, 1717, 366,
	1695, 1604, 1589, 1587, 1469, 1693, 1602, 1588, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 1591,
	0, 165, 0, 345, 1704, 1729, 349, 182, 1495, 1661,
	361, 0, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 1637, 1726, 295, 321, 189, 376, 342,
	213, 1491, 288, 1494, 1489, 1492, 1490, 1595, 1596, 1709,
	1710, 1711, 1649, 1484, 0, 1687, 1688, 0, 1582, 1697,
	1470, 0, 1665, 0, 0, 1629, 1724, 1542, 196, 0,
	1466, 1467, 1468, 0, 1572, 1573, 0, 0, 1683, 1682,
	1681, 1684, 0, 1718, 1716, 1719, 1485, 1506, 1528, 1578,
	1579, 1581, 1613, 1614, 1659, 1632, 1641, 1515, 1574, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 1600, 160, 171,
	253, 1725, 314, 223, 1453, 1461, 1488, 1496, 1497, 1498,
	1499, 1504, 1511, 1519, 1527, 1530, 1531, 1539, 1545, 1546,
	1547, 1548, 1557, 1559, 1560, 1561, 1562, 1563, 1567, 1568,
	1570, 1583, 1584, 1590, 1598, 1599, 1606, 1607, 0, 1636,
	1639, 1648, 1653, 1656, 1662, 1664, 1671, 1676, 1678, 1715,
	1723, 1728, 377, 205, 1580, 1605, 1643, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 0, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 1689, 1553, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 1538, 162, 1685, 1720, 1617, 1631, 1701,
	1663, 356, 1556, 1705, 1505, 1535, 1722, 1541, 1544, 1625,
	1471, 1594, 292, 1532, 1472, 1455, 1510, 1459, 1523, 1460,
	1507, 210, 1503, 1666, 1597, 1703, 1576, 1618, 1628, 209,
	198, 1586, 1585, 1691, 1521, 1520, 1623, 1680, 1702, 1575,
	0, 1712, 255, 1677, 0, 380, 344, 275, 0, 0,
	1571, 1686, 1592, 1655, 1554, 1627, 1487, 1610, 1707, 1533,
	1619, 1708, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 1699, 1526,
	0, 1566, 1624, 1727, 1458, 1611, 0, 1463, 1474, 1721,
	1692, 1517, 1518, 214, 0, 0, 0, 0, 0, 0,
	0, 1569, 1593, 1645, 1551, 375, 1630, 1640, 1658, 1543,
	309, 228, 0, 0, 0, 0, 0, 0, 3063, 0,
	1512, 0, 1608, 0, 0, 0, 1479, 1465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 1486, 1456, 1514, 1647, 1457, 1454,
	276, 1475, 1660, 1690, 1552, 244, 0, 1696, 1550, 1549,
	1634, 1480, 1670, 1536, 252, 1478, 156, 1473, 1481, 1534,
	287, 1644, 1652, 0, 159, 254, 1667, 1508, 1525, 199,
	0, 320, 1620, 374, 0, 1601, 319, 256, 367, 1635,
	1698, 373, 1537, 351, 381, 385, 221, 1577, 190, 341,
	212, 207, 1516, 1657, 1462, 229, 308, 202, 248, 1555,
	1626, 1509, 195, 1638, 1609, 1672, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 1668, 1651, 1674, 1502, 1482, 1493,
	1483, 1524, 1700, 238, 230, 1675, 1673, 378, 0, 329,
	328, 1540, 237, 1654, 0, 0, 315, 0, 245, 164,
	1679, 387, 178, 250, 358, 0, 224, 286, 201, 1622,
	296, 1522, 158, 311, 268, 270, 267, 271, 227, 0,
	0, 1650, 313, 331, 362, 180, 347, 0, 0, 0,
	0, 322, 0, 0, 1706, 262, 216, 220, 231, 242,
	1621, 318, 348, 379, 1612, 175, 167, 350, 372, 185,
	330, 333, 386, 1646, 174, 169, 1694, 1669, 1603, 1558,
	1564, 1464, 0, 168, 1642, 1513, 1529, 1501, 1616, 1500,
	226, 1633, 370, 371, 200, 388, 1476, 1714, 170, 1477,
	1713, 283, 291, 282, 1717, 366, 1695, 1604, 1589, 1587,
	1469, 1693, 1602, 1588, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 1591, 0, 165, 0, 345,
	1704, 1729, 349, 182, 1495, 1661, 361, 0, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 1637,
	1726, 295, 321, 189, 376, 342, 213, 1491, 288, 1494,
	1489, 1492, 1490, 1595, 1596, 1709, 1710, 1711, 1649, 1484,
	0, 1687, 1688, 0, 1582, 1697, 1470, 0, 1665, 0,
	0, 1629, 1724, 1542, 196, 0, 1466, 1467, 1468, 0,
	1572, 1573, 0, 0, 1683, 1682, 1681, 1684, 0, 1718,
	1716, 1719, 1485, 1506, 1528, 1578, 1579, 1581, 1613, 1614,
	1659, 1632, 1641, 1515, 1574, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 1600, 160, 171, 253, 1725, 314, 223,
	1453, 1461, 1488, 1496, 1497, 1498, 1499, 1504, 1511, 1519,
	1527, 1530, 1531, 1539, 1545, 1546, 1547, 1548, 1557, 1559,
	1560, 1561, 1562, 1563, 1567, 1568, 1570, 1583, 1584, 1590,
	1598, 1599, 1606, 1607, 0, 1636, 1639, 1648, 1653, 1656,
	1662, 1664, 1671, 1676, 1678, 1715, 1723, 1728, 377, 205,
	1580, 1605, 1643, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 0, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 1689, 1553,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 1538,
	162, 1685, 1720, 1617, 1631, 1701, 1663, 356, 1556, 1705,
	1505, 1535, 1722, 1541, 1544, 1625, 1471, 1594, 292, 1532,
	1472, 1455, 1510, 1459, 1523, 1460, 1507, 210, 1503, 1666,
	1597, 1703, 1576, 1618, 1628, 209, 198, 1586, 1585, 1691,
	1521, 1520, 1623, 1680, 1702, 1575, 0, 1712, 255, 1677,
	0, 380, 344, 275, 0, 0, 1571, 1686, 1592, 1655,
	1554, 1627, 1487, 1610, 1707, 1533, 1619, 1708, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1699, 1526, 0, 1566, 1624, 1727,
	1458, 1611, 0, 1463, 1474, 1721, 1692, 1517, 1518, 214,
	0, 0, 0, 0, 0, 0, 0, 1569, 1593, 1645,
	1551, 375, 1630, 1640, 1658, 1543, 309, 228, 0, 0,
	0, 0, 0, 0, 2533, 0, 1512, 0, 1608, 0,
	0, 0, 1479, 1465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 0, 0, 0,
	1486, 1456, 1514, 1647, 1457, 1454, 276, 1475, 1660, 1690,
	1552, 244, 0, 1696, 1550, 1549, 1634, 1480, 1670, 1536,
	252, 1478, 156, 1473, 1481, 1534, 287, 1644, 1652, 0,
	159, 254, 1667, 1508, 1525, 199, 0, 320, 1620, 374,
	0, 1601, 319, 256, 367, 1635, 1698, 373, 1537, 351,
	381, 385, 221, 1577, 190, 341, 212, 207, 1516, 1657,
	1462, 229, 308, 202, 248, 1555, 1626, 1509, 195, 1638,
	1609, 1672, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	1668, 1651, 1674, 1502, 1482, 1493, 1483, 1524, 1700, 238,
	230, 1675, 1673, 378, 0, 329, 328, 1540, 237, 1654,
	0, 0, 315, 0, 245, 164, 1679, 387, 178, 250,
	358, 0, 224, 286, 201, 1622, 296, 1522, 158, 311,
	268, 270, 267, 271, 227, 0, 0, 1650, 313, 331,
	362, 180, 347, 0, 0, 0, 0, 322, 0, 0,
	1706, 262, 216, 220, 231, 242, 1621, 318, 348, 379,
	1612, 175, 167, 350, 372, 185, 330, 333, 386, 1646,
	174, 169, 1694, 1669, 1603, 1558, 1564, 1464, 0, 168,
	1642, 1513, 1529, 1501, 1616, 1500, 226, 1633, 370, 371,
	200, 388, 1476, 1714, 170, 1477, 1713, 283, 291, 282,
	1717, 366, 1695, 1604, 1589, 1587, 1469, 1693, 1602, 1588,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 1591, 0, 165, 0, 345, 1704, 1729, 349, 182,
	1495, 1661, 361, 0, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 1637, 1726, 295, 321, 189,
	376, 342, 213, 1491, 288, 1494, 1489, 1492, 1490, 1595,
	1596, 1709, 1710, 1711, 1649, 1484, 0, 1687, 1688, 0,
	1582, 1697, 1470, 0, 1665, 0, 0, 1629, 1724, 1542,
	196, 0, 1466, 1467, 1468, 0, 1572, 1573, 0, 0,
	1683, 1682, 1681, 1684, 0, 1718, 1716, 1719, 1485, 1506,
	1528, 1578, 1579, 1581, 1613, 1614, 1659, 1632, 1641, 1515,
	1574, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 1600,
	160, 171, 253, 1725, 314, 223, 1453, 1461, 1488, 1496,
	1497, 1498, 1499, 1504, 1511, 1519, 1527, 1530, 1531, 1539,
	1545, 1546, 1547, 1548, 1557, 1559, 1560, 1561, 1562, 1563,
	1567, 1568, 1570, 1583, 1584, 1590, 1598, 1599, 1606, 1607,
	0, 1636, 1639, 1648, 1653, 1656, 1662, 1664, 1671, 1676,
	1678, 1715, 1723, 1728, 377, 205, 1580, 1605, 1643, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 0, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 1689, 1553, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 1538, 162, 1685, 1720, 1617,
	1631, 1701, 1663, 356, 1556, 1705, 1505, 1535, 1722, 1541,
	1544, 1625, 1471, 1594, 292, 1532, 1472, 1455, 1510, 1459,
	1523, 1460, 1507, 210, 1503, 1666, 1597, 1703, 1576, 1618,
	1628, 209, 198, 1586, 1585, 1691, 1521, 1520, 1623, 1680,
	1702, 1575, 0, 1712, 255, 1677, 0, 380, 344, 275,
	0, 0, 1571, 1686, 1592, 1655, 1554, 1627, 1487, 1610,
	1707, 1533, 1619, 1708, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1699, 1526, 0, 1566, 1624, 1727, 1458, 1611, 0, 1463,
	1474, 1721, 1692, 1517, 1518, 214, 0, 0, 0, 0,
	0, 0, 0, 1569, 1593, 1645, 1551, 375, 1630, 1640,
	1658, 1543, 309, 228, 0, 0, 0, 0, 0, 0,
	2337, 0, 1512, 0, 1608, 0, 0, 0, 1479, 1465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 0, 1486, 1456, 1514, 1647,
	1457, 1454, 276, 1475, 1660, 1690, 1552, 244, 0, 1696,
	1550, 1549, 1634, 1480, 1670, 1536, 252, 1478, 156, 1473,
	1481, 1534, 287, 1644, 1652, 0, 159, 254, 1667, 1508,
	1525, 199, 0, 320, 1620, 374, 0, 1601, 319, 256,
	367, 1635, 1698, 373, 1537, 351, 381, 385, 221, 1577,
	190, 341, 212, 207, 1516, 1657, 1462, 229, 308, 202,
	248, 1555, 1626, 1509, 195, 1638, 1609, 1672, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 1668, 1651, 1674, 1502,
	1482, 1493, 1483, 1524, 1700, 238, 230, 1675, 1673, 378,
	0, 329, 328, 1540, 237, 1654, 0, 0, 315, 0,
	245, 164, 1679, 387, 178, 250, 358, 0, 224, 286,
	201, 1622, 296, 1522, 158, 311, 268, 270, 267, 271,
	227, 0, 0, 1650, 313, 331, 362, 180, 347, 0,
	0, 0, 0, 322, 0, 0, 1706, 262, 216, 220,
	231, 242, 1621, 318, 348, 379, 1612, 175, 167, 350,
	372, 185, 330, 333, 386, 1646, 174, 169, 1694, 1669,
	1603, 1558, 1564, 1464, 0, 168, 1642, 1513, 1529, 1501,
	1616, 1500, 226, 1633, 370, 371, 200, 388, 1476, 1714,
	170, 1477, 1713, 283, 291, 282, 1717, 366, 1695, 1604,
	1589, 1587, 1469, 1693, 1602, 1588, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 1591, 0, 165,
	0, 345, 1704, 1729, 349, 182, 1495, 1661, 361, 0,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 1637, 1726, 295, 321, 189, 376, 342, 213, 1491,
	288, 1494, 1489, 1492, 1490, 1595, 1596, 1709, 1710, 1711,
	1649, 1484, 0, 1687, 1688, 0, 1582, 1697, 1470, 0,
	1665, 0, 0, 1629, 1724, 1542, 196, 0, 1466, 1467,
	1468, 0, 1572, 1573, 0, 0, 1683, 1682, 1681, 1684,
	0, 1718, 1716, 1719, 1485, 1506, 1528, 1578, 1579, 1581,
	1613, 1614, 1659, 1632, 1641, 1515, 1574, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 1600, 160, 171, 253, 1725,
	314, 223, 1453, 1461, 1488, 1496, 1497, 1498, 1499, 1504,
	1511, 1519, 1527, 1530, 1531, 1539, 1545, 1546, 1547, 1548,
	1557, 1559, 1560, 1561, 1562, 1563, 1567, 1568, 1570, 1583,
	1584, 1590, 1598, 1599, 1606, 1607, 0, 1636, 1639, 1648,
	1653, 1656, 1662, 1664, 1671, 1676, 1678, 1715, 1723, 1728,
	377, 205, 1580, 1605, 1643, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 0, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	1689, 1553, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 1538, 162, 1685, 1720, 1617, 1631, 1701, 1663, 356,
	1556, 1705, 1505, 1535, 1722, 1541, 1544, 1625, 1471, 1594,
	292, 1532, 1472, 1455, 1510, 1459, 1523, 1460, 1507, 210,
	1503, 1666, 1597, 1703, 1576, 1618, 1628, 209, 198, 1586,
	1585, 1691, 1521, 1520, 1623, 1680, 1702, 1575, 0, 1712,
	255, 1677, 0, 380, 344, 275, 0, 0, 1571, 1686,
	1592, 1655, 1554, 1627, 1487, 1610, 1707, 1533, 1619, 1708,
	0, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1615, 1699, 1526, 0, 1566,
	1624, 1727, 1458, 1611, 0, 1463, 1474, 1721, 1692, 1517,
	1518, 214, 0, 0, 0, 0, 0, 0, 0, 1569,
	1593, 1645, 1551, 375, 1630, 1640, 1658, 1543, 309, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 0,
	1608, 0, 0, 0, 1479, 1465, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 1486, 1456, 1514, 1647, 1457, 1454, 276, 1475,
	1660, 1690, 1552, 244, 0, 1696, 1550, 1549, 1634, 1480,
	1670, 1536, 252, 1478, 156, 1473, 1481, 1534, 287, 1644,
	1652, 0, 159, 254, 1667, 1508, 1525, 199, 0, 320,
	1620, 374, 0, 1601, 319, 256, 367, 1635, 1698, 373,
	1537, 351, 381, 385, 221, 1577, 190, 341, 212, 207,
	1516, 1657, 1462, 229, 308, 202, 248, 1555, 1626, 1509,
	195, 1638, 1609, 1672, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 1668, 1651, 1674, 1502, 1482, 1493, 1483, 1524,
	1700, 238, 230, 1675, 1673, 378, 0, 329, 328, 1540,
	237, 1654, 0, 0, 315, 0, 245, 164, 1679, 387,
	178, 250, 358, 0, 224, 286, 201, 1622, 296, 1522,
	158, 311, 268, 270, 267, 271, 227, 0, 0, 1650,
	313, 331, 362, 180, 347, 0, 0, 0, 0, 322,
	0, 0, 1706, 262, 216, 220, 231, 242, 1621, 318,
	348, 379, 1612, 175, 167, 350, 372, 185, 330, 333,
	386, 1646, 174, 169, 1694, 1669, 1603, 1558, 1564, 1464,
	0, 168, 1642, 1513, 1529, 1501, 1616, 1500, 226, 1633,
	370, 371, 200, 388, 1476, 1714, 170, 1477, 1713, 283,
	291, 282, 1717, 366, 1695, 1604, 1589, 1587, 1469, 1693,
	1602, 1588, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 1591, 0, 165, 0, 345, 1704, 1729,
	349, 182, 1495, 1661, 361, 1925, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 1637, 1726, 295,
	321, 189, 376, 342, 213, 1491, 288, 1494, 1489, 1492,
	1490, 1595, 1596, 1709, 1710, 1711, 1649, 1484, 0, 1687,
	1688, 0, 1582, 1697, 1470, 0, 1665, 0, 0, 1629,
	1724, 1542, 196, 0, 1466, 1467, 1468, 0, 1572, 1573,
	0, 0, 1683, 1682, 1681, 1684, 0, 1718, 1716, 1719,
	1485, 1506, 1528, 1578, 1579, 1581, 1613, 1614, 1659, 1632,
	1641, 1515, 1574, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 1600, 160, 171, 253, 1725, 314, 223, 1453, 1461,
	1488, 1496, 1497, 1498, 1499, 1504, 1511, 1519, 1527, 1530,
	1531, 1539, 1545, 1546, 1547, 1548, 1557, 1559, 1560, 1561,
	1562, 1563, 1567, 1568, 1570, 1583, 1584, 1590, 1598, 1599,
	1606, 1607, 0, 1636, 1639, 1648, 1653, 1656, 1662, 1664,
	1671, 1676, 1678, 1715, 1723, 1728, 377, 205, 1580, 1605,
	1643, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	0, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 1689, 1553, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 1538, 162, 1685,
	1720, 1617, 1631, 1701, 1663, 356, 1556, 1705, 1505, 1535,
	1722, 1541, 1544, 1625, 1471, 1594, 292, 1532, 1472, 1455,
	1510, 1459, 1523, 1460, 1507, 210, 1503, 1666, 1597, 1703,
	1576, 1618, 1628, 209, 198, 1586, 1585, 1691, 1521, 1520,
	1623, 1680, 1702, 1575, 0, 1712, 255, 1677, 0, 380,
	344, 275, 0, 0, 1571, 1686, 1592, 1655, 1554, 1627,
	1487, 1610, 1707, 1533, 1619, 1708, 0, 0, 0, 0,
	960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1615, 1699, 1526, 0, 1566, 1624, 1727, 1458, 1611,
	0, 1463, 1474, 1721, 1692, 1517, 1518, 214, 0, 0,
	0, 0, 0, 0, 0, 1569, 1593, 1645, 1551, 375,
	1630, 1640, 1658, 1543, 309, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 0, 1608, 0, 0, 0,
	1479, 1465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 0, 0, 0, 1486, 1456,
	1514, 1647, 1457, 1454, 276, 1475, 1660, 1690, 1552, 244,
	0, 1696, 1550, 1549, 1634, 1480, 1670, 1536, 252, 1478,
	156, 1473, 1481, 1534, 287, 1644, 1652, 0, 159, 254,
	1667, 1508, 1525, 199, 0, 320, 1620, 374, 0, 1601,
	319, 256, 367, 1635, 1698, 373, 1537, 351, 381, 385,
	221, 1577, 190, 341, 212, 207, 1516, 1657, 1462, 229,
	308, 202, 248, 1555, 1626, 1509, 195, 1638, 1609, 1672,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 1668, 1651,
	1674, 1502, 1482, 1493, 1483, 1524, 1700, 238, 230, 1675,
	1673, 378, 0, 329, 328, 1540, 237, 1654, 0, 0,
	315, 0, 245, 164, 1679, 387, 178, 250, 358, 0,
	224, 286, 201, 1622, 296, 1522, 158, 311, 268, 270,
	267, 271, 227, 0, 0, 1650, 313, 331, 362, 180,
	347, 0, 0, 0, 0, 322, 0, 0, 1706, 262,
	216, 220, 231, 242, 1621, 318, 348, 379, 1612, 175,
	167, 350, 372, 185, 330, 333, 386, 1646, 174, 169,
	1694, 1669, 1603, 1558, 1564, 1464, 0, 168, 1642, 1513,
	1529, 1501, 1616, 1500, 226, 1633, 370, 371, 200, 388,
	1476, 1714, 170, 1477, 1713, 283, 291, 282, 1717, 366,
	1695, 1604, 1589, 1587, 1469, 1693, 1602, 1588, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 1591,
	0, 165, 0, 345, 1704, 1729, 349, 182, 1495, 1661,
	361, 0, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 1637, 1726, 295, 321, 189, 376, 342,
	213, 1491, 288, 1494, 1489, 1492, 1490, 1595, 1596, 1709,
	1710, 1711, 1649, 1484, 0, 1687, 1688, 0, 1582, 1697,
	1470, 0, 1665, 0, 0, 1629, 1724, 1542, 196, 0,
	1466, 1467, 1468, 0, 1572, 1573, 0, 0, 1683, 1682,
	1681, 1684, 0, 1718, 1716, 1719, 1485, 1506, 1528, 1578,
	1579, 1581, 1613, 1614, 1659, 1632, 1641, 1515, 1574, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 1600, 160, 171,
	253, 1725, 314, 223, 1453, 1461, 1488, 1496, 1497, 1498,
	1499, 1504, 1511, 1519, 1527, 1530, 1531, 1539, 1545, 1546,
	1547, 1548, 1557, 1559, 1560, 1561, 1562, 1563, 1567, 1568,
	1570, 1583, 1584, 1590, 1598, 1599, 1606, 1607, 0, 1636,
	1639, 1648, 1653, 1656, 1662, 1664, 1671, 1676, 1678, 1715,
	1723, 1728, 377, 205, 1580, 1605, 1643, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 0, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 1689, 1553, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 1538, 162, 1685, 1720, 1617, 1631, 1701,
	1663, 356, 1556, 1705, 1505, 1535, 1722, 1541, 1544, 1625,
	1471, 1594, 292, 1532, 1472, 1455, 1510, 1459, 1523, 1460,
	1507, 210, 1503, 1666, 1597, 1703, 1576, 1618, 1628, 209,
	198, 1586, 1585, 1691, 1521, 1520, 1623, 1680, 1702, 1575,
	0, 1712, 255, 1677, 0, 380, 344, 275, 0, 0,
	1571, 1686, 1592, 1655, 1554, 1627, 1487, 1610, 1707, 1533,
	1619, 1708, 0, 0, 0, 0, 3430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1615, 1699, 1526,
	0, 1566, 1624, 1727, 1458, 1611, 0, 1463, 1474, 1721,
	1692, 1517, 1518, 214, 0, 0, 0, 0, 0, 0,
	0, 1569, 1593, 1645, 1551, 375, 1630, 1640, 1658, 1543,
	309, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	1512, 0, 1608, 0, 0, 0, 1479, 1465, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 1486, 1456, 1514, 1647, 1457, 1454,
	276, 1475, 1660, 1690, 1552, 244, 0, 1696, 1550, 1549,
	1634, 1480, 1670, 1536, 252, 1478, 156, 1473, 1481, 1534,
	287, 1644, 1652, 0, 159, 254, 1667, 1508, 1525, 199,
	0, 320, 1620, 374, 0, 1601, 319, 256, 367, 1635,
	1698, 373, 1537, 351, 381, 385, 221, 1577, 190, 341,
	212, 207, 1516, 1657, 1462, 229, 308, 202, 248, 1555,
	1626, 1509, 195, 1638, 1609, 1672, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 1668, 1651, 1674, 1502, 1482, 1493,
	3433, 3434, 3435, 238, 230, 1675, 1673, 378, 0, 329,
	328, 1540, 237, 1654, 0, 0, 315, 0, 245, 164,
	1679, 387, 178, 250, 358, 0, 224, 286, 201, 1622,
	296, 1522, 158, 311, 268, 270, 267, 271, 227, 0,
	0, 1650, 313, 331, 362, 180, 347, 0, 0, 0,
	0, 322, 0, 0, 1706, 262, 216, 220, 231, 242,
	1621, 318, 348, 379, 1612, 175, 167, 350, 372, 185,
	330, 333, 386, 1646, 174, 169, 1694, 1669, 1603, 1558,
	1564, 1464, 0, 168, 1642, 1513, 1529, 1501, 1616, 1500,
	226, 1633, 370, 371, 200, 388, 1476, 1714, 170, 1477,
	1713, 283, 291, 282, 1717, 366, 1695, 1604, 1589, 1587,
	1469, 1693, 1602, 1588, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 1591, 0, 165, 0, 345,
	1704, 1729, 349, 182, 1495, 1661, 361, 0, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 1637,
	1726, 295, 321, 189, 376, 342, 213, 1491, 288, 1494,
	1489, 1492, 1490, 1595, 1596, 1709, 1710, 1711, 1649, 1484,
	0, 1687, 1688, 0, 1582, 1697, 1470, 0, 1665, 0,
	0, 1629, 1724, 1542, 196, 0, 1466, 1467, 1468, 0,
	1572, 1573, 0, 0, 1683, 1682, 1681, 1684, 0, 1718,
	1716, 1719, 1485, 1506, 1528, 1578, 1579, 1581, 1613, 1614,
	1659, 1632, 1641, 1515, 1574, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 1600, 160, 171, 253, 1725, 314, 223,
	1453, 1461, 1488, 1496, 1497, 1498, 1499, 1504, 1511, 1519,
	1527, 1530, 1531, 1539, 1545, 1546, 1547, 1548, 1557, 1559,
	1560, 1561, 1562, 1563, 1567, 1568, 1570, 1583, 1584, 1590,
	1598, 1599, 1606, 1607, 0, 1636, 1639, 1648, 1653, 1656,
	1662, 1664, 1671, 1676, 1678, 1715, 1723, 1728, 377, 205,
	1580, 1605, 1643, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 0, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 1689, 1553,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 1538,
	162, 1685, 1720, 1617, 1631, 1701, 1663, 356, 1556, 1705,
	1505, 1535, 1722, 1541, 1544, 1625, 1471, 1594, 292, 1532,
	1472, 1455, 1510, 1459, 1523, 1460, 1507, 210, 1503, 1666,
	1597, 1703, 1576, 1618, 1628, 209, 198, 1586, 1585, 1691,
	1521, 1520, 1623, 1680, 1702, 1575, 0, 1712, 255, 1677,
	0, 380, 344, 275, 0, 0, 1571, 1686, 1592, 1655,
	1554, 1627, 1487, 1610, 1707, 1533, 1619, 1708, 0, 0,
	0, 0, 2689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1615, 1699, 1526, 0, 1566, 1624, 1727,
	1458, 1611, 0, 1463, 1474, 1721, 1692, 1517, 1518, 214,
	0, 0, 0, 0, 0, 0, 0, 1569, 1593, 1645,
	1551, 375, 1630, 1640, 1658, 1543, 309, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 1512, 0, 1608, 0,
	0, 0, 1479, 1465, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1565, 0, 0, 0,
	1486, 1456, 1514, 1647, 1457, 1454, 276, 1475, 1660, 1690,
	1552, 244, 0, 1696, 1550, 1549, 1634, 1480, 1670, 1536,
	252, 1478, 156, 1473, 1481, 1534, 287, 1644, 1652, 0,
	159, 254, 1667, 1508, 1525, 199, 0, 320, 1620, 374,
	0, 1601, 319, 256, 367, 1635, 1698, 373, 1537, 351,
	381, 385, 221, 1577, 190, 341, 212, 207, 1516, 1657,
	1462, 229, 308, 202, 248, 1555, 1626, 1509, 195, 1638,
	1609, 1672, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	1668, 1651, 1674, 1502, 1482, 1493, 1483, 1524, 1700, 238,
	230, 1675, 1673, 378, 0, 329, 328, 1540, 237, 1654,
	0, 0, 315, 0, 245, 164, 1679, 387, 178, 250,
	358, 0, 224, 286, 201, 1622, 296, 1522, 158, 311,
	268, 270, 267, 271, 227, 0, 0, 1650, 313, 331,
	362, 180, 347, 0, 0, 0, 0, 322, 0, 0,
	1706, 262, 216, 220, 231, 242, 1621, 318, 348, 379,
	1612, 175, 167, 350, 372, 185, 330, 333, 386, 1646,
	174, 169, 1694, 1669, 1603, 1558, 1564, 1464, 0, 168,
	1642, 1513, 1529, 1501, 1616, 1500, 226, 1633, 370, 371,
	200, 388, 1476, 1714, 170, 1477, 1713, 283, 291, 282,
	1717, 366, 1695, 1604, 1589, 1587, 1469, 1693, 1602, 1588,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 1591, 0, 165, 0, 345, 1704, 1729, 349, 182,
	1495, 1661, 361, 0, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 1637, 1726, 295, 321, 189,
	376, 342, 213, 1491, 288, 1494, 1489, 1492, 1490, 1595,
	1596, 1709, 1710, 1711, 1649, 1484, 0, 1687, 1688, 0,
	1582, 1697, 1470, 0, 1665, 0, 0, 1629, 1724, 1542,
	196, 0, 1466, 1467, 1468, 0, 1572, 1573, 0, 0,
	1683, 1682, 1681, 1684, 0, 1718, 1716, 1719, 1485, 1506,
	1528, 1578, 1579, 1581, 1613, 1614, 1659, 1632, 1641, 1515,
	1574, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 1600,
	160, 171, 253, 1725, 314, 223, 1453, 1461, 1488, 1496,
	1497, 1498, 1499, 1504, 1511, 1519, 1527, 1530, 1531, 1539,
	1545, 1546, 1547, 1548, 1557, 1559, 1560, 1561, 1562, 1563,
	1567, 1568, 1570, 1583, 1584, 1590, 1598, 1599, 1606, 1607,
	0, 1636, 1639, 1648, 1653, 1656, 1662, 1664, 1671, 1676,
	1678, 1715, 1723, 1728, 377, 205, 1580, 1605, 1643, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 0, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 1689, 1553, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 1538, 162, 1685, 1720, 1617,
	1631, 1701, 1663, 356, 1556, 1705, 1505, 1535, 1722, 1541,
	1544, 1625, 1471, 1594, 292, 1532, 1472, 1455, 1510, 1459,
	1523, 1460, 1507, 210, 1503, 1666, 1597, 1703, 1576, 1618,
	1628, 209, 198, 1586, 1585, 1691, 1521, 1520, 1623, 1680,
	1702, 1575, 0, 1712, 255, 1677, 0, 380, 344, 275,
	0, 0, 1571, 1686, 1592, 1655, 1554, 1627, 1487, 1610,
	1707, 1533, 1619, 1708, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	1699, 1526, 0, 1566, 1624, 1727, 1458, 1611, 0, 1463,
	1474, 1721, 1692, 1517, 1518, 214, 0, 0, 0, 0,
	0, 0, 0, 1569, 1593, 1645, 1551, 375, 1630, 1640,
	1658, 1543, 309, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 1608, 0, 0, 0, 1479, 1465,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1565, 0, 0, 0, 1486, 1456, 1514, 1647,
	1457, 1454, 276, 1475, 1660, 1690, 1552, 244, 0, 1696,
	1550, 1549, 1634, 1480, 1670, 1536, 252, 1478, 156, 1473,
	1481, 1534, 287, 1644, 1652, 0, 159, 254, 1667, 1508,
	1525, 199, 0, 320, 1620, 374, 0, 1601, 319, 256,
	367, 1635, 1698, 373, 1537, 351, 381, 385, 221, 1577,
	190, 341, 212, 207, 1516, 1657, 1462, 229, 308, 202,
	248, 1555, 1626, 1509, 195, 1638, 1609, 1672, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 1668, 1651, 1674, 1502,
	1482, 1493, 1483, 1524, 1700, 238, 230, 1675, 1673, 378,
	0, 329, 328, 1540, 237, 1654, 0, 0, 315, 0,
	245, 164, 1679, 387, 178, 250, 358, 0, 224, 286,
	201, 1622, 296, 1522, 158, 311, 268, 270, 267, 271,
	227, 0, 0, 1650, 313, 331, 362, 180, 347, 0,
	0, 0, 0, 322, 0, 0, 1706, 262, 216, 220,
	231, 242, 1621, 318, 348, 379, 1612, 175, 167, 350,
	372, 185, 330, 333, 386, 1646, 174, 169, 1694, 1669,
	1603, 1558, 1564, 1464, 0, 168, 1642, 1513, 1529, 1501,
	1616, 1500, 226, 1633, 370, 371, 200, 388, 1476, 1714,
	170, 1477, 1713, 283, 291, 282, 1717, 366, 1695, 1604,
	1589, 1587, 1469, 1693, 1602, 1588, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 1591, 0, 165,
	0, 345, 1704, 1729, 349, 182, 1495, 1661, 361, 0,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 1637, 1726, 295, 321, 189, 376, 342, 213, 1491,
	288, 1494, 1489, 1492, 1490, 1595, 1596, 1709, 1710, 1711,
	1649, 1484, 0, 1687, 1688, 0, 1582, 1697, 1470, 0,
	1665, 0, 0, 1629, 1724, 1542, 196, 0, 1466, 1467,
	1468, 0, 1572, 1573, 0, 0, 1683, 1682, 1681, 1684,
	0, 1718, 1716, 1719, 1485, 1506, 1528, 1578, 1579, 1581,
	1613, 1614, 1659, 1632, 1641, 1515, 1574, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 1600, 160, 171, 253, 1725,
	314, 223, 1453, 1461, 1488, 1496, 1497, 1498, 1499, 1504,
	1511, 1519, 1527, 1530, 1531, 1539, 1545, 1546, 1547, 1548,
	1557, 1559, 1560, 1561, 1562, 1563, 1567, 1568, 1570, 1583,
	1584, 1590, 1598, 1599, 1606, 1607, 0, 1636, 1639, 1648,
	1653, 1656, 1662, 1664, 1671, 1676, 1678, 1715, 1723, 1728,
	377, 205, 1580, 1605, 1643, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 0, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	1689, 1553, 157, 0, 0, 163, 356, 0, 0, 0,
	0, 1538, 162, 1685, 1720, 1617, 1631, 292, 0, 0,
	0, 0, 1187, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 964,
	380, 344, 275, 967, 966, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1188, 0, 1191, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 965, 0, 1183, 1184, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 1185, 0, 0, 0,
	375, 0, 0, 0, 0, 309, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	244, 155, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 156, 0, 0, 0, 287, 0, 0, 143, 159,
	254, 0, 0, 0, 199, 0, 320, 0, 374, 963,
	0, 319, 256, 367, 0, 0, 373, 0, 351, 381,
	385, 221, 0, 190, 341, 212, 207, 0, 0, 0,
	229, 308, 202, 248, 0, 0, 0, 195, 0, 0,
	0, 340, 364, 161, 272, 365, 384, 179, 357, 273,
	280, 192, 194, 193, 173, 334, 363, 184, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 230,
	0, 0, 378, 145, 329, 328, 0, 237, 0, 146,
	137, 315, 147, 245, 164, 0, 387, 178, 250, 358,
	962, 224, 286, 201, 0, 296, 0, 158, 311, 268,
	270, 267, 271, 227, 141, 148, 0, 313, 331, 362,
	180, 347, 139, 140, 142, 150, 322, 151, 152, 0,
	262, 216, 220, 231, 242, 0, 318, 348, 379, 0,
	175, 167, 350, 372, 185, 330, 333, 386, 0, 174,
	169, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 226, 0, 370, 371, 200,
	388, 0, 0, 170, 0, 0, 283, 291, 282, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	219, 233, 306, 258, 307, 234, 278, 277, 279, 260,
	0, 0, 165, 0, 345, 0, 0, 349, 182, 0,
	0, 361, 144, 312, 183, 225, 217, 305, 281, 176,
	236, 343, 249, 257, 0, 0, 295, 321, 189, 376,
	342, 213, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 154, 0, 0, 0, 196,
	132, 0, 0, 0, 133, 0, 0, 134, 135, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 166, 177, 188, 206, 204, 218, 246, 269, 274,
	300, 332, 337, 352, 353, 354, 355, 208, 0, 211,
	187, 316, 186, 259, 239, 301, 359, 360, 0, 160,
	171, 253, 0, 314, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 205, 0, 0, 0, 172, 181,
	191, 203, 215, 222, 232, 235, 240, 241, 243, 247,
	261, 263, 264, 265, 266, 284, 285, 289, 290, 293,
	294, 297, 298, 299, 303, 304, 310, 149, 317, 323,
	324, 325, 326, 327, 335, 336, 338, 339, 346, 368,
	369, 382, 383, 356, 0, 157, 0, 0, 163, 0,
	0, 0, 0, 0, 292, 162, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 964, 380, 344, 275,
	967, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 960, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 309, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 244, 155, 0,
	0, 0, 0, 0, 0, 0, 252, 968, 156, 0,
	958, 0, 287, 0, 0, 143, 159, 254, 0, 0,
	0, 199, 957, 320, 0, 374, 963, 0, 319, 256,
	367, 0, 0, 373, 0, 351, 381, 385, 221, 0,
	190, 341, 212, 207, 0, 0, 0, 229, 308, 202,
	248, 0, 0, 0, 195, 0, 0, 0, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 230, 0, 0, 378,
	145, 329, 328, 0, 237, 0, 146, 137, 315, 147,
	245, 164, 0, 387, 178, 250, 358, 962, 224, 286,
	201, 0, 296, 0, 158, 311, 268, 270, 267, 271,
	227, 141, 148, 0, 313, 331, 362, 180, 347, 139,
	140, 142, 150, 322, 151, 152, 0, 262, 216, 220,
	231, 242, 0, 318, 348, 379, 0, 175, 167, 350,
	372, 185, 330, 333, 386, 0, 174, 169, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 226, 0, 370, 371, 200, 388, 0, 0,
	170, 0, 0, 283, 291, 282, 0, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 0, 0, 165,
	0, 345, 0, 0, 349, 182, 0, 0, 361, 144,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 0, 0, 295, 321, 189, 376, 342, 213, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 154, 0, 0, 0, 196, 132, 0, 0,
	0, 133, 0, 0, 134, 135, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 0, 160, 171, 253, 0,
	314, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 205, 0, 0, 0, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 149, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	356, 0, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 292, 162, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 964, 380, 344, 275, 967, 966, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1188, 0, 1191, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 309,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 244, 155, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 156, 0, 0, 0, 287,
	0, 0, 143, 159, 254, 0, 0, 0, 199, 1874,
	320, 0, 374, 963, 0, 319, 256, 367, 0, 0,
	373, 0, 351, 381, 385, 221, 0, 190, 341, 212,
	207, 0, 0, 0, 229, 308, 202, 248, 0, 0,
	0, 195, 0, 0, 0, 340, 364, 161, 272, 365,
	384, 179, 357, 273, 280, 192, 194, 193, 173, 334,
	363, 184, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 230, 0, 0, 378, 145, 329, 328,
	0, 237, 0, 146, 137, 315, 147, 245, 164, 0,
	387, 178, 250, 358, 962, 224, 286, 201, 0, 296,
	0, 158, 311, 268, 270, 267, 271, 227, 141, 148,
	0, 313, 331, 362, 180, 347, 139, 140, 142, 150,
	322, 151, 152, 0, 262, 216, 220, 231, 242, 0,
	318, 348, 379, 0, 175, 167, 350, 372, 185, 330,
	333, 386, 0, 174, 169, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 226,
	0, 370, 371, 200, 388, 0, 0, 170, 0, 0,
	283, 291, 282, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 219, 233, 306, 258, 307, 234,
	278, 277, 279, 260, 0, 0, 165, 0, 345, 0,
	0, 349, 182, 0, 0, 361, 144, 312, 183, 225,
	217, 305, 281, 176, 236, 343, 249, 257, 0, 0,
	295, 321, 189, 376, 342, 213, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 154,
	0, 0, 0, 196, 132, 0, 0, 0, 133, 0,
	0, 134, 135, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 166, 177, 188, 206, 204,
	218, 246, 269, 274, 300, 332, 337, 352, 353, 354,
	355, 208, 0, 211, 187, 316, 186, 259, 239, 301,
	359, 360, 0, 160, 171, 253, 0, 314, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 205, 0,
	0, 0, 172, 181, 191, 203, 215, 222, 232, 235,
	240, 241, 243, 247, 261, 263, 264, 265, 266, 284,
	285, 289, 290, 293, 294, 297, 298, 299, 303, 304,
	310, 149, 317, 323, 324, 325, 326, 327, 335, 336,
	338, 339, 346, 368, 369, 382, 383, 356, 0, 157,
	0, 0, 163, 0, 0, 0, 0, 0, 292, 162,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	964, 380, 344, 275, 967, 966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2803, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 309, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 244, 155, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 156, 0, 0, 0, 287, 0, 0, 143,
	159, 254, 0, 0, 0, 199, 0, 320, 0, 374,
	963, 0, 319, 256, 367, 0, 0, 373, 0, 351,
	381, 385, 221, 0, 190, 341, 212, 207, 0, 0,
	0, 229, 308, 202, 248, 0, 0, 0, 195, 0,
	0, 0, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	230, 0, 0, 378, 145, 329, 328, 0, 237, 0,
	146, 137, 315, 147, 245, 164, 0, 387, 178, 250,
	358, 962, 224, 286, 201, 0, 296, 0, 158, 311,
	268, 270, 267, 271, 227, 141, 148, 0, 313, 331,
	362, 180, 347, 139, 140, 142, 150, 322, 151, 152,
	0, 262, 216, 220, 231, 242, 0, 318, 348, 379,
	0, 175, 167, 350, 372, 185, 330, 333, 386, 0,
	174, 169, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 226, 0, 370, 371,
	200, 388, 0, 0, 170, 0, 0, 283, 291, 282,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 0, 0, 165, 0, 345, 0, 0, 349, 182,
	0, 0, 361, 144, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 0, 0, 295, 321, 189,
	376, 342, 213, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 154, 0, 0, 0,
	196, 132, 0, 0, 0, 133, 0, 0, 134, 135,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 0,
	160, 171, 253, 0, 314, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 205, 0, 0, 0, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 149, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 356, 0, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 292, 162, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 964, 380, 344,
	275, 967, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2798,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 309, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 244, 155,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 156,
	0, 0, 0, 287, 0, 0, 143, 159, 254, 0,
	0, 0, 199, 0, 320, 0, 374, 963, 0, 319,
	256, 367, 0, 0, 373, 0, 351, 381, 385, 221,
	0, 190, 341, 212, 207, 0, 0, 0, 229, 308,
	202, 248, 0, 0, 0, 195, 0, 0, 0, 340,
	364, 161, 272, 365, 384, 179, 357, 273, 280, 192,
	194, 193, 173, 334, 363, 184, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 230, 0, 0,
	378, 145, 329, 328, 0, 237, 0, 146, 137, 315,
	147, 245, 164, 0, 387, 178, 250, 358, 962, 224,
	286, 201, 0, 296, 0, 158, 311, 268, 270, 267,
	271, 227, 141, 148, 0, 313, 331, 362, 180, 347,
	139, 140, 142, 150, 322, 151, 152, 0, 262, 216,
	220, 231, 242, 0, 318, 348, 379, 0, 175, 167,
	350, 372, 185, 330, 333, 386, 0, 174, 169, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 226, 0, 370, 371, 200, 388, 0,
	0, 170, 0, 0, 283, 291, 282, 0, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 219, 233,
	306, 258, 307, 234, 278, 277, 279, 260, 0, 0,
	165, 0, 345, 0, 0, 349, 182, 0, 0, 361,
	144, 312, 183, 225, 217, 305, 281, 176, 236, 343,
	249, 257, 0, 0, 295, 321, 189, 376, 342, 213,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 154, 0, 0, 0, 196, 132, 0,
	0, 0, 133, 0, 0, 134, 135, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 166,
	177, 188, 206, 204, 218, 246, 269, 274, 300, 332,
	337, 352, 353, 354, 355, 208, 0, 211, 187, 316,
	186, 259, 239, 301, 359, 360, 0, 160, 171, 253,
	0, 314, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 205, 0, 0, 0, 172, 181, 191, 203,
	215, 222, 232, 235, 240, 241, 243, 247, 261, 263,
	264, 265, 266, 284, 285, 289, 290, 293, 294, 297,
	298, 299, 303, 304, 310, 149, 317, 323, 324, 325,
	326, 327, 335, 336, 338, 339, 346, 368, 369, 382,
	383, 0, 0, 157, 36, 356, 163, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2319, 255, 0, 0, 380,
	344, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	2008, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 309, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 244,
	155, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	156, 0, 0, 0, 287, 0, 0, 143, 159, 254,
	0, 0, 0, 199, 0, 320, 0, 374, 0, 0,
	319, 256, 367, 0, 0, 373, 0, 351, 381, 385,
	221, 0, 190, 341, 212, 207, 0, 0, 0, 229,
	308, 202, 248, 0, 0, 0, 195, 0, 0, 0,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 230, 0,
	0, 378, 145, 329, 328, 0, 237, 0, 146, 137,
	315, 147, 245, 164, 0, 387, 178, 250, 358, 129,
	224, 286, 201, 0, 296, 0, 158, 311, 268, 270,
	267, 271, 227, 141, 148, 0, 313, 331, 362, 180,
	347, 139, 140, 142, 150, 322, 151, 152, 0, 262,
	216, 220, 231, 242, 0, 318, 348, 379, 0, 175,
	167, 350, 372, 185, 330, 333, 386, 0, 174, 169,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 226, 0, 370, 371, 200, 388,
	0, 0, 170, 0, 0, 283, 291, 282, 0, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 0,
	0, 165, 0, 345, 0, 0, 349, 182, 0, 0,
	361, 144, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 0, 0, 295, 321, 189, 376, 342,
	213, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 154, 0, 0, 0, 196, 132,
	0, 0, 0, 133, 0, 0, 134, 135, 0, 0,
	0, 0, 136, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2009, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 0, 160, 171,
	253, 497, 314, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 205, 0, 0, 0, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 149, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 356, 0, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 292, 162, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 380, 344, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 309, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 244, 155, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 156, 0, 0,
	0, 287, 0, 0, 143, 159, 254, 0, 0, 0,
	199, 0, 320, 0, 374, 0, 0, 319, 256, 367,
	0, 0, 373, 0, 351, 381, 385, 221, 0, 190,
	341, 212, 207, 0, 0, 0, 229, 308, 202, 248,
	0, 0, 0, 195, 0, 0, 0, 340, 364, 161,
	272, 365, 384, 179, 357, 273, 280, 192, 194, 193,
	173, 334, 363, 184, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 230, 0, 0, 378, 145,
	329, 328, 0, 237, 0, 146, 137, 315, 147, 245,
	164, 0, 387, 178, 250, 358, 129, 224, 286, 201,
	0, 296, 0, 158, 311, 268, 270, 267, 271, 227,
	141, 148, 0, 313, 331, 362, 180, 347, 139, 140,
	142, 150, 322, 151, 152, 0, 262, 216, 220, 231,
	242, 0, 318, 348, 379, 0, 175, 167, 350, 372,
	185, 330, 333, 386, 0, 174, 169, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 226, 0, 370, 371, 200, 388, 0, 0, 170,
	0, 0, 283, 291, 282, 0, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 219, 233, 306, 258,
	307, 234, 278, 277, 279, 260, 0, 0, 165, 0,
	345, 0, 0, 349, 182, 0, 0, 361, 144, 312,
	183, 225, 217, 305, 281, 176, 236, 343, 249, 257,
	0, 0, 295, 321, 189, 376, 342, 213, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 154, 0, 0, 0, 196, 132, 0, 0, 0,
	133, 0, 0, 134, 135, 0, 0, 0, 0, 136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3208, 2009, 302, 166, 177, 188,
	206, 204, 218, 246, 269, 274, 300, 332, 337, 352,
	353, 354, 355, 208, 0, 211, 187, 316, 186, 259,
	239, 301, 359, 360, 0, 160, 171, 253, 0, 314,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	205, 0, 0, 0, 172, 181, 191, 203, 215, 222,
	232, 235, 240, 241, 243, 247, 261, 263, 264, 265,
	266, 284, 285, 289, 290, 293, 294, 297, 298, 299,
	303, 304, 310, 149, 317, 323, 324, 325, 326, 327,
	335, 336, 338, 339, 346, 368, 369, 382, 383, 356,
	0, 157, 0, 0, 163, 0, 0, 0, 0, 0,
	292, 162, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 380, 344, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 2008, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 309, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 244, 155, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 156, 0, 0, 0, 287, 0,
	0, 143, 159, 254, 0, 0, 0, 199, 0, 320,
	0, 374, 0, 0, 319, 256, 367, 0, 0, 373,
	0, 351, 381, 385, 221, 0, 190, 341, 212, 207,
	0, 0, 0, 229, 308, 202, 248, 0, 0, 0,
	195, 0, 0, 0, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 230, 0, 0, 378, 145, 329, 328, 0,
	237, 0, 146, 137, 315, 147, 245, 164, 0, 387,
	178, 250, 358, 129, 224, 286, 201, 0, 296, 0,
	158, 311, 268, 270, 267, 271, 227, 141, 148, 0,
	313, 331, 362, 180, 347, 139, 140, 142, 150, 322,
	151, 152, 0, 262, 216, 220, 231, 242, 0, 318,
	348, 379, 0, 175, 167, 350, 372, 185, 330, 333,
	386, 0, 174, 169, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 226, 0,
	370, 371, 200, 388, 0, 0, 170, 0, 0, 283,
	291, 282, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 0, 0, 165, 0, 345, 0, 0,
	349, 182, 0, 0, 361, 144, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 0, 0, 295,
	321, 189, 376, 342, 213, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 154, 0,
	0, 0, 196, 132, 0, 0, 0, 133, 0, 0,
	134, 135, 0, 0, 0, 0, 136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2009, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 0, 160, 171, 253, 0, 314, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 205, 0, 0,
	0, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	149, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 356, 0, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 292, 162, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	380, 344, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 309, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	244, 155, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 156, 0, 0, 0, 287, 0, 0, 143, 159,
	254, 0, 0, 0, 199, 0, 320, 0, 374, 2114,
	0, 319, 256, 367, 0, 0, 373, 0, 351, 381,
	385, 221, 0, 190, 341, 212, 207, 0, 0, 0,
	229, 308, 202, 248, 0, 0, 0, 195, 0, 0,
	0, 340, 364, 161, 272, 365, 384, 179, 357, 273,
	280, 192, 194, 193, 173, 334, 363, 184, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 230,
	0, 0, 378, 145, 329, 328, 0, 237, 0, 146,
	137, 315, 147, 245, 164, 0, 387, 178, 250, 358,
	129, 224, 286, 201, 0, 296, 0, 158, 311, 268,
	270, 267, 271, 227, 141, 148, 0, 313, 331, 362,
	180, 347, 139, 140, 142, 150, 322, 151, 152, 0,
	262, 216, 220, 231, 242, 0, 318, 348, 379, 0,
	175, 167, 350, 372, 185, 330, 333, 386, 0, 174,
	169, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 226, 0, 370, 371, 200,
	388, 0, 0, 170, 0, 0, 283, 291, 282, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	219, 233, 306, 258, 307, 234, 278, 277, 279, 260,
	0, 0, 165, 0, 345, 0, 0, 349, 182, 0,
	0, 361, 144, 312, 183, 225, 217, 305, 281, 176,
	236, 343, 249, 257, 0, 0, 295, 321, 189, 376,
	342, 213, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 154, 0, 0, 0, 196,
	132, 0, 0, 0, 133, 0, 0, 134, 135, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 166, 177, 188, 206, 204, 218, 246, 269, 274,
	300, 332, 337, 352, 353, 354, 355, 208, 0, 211,
	187, 316, 186, 259, 239, 301, 359, 360, 0, 160,
	171, 253, 0, 314, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 205, 0, 0, 0, 172, 181,
	191, 203, 215, 222, 232, 235, 240, 241, 243, 247,
	261, 263, 264, 265, 266, 284, 285, 289, 290, 293,
	294, 297, 298, 299, 303, 304, 310, 149, 317, 323,
	324, 325, 326, 327, 335, 336, 338, 339, 346, 368,
	369, 382, 383, 356, 0, 157, 0, 0, 163, 0,
	0, 0, 0, 0, 292, 162, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 380, 344, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 309, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 244, 155, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 156, 0,
	0, 0, 287, 0, 0, 143, 159, 254, 0, 0,
	0, 199, 0, 320, 0, 374, 0, 0, 319, 256,
	367, 0, 0, 373, 0, 351, 381, 385, 221, 0,
	190, 341, 212, 207, 0, 0, 0, 229, 308, 202,
	248, 0, 0, 0, 195, 0, 0, 0, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 230, 0, 0, 378,
	145, 329, 328, 0, 237, 0, 146, 137, 315, 147,
	245, 164, 0, 387, 178, 250, 358, 129, 224, 286,
	201, 0, 296, 0, 158, 311, 268, 270, 267, 271,
	227, 141, 148, 0, 313, 331, 362, 180, 347, 139,
	140, 142, 150, 322, 151, 152, 0, 262, 216, 220,
	231, 242, 0, 318, 348, 379, 0, 175, 167, 350,
	372, 185, 330, 333, 386, 0, 174, 169, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 226, 0, 370, 371, 200, 388, 0, 0,
	170, 0, 0, 283, 291, 282, 0, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 0, 0, 165,
	0, 345, 0, 0, 349, 182, 0, 0, 361, 144,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 0, 0, 295, 321, 189, 376, 342, 213, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 154, 0, 0, 0, 196, 132, 0, 0,
	0, 133, 0, 0, 134, 135, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 0, 160, 171, 253, 0,
	314, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 205, 0, 0, 0, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 149, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	356, 0, 157, 0, 1318, 163, 0, 0, 0, 0,
	0, 292, 162, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 380, 344, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 309,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 244, 155, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 156, 0, 0, 0, 287,
	0, 0, 143, 159, 254, 0, 0, 0, 199, 0,
	320, 0, 374, 0, 0, 319, 256, 367, 0, 0,
	373, 0, 351, 381, 385, 221, 0, 190, 341, 212,
	207, 0, 0, 0, 229, 308, 202, 248, 0, 0,
	0, 195, 0, 0, 0, 340, 364, 161, 272, 365,
	384, 179, 357, 273, 280, 192, 194, 193, 173, 334,
	363, 184, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 230, 0, 0, 378, 145, 329, 328,
	0, 237, 0, 146, 137, 315, 147, 245, 164, 0,
	387, 178, 250, 358, 129, 224, 286, 201, 0, 296,
	0, 158, 311, 268, 270, 267, 271, 227, 141, 148,
	0, 313, 331, 362, 180, 347, 139, 140, 142, 150,
	322, 151, 152, 0, 262, 216, 220, 231, 242, 0,
	318, 348, 379, 0, 175, 167, 350, 372, 185, 330,
	333, 386, 0, 174, 169, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 226,
	0, 370, 371, 200, 388, 0, 0, 170, 0, 0,
	283, 291, 282, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 219, 233, 306, 258, 307, 234,
	278, 277, 279, 260, 0, 0, 165, 0, 345, 0,
	0, 349, 182, 0, 0, 361, 144, 312, 183, 225,
	217, 305, 281, 176, 236, 343, 249, 257, 0, 0,
	295, 321, 189, 376, 342, 213, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 154,
	0, 0, 0, 196, 132, 0, 0, 0, 133, 0,
	0, 134, 135, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 166, 177, 188, 206, 204,
	218, 246, 269, 274, 300, 332, 337, 352, 353, 354,
	355, 208, 0, 211, 187, 316, 186, 259, 239, 301,
	359, 360, 0, 160, 171, 253, 0, 314, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 205, 0,
	0, 0, 172, 181, 191, 203, 215, 222, 232, 235,
	240, 241, 243, 247, 261, 263, 264, 265, 266, 284,
	285, 289, 290, 293, 294, 297, 298, 299, 303, 304,
	310, 149, 317, 323, 324, 325, 326, 327, 335, 336,
	338, 339, 346, 368, 369, 382, 383, 356, 0, 157,
	0, 0, 163, 0, 0, 0, 0, 0, 292, 162,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 380, 344, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 309, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 124,
	0, 244, 155, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 156, 0, 0, 0, 287, 0, 0, 143,
	159, 254, 0, 0, 0, 199, 0, 320, 0, 374,
	0, 0, 319, 256, 367, 0, 0, 373, 0, 351,
	381, 385, 221, 0, 190, 341, 212, 207, 0, 0,
	0, 229, 308, 202, 248, 0, 0, 0, 195, 0,
	0, 0, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	230, 0, 0, 378, 145, 329, 328, 0, 237, 0,
	146, 137, 315, 147, 245, 164, 0, 387, 178, 250,
	358, 129, 224, 286, 201, 0, 296, 0, 158, 311,
	268, 270, 267, 271, 227, 141, 148, 0, 313, 331,
	362, 180, 347, 139, 140, 142, 150, 322, 151, 152,
	0, 262, 216, 220, 231, 242, 0, 318, 348, 379,
	0, 175, 167, 350, 372, 185, 330, 333, 386, 0,
	174, 169, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 226, 0, 370, 371,
	200, 388, 0, 0, 170, 0, 0, 283, 291, 282,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 0, 0, 165, 0, 345, 0, 0, 349, 182,
	0, 0, 361, 144, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 0, 0, 295, 321, 189,
	376, 342, 213, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 154, 0, 0, 0,
	196, 132, 0, 0, 0, 133, 0, 0, 134, 135,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 0,
	160, 171, 253, 0, 314, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 205, 0, 0, 0, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 149, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 356, 0, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 292, 162, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 380, 344,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 309, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 244, 155,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 156,
	0, 0, 0, 287, 0, 0, 143, 159, 254, 0,
	0, 0, 199, 0, 320, 0, 374, 0, 0, 319,
	256, 367, 0, 0, 373, 0, 351, 381, 385, 221,
	0, 190, 341, 212, 207, 0, 0, 0, 229, 308,
	202, 248, 0, 0, 0, 195, 0, 0, 0, 340,
	364, 161, 272, 365, 384, 179, 357, 273, 280, 192,
	194, 193, 173, 334, 363, 184, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 230, 0, 0,
	378, 145, 329, 328, 0, 237, 0, 146, 137, 315,
	147, 245, 164, 0, 387, 178, 250, 358, 129, 224,
	286, 201, 0, 296, 0, 158, 311, 268, 270, 267,
	271, 227, 141, 148, 0, 313, 331, 362, 180, 347,
	139, 140, 142, 150, 322, 151, 152, 0, 262, 216,
	220, 231, 242, 0, 318, 348, 379, 0, 175, 167,
	350, 372, 185, 330, 333, 386, 0, 174, 169, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 226, 0, 370, 371, 200, 388, 0,
	0, 170, 0, 0, 283, 291, 282, 0, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 219, 233,
	306, 258, 307, 234, 278, 277, 279, 260, 0, 0,
	165, 0, 345, 0, 0, 349, 182, 0, 0, 361,
	144, 312, 183, 225, 217, 305, 281, 176, 236, 343,
	249, 257, 0, 0, 295, 321, 189, 376, 342, 213,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 154, 0, 0, 0, 196, 132, 0,
	0, 0, 133, 0, 0, 134, 135, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 166,
	177, 188, 206, 204, 218, 246, 269, 274, 300, 332,
	337, 352, 353, 354, 355, 208, 0, 211, 187, 316,
	186, 259, 239, 301, 359, 360, 0, 160, 171, 253,
	0, 314, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 205, 0, 0, 0, 172, 181, 191, 203,
	215, 222, 232, 235, 240, 241, 243, 247, 261, 263,
	264, 265, 266, 284, 285, 289, 290, 293, 294, 297,
	298, 299, 303, 304, 310, 149, 317, 323, 324, 325,
	326, 327, 335, 336, 338, 339, 346, 368, 369, 382,
	383, 0, 0, 157, 0, 0, 163, 462, 356, 456,
	467, 450, 0, 162, 0, 0, 0, 0, 0, 292,
	0, 0, 473, 0, 0, 0, 0, 0, 210, 0,
	0, 457, 0, 0, 0, 0, 209, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 380, 344, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 471, 0, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 309, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 449, 448, 451, 0, 0, 0, 276, 0, 0,
	0, 455, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 156, 0, 0, 0, 287, 459, 0,
	0, 159, 254, 463, 0, 0, 199, 0, 320, 0,
	374, 0, 0, 319, 256, 367, 0, 466, 373, 0,
	351, 381, 385, 221, 0, 190, 341, 212, 207, 0,
	0, 0, 229, 308, 202, 248, 0, 0, 0, 195,
	0, 0, 0, 340, 364, 161, 272, 365, 384, 179,
	357, 273, 280, 192, 194, 193, 173, 334, 363, 184,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 230, 0, 0, 378, 0, 329, 328, 0, 237,
	0, 0, 0, 315, 0, 245, 164, 0, 387, 178,
	250, 358, 0, 224, 286, 201, 0, 296, 0, 158,
	311, 268, 270, 267, 271, 227, 0, 0, 0, 476,
	331, 362, 180, 347, 452, 453, 454, 460, 461, 464,
	465, 468, 262, 216, 220, 231, 242, 0, 318, 348,
	379, 0, 175, 167, 350, 372, 185, 330, 333, 386,
	0, 174, 169, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 226, 0, 370,
	371, 200, 388, 0, 0, 170, 0, 0, 283, 291,
	282, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 219, 233, 306, 258, 307, 234, 278, 277,
	279, 260, 0, 0, 165, 0, 345, 0, 0, 349,
	182, 0, 0, 361, 0, 312, 183, 225, 217, 305,
	281, 176, 236, 343, 249, 257, 0, 0, 295, 321,
	189, 376, 342, 213, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 166, 177, 188, 206, 204, 218, 246,
	269, 274, 300, 332, 337, 352, 353, 354, 355, 208,
	0, 211, 187, 316, 186, 259, 239, 301, 359, 360,
	0, 160, 171, 253, 0, 314, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 205, 0, 0, 0,
	172, 181, 191, 203, 215, 222, 232, 235, 240, 241,
	243, 247, 261, 263, 264, 265, 266, 284, 285, 289,
	290, 293, 294, 297, 298, 299, 303, 304, 310, 458,
	317, 323, 324, 325, 326, 327, 335, 336, 338, 339,
	346, 368, 369, 382, 383, 0, 0, 157, 0, 0,
	163, 462, 356, 456, 467, 450, 0, 162, 0, 0,
	0, 0, 0, 292, 0, 0, 442, 0, 0, 0,
	0, 0, 210, 0, 0, 457, 0, 0, 0, 0,
	209, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 380, 344, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 0, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 309, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 449, 448, 451, 0, 0,
	0, 276, 0, 0, 0, 455, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 156, 0, 0,
	0, 287, 459, 0, 0, 159, 254, 463, 0, 0,
	199, 0, 320, 0, 374, 0, 0, 319, 256, 367,
	0, 466, 373, 0, 351, 381, 385, 221, 0, 190,
	341, 212, 207, 0, 0, 0, 229, 308, 202, 248,
	0, 0, 0, 195, 0, 0, 0, 340, 364, 161,
	272, 365, 384, 179, 357, 273, 280, 192, 194, 193,
	173, 334, 363, 184, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 230, 0, 0, 378, 0,
	329, 328, 0, 237, 0, 0, 0, 315, 0, 245,
	164, 0, 387, 178, 250, 358, 0, 224, 286, 201,
	0, 296, 0, 158, 311, 268, 270, 267, 271, 227,
	0, 0, 0, 445, 331, 362, 180, 347, 452, 453,
	454, 460, 461, 464, 465, 468, 262, 216, 220, 231,
	242, 0, 318, 348, 379, 0, 175, 167, 350, 372,
	185, 330, 333, 386, 0, 174, 169, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 226, 0, 370, 371, 200, 388, 0, 0, 170,
	0, 0, 283, 291, 282, 0, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 219, 233, 306, 258,
	307, 234, 278, 277, 279, 260, 0, 0, 165, 0,
	345, 0, 0, 349, 182, 0, 0, 361, 0, 312,
	183, 225, 217, 305, 281, 176, 236, 343, 249, 257,
	0, 0, 295, 321, 189, 376, 342, 213, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 166, 177, 188,
	206, 204, 218, 246, 269, 274, 300, 332, 337, 352,
	353, 354, 355, 208, 0, 211, 187, 316, 186, 259,
	239, 301, 359, 360, 0, 160, 171, 253, 0, 314,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	205, 0, 0, 0, 172, 181, 191, 203, 215, 222,
	232, 235, 240, 241, 243, 247, 261, 263, 264, 265,
	266, 284, 285, 289, 290, 293, 294, 297, 298, 299,
	303, 304, 310, 458, 317, 323, 324, 325, 326, 327,
	335, 336, 338, 339, 346, 368, 369, 382, 383, 356,
	0, 157, 0, 0, 163, 0, 0, 0, 0, 0,
	292, 162, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 380, 344, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 309, 228,
	1203, 1202, 1212, 1213, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1204, 0, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 156, 0, 0, 0, 287, 0,
	0, 0, 159, 254, 0, 0, 0, 199, 0, 320,
	0, 374, 0, 0, 319, 256, 367, 0, 0, 373,
	0, 351, 381, 385, 221, 0, 190, 341, 212, 207,
	0, 0, 0, 229, 308, 202, 248, 0, 0, 0,
	195, 0, 0, 0, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 230, 0, 0, 378, 0, 329, 328, 0,
	237, 0, 0, 0, 315, 0, 245, 164, 0, 387,
	178, 250, 358, 0, 224, 286, 201, 0, 296, 0,
	158, 311, 268, 270, 267, 271, 227, 0, 0, 0,
	313, 331, 362, 180, 347, 0, 0, 0, 0, 322,
	0, 0, 0, 262, 216, 220, 231, 242, 0, 318,
	348, 379, 0, 175, 167, 350, 372, 185, 330, 333,
	386, 0, 174, 169, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 226, 0,
	370, 371, 200, 388, 0, 0, 170, 0, 0, 283,
	291, 282, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 0, 0, 165, 0, 345, 0, 0,
	349, 182, 0, 0, 361, 0, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 0, 0, 295,
	321, 189, 376, 342, 213, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 0, 160, 171, 253, 0, 314, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 205, 0, 0,
	0, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	0, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 356, 0, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 292, 162, 0,
	0, 0, 2324, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	380, 344, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2326, 2328, 0, 0, 0, 0, 0,
	0, 130, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 2322, 0, 0, 0, 309, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	244, 0, 0, 2327, 0, 0, 0, 0, 0, 252,
	0, 156, 0, 0, 0, 287, 0, 0, 0, 159,
	254, 0, 0, 0, 199, 0, 320, 0, 374, 0,
	0, 319, 256, 367, 0, 0, 373, 0, 351, 381,
	385, 221, 0, 190, 341, 212, 207, 0, 0, 0,
	229, 308, 202, 248, 0, 0, 0, 195, 0, 0,
	0, 340, 364, 161, 272, 365, 384, 179, 357, 273,
	280, 192, 194, 193, 173, 334, 363, 184, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 230,
	0, 0, 378, 0, 329, 328, 0, 237, 0, 0,
	0, 315, 0, 245, 164, 0, 387, 178, 250, 358,
	0, 224, 286, 201, 0, 296, 0, 158, 311, 268,
	270, 267, 271, 227, 0, 0, 0, 313, 331, 362,
	180, 347, 0, 0, 0, 0, 322, 0, 0, 0,
	262, 216, 220, 231, 242, 0, 318, 348, 379, 0,
	175, 167, 350, 372, 185, 330, 333, 386, 0, 174,
	169, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 226, 0, 370, 371, 200,
	388, 0, 0, 170, 0, 0, 283, 291, 282, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	219, 233, 306, 258, 307, 234, 278, 277, 279, 260,
	0, 0, 165, 0, 345, 0, 0, 349, 182, 0,
	0, 361, 0, 312, 183, 225, 217, 305, 281, 176,
	236, 343, 249, 257, 0, 0, 295, 321, 189, 376,
	342, 213, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	132, 0, 0, 0, 133, 0, 0, 134, 135, 0,
	0, 0, 0, 136, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 166, 177, 188, 206, 204, 218, 246, 269, 274,
	300, 332, 337, 352, 353, 354, 355, 208, 0, 211,
	187, 316, 186, 259, 239, 301, 359, 360, 0, 160,
	171, 253, 0, 314, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 205, 0, 0, 0, 172, 181,
	191, 203, 215, 222, 232, 235, 240, 241, 243, 247,
	261, 263, 264, 265, 266, 284, 285, 289, 290, 293,
	294, 297, 298, 299, 303, 304, 310, 0, 317, 323,
	324, 325, 326, 327, 335, 336, 338, 339, 346, 368,
	369, 382, 383, 356, 0, 157, 0, 0, 163, 0,
	0, 0, 0, 0, 292, 162, 0, 0, 0, 2324,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 380, 344, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2326, 2328, 0, 0, 0, 0, 0, 0, 130, 0,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 309, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 244, 0, 0,
	2327, 0, 0, 0, 0, 0, 252, 0, 156, 0,
	0, 0, 287, 0, 0, 0, 159, 254, 0, 0,
	0, 199, 0, 320, 0, 374, 0, 0, 319, 256,
	367, 0, 0, 373, 0, 351, 381, 385, 221, 0,
	190, 341, 212, 207, 0, 0, 0, 229, 308, 202,
	248, 0, 0, 0, 195, 0, 0, 0, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 230, 0, 0, 378,
	0, 329, 328, 0, 237, 0, 0, 0, 315, 0,
	245, 164, 0, 387, 178, 250, 358, 0, 224, 286,
	201, 0, 296, 0, 158, 311, 268, 270, 267, 271,
	227, 0, 0, 0, 313, 331, 362, 180, 347, 0,
	0, 0, 0, 322, 0, 0, 0, 262, 216, 220,
	231, 242, 0, 318, 348, 379, 0, 175, 167, 350,
	372, 185, 330, 333, 386, 0, 174, 169, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 226, 0, 370, 371, 200, 388, 0, 0,
	170, 0, 0, 283, 291, 282, 0, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 0, 0, 165,
	0, 345, 0, 0, 349, 182, 0, 0, 361, 0,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 0, 0, 295, 321, 189, 376, 342, 213, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 132, 0, 0,
	0, 133, 0, 0, 134, 135, 0, 0, 0, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 0, 160, 171, 253, 0,
	314, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 205, 0, 0, 0, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 0, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	356, 0, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 292, 162, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 380, 344, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 0, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 309,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 156, 0, 0, 0, 287,
	0, 0, 0, 159, 254, 0, 0, 0, 199, 0,
	320, 0, 374, 0, 0, 319, 256, 367, 0, 0,
	373, 0, 351, 381, 385, 221, 0, 190, 341, 212,
	207, 0, 0, 0, 229, 308, 202, 248, 0, 0,
	0, 195, 0, 0, 0, 340, 364, 161, 272, 365,
	384, 179, 357, 273, 280, 192, 194, 193, 173, 334,
	363, 184, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 230, 0, 0, 378, 0, 329, 328,
	0, 237, 0, 0, 0, 315, 0, 245, 164, 0,
	387, 178, 250, 358, 0, 224, 286, 201, 0, 296,
	0, 158, 311, 268, 270, 267, 271, 227, 0, 0,
	0, 313, 331, 362, 180, 347, 0, 0, 0, 0,
	322, 0, 0, 0, 262, 216, 220, 231, 242, 0,
	318, 348, 379, 0, 175, 167, 350, 372, 185, 330,
	333, 386, 0, 174, 169, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 226,
	0, 370, 371, 200, 388, 0, 0, 170, 0, 0,
	283, 291, 282, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 219, 233, 306, 258, 307, 234,
	278, 277, 279, 260, 0, 0, 165, 0, 345, 0,
	0, 349, 182, 0, 0, 361, 0, 312, 183, 225,
	217, 305, 281, 176, 236, 343, 249, 257, 0, 0,
	295, 321, 189, 376, 342, 213, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 132, 0, 0, 0, 133, 0,
	0, 134, 135, 0, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 166, 177, 188, 206, 204,
	218, 246, 269, 274, 300, 332, 337, 352, 353, 354,
	355, 208, 0, 211, 187, 316, 186, 259, 239, 301,
	359, 360, 0, 160, 171, 253, 0, 314, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 205, 0,
	0, 482, 172, 181, 191, 203, 215, 222, 232, 235,
	240, 241, 243, 247, 261, 263, 264, 265, 266, 284,
	285, 289, 290, 293, 294, 297, 298, 299, 303, 304,
	310, 0, 317, 323, 324, 325, 326, 327, 335, 336,
	338, 339, 346, 368, 369, 382, 383, 356, 0, 157,
	0, 0, 163, 0, 0, 0, 0, 0, 292, 162,
	0, 0, 0, 3534, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 380, 344, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 0, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 309, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 156, 0, 0, 0, 287, 0, 0, 0,
	159, 254, 0, 0, 0, 199, 0, 320, 0, 374,
	0, 0, 319, 256, 367, 0, 0, 373, 0, 351,
	381, 385, 221, 0, 190, 341, 212, 207, 0, 0,
	0, 229, 308, 202, 248, 0, 0, 0, 195, 0,
	0, 0, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	230, 0, 0, 378, 0, 329, 328, 0, 237, 0,
	0, 0, 315, 0, 245, 164, 0, 387, 178, 250,
	358, 0, 224, 286, 201, 0, 296, 0, 158, 311,
	268, 270, 267, 271, 227, 0, 0, 0, 313, 331,
	362, 180, 347, 0, 0, 0, 0, 322, 0, 0,
	0, 262, 216, 220, 231, 242, 0, 318, 348, 379,
	0, 175, 167, 350, 372, 185, 330, 333, 386, 0,
	174, 169, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 226, 0, 370, 371,
	200, 388, 0, 0, 170, 0, 0, 283, 291, 282,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 0, 0, 165, 0, 345, 0, 0, 349, 182,
	0, 0, 361, 0, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 0, 0, 295, 321, 189,
	376, 342, 213, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 132, 0, 0, 0, 133, 0, 0, 134, 135,
	0, 0, 0, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 0,
	160, 171, 253, 0, 314, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 205, 0, 0, 0, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 0, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 356, 0, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 292, 162, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	2633, 0, 209, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 380, 344,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	0, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 309, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 156,
	0, 0, 0, 287, 0, 0, 0, 159, 254, 0,
	0, 0, 199, 0, 320, 0, 374, 0, 0, 319,
	256, 367, 0, 0, 373, 0, 351, 381, 385, 221,
	0, 190, 341, 212, 207, 0, 0, 0, 229, 308,
	202, 248, 0, 0, 0, 195, 0, 0, 0, 340,
	364, 161, 272, 365, 384, 179, 357, 273, 280, 192,
	194, 193, 173, 334, 363, 184, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 230, 0, 0,
	378, 0, 329, 328, 0, 237, 0, 0, 0, 315,
	0, 245, 164, 0, 387, 178, 250, 358, 0, 224,
	286, 201, 0, 296, 0, 158, 311, 268, 270, 267,
	271, 227, 0, 0, 0, 313, 331, 362, 180, 347,
	0, 0, 0, 0, 322, 0, 0, 0, 262, 216,
	220, 231, 242, 0, 318, 348, 379, 0, 175, 167,
	350, 372, 185, 330, 333, 386, 0, 174, 169, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 226, 0, 370, 371, 200, 388, 0,
	0, 170, 0, 0, 283, 291, 282, 0, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 219, 233,
	306, 258, 307, 234, 278, 277, 279, 260, 0, 0,
	165, 0, 345, 0, 0, 349, 182, 0, 0, 361,
	0, 312, 183, 225, 217, 305, 281, 176, 236, 343,
	249, 257, 0, 0, 295, 321, 189, 376, 342, 213,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 132, 0,
	0, 0, 133, 0, 0, 134, 135, 0, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 166,
	177, 188, 206, 204, 218, 246, 269, 274, 300, 332,
	337, 352, 353, 354, 355, 208, 0, 211, 187, 316,
	186, 259, 239, 301, 359, 360, 0, 160, 171, 253,
	0, 314, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 205, 0, 0, 0, 172, 181, 191, 203,
	215, 222, 232, 235, 240, 241, 243, 247, 261, 263,
	264, 265, 266, 284, 285, 289, 290, 293, 294, 297,
	298, 299, 303, 304, 310, 0, 317, 323, 324, 325,
	326, 327, 335, 336, 338, 339, 346, 368, 369, 382,
	383, 356, 0, 157, 0, 0, 163, 0, 0, 0,
	0, 0, 292, 162, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 380, 344, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 0, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	309, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 156, 0, 0, 0,
	287, 0, 0, 0, 159, 254, 0, 0, 0, 199,
	0, 320, 0, 374, 0, 0, 319, 256, 367, 0,
	0, 373, 0, 351, 381, 385, 221, 0, 190, 341,
	212, 207, 0, 0, 0, 229, 308, 202, 248, 0,
	0, 0, 195, 0, 0, 0, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 230, 0, 0, 378, 0, 329,
	328, 0, 237, 0, 0, 0, 315, 0, 245, 164,
	0, 387, 178, 250, 358, 0, 224, 286, 201, 0,
	296, 0, 158, 311, 268, 270, 267, 271, 227, 0,
	0, 0, 313, 331, 362, 180, 347, 0, 0, 0,
	0, 322, 0, 0, 0, 262, 216, 220, 231, 242,
	0, 318, 348, 379, 0, 175, 167, 350, 372, 185,
	330, 333, 386, 0, 174, 169, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	226, 0, 370, 371, 200, 388, 0, 0, 170, 0,
	0, 283, 291, 282, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 0, 0, 165, 0, 345,
	0, 0, 349, 182, 0, 0, 361, 0, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 0,
	0, 295, 321, 189, 376, 342, 213, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 132, 0, 0, 0, 133,
	0, 0, 134, 135, 0, 0, 0, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 0, 160, 171, 253, 0, 314, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 205,
	0, 0, 0, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 0, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 356, 0,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 292,
	162, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 209, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 380, 344, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 309, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 156, 0, 0, 0, 287, 0, 0,
	0, 159, 254, 0, 0, 0, 199, 0, 320, 0,
	374, 0, 0, 319, 256, 367, 0, 0, 373, 0,
	351, 381, 385, 221, 0, 190, 341, 212, 207, 0,
	0, 0, 229, 308, 202, 248, 0, 0, 0, 195,
	0, 0, 0, 340, 364, 161, 272, 365, 384, 179,
	357, 273, 280, 192, 194, 193, 173, 334, 363, 184,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 230, 0, 0, 378, 0, 329, 328, 0, 237,
	0, 0, 0, 315, 0, 245, 164, 0, 387, 178,
	250, 358, 0, 224, 286, 201, 0, 296, 0, 158,
	311, 268, 270, 267, 271, 227, 0, 0, 0, 313,
	331, 362, 180, 347, 0, 0, 0, 0, 322, 0,
	0, 0, 262, 216, 220, 231, 242, 0, 318, 348,
	379, 0, 175, 167, 350, 372, 185, 330, 333, 386,
	0, 174, 169, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 226, 0, 370,
	371, 200, 388, 0, 0, 170, 0, 0, 283, 291,
	282, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 219, 233, 306, 258, 307, 234, 278, 277,
	279, 260, 0, 0, 165, 0, 345, 0, 0, 349,
	182, 0, 0, 361, 0, 312, 183, 225, 217, 305,
	281, 176, 236, 343, 249, 257, 0, 0, 295, 321,
	189, 376, 342, 213, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 132, 0, 0, 0, 133, 0, 0, 134,
	135, 0, 0, 0, 0, 136, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 166, 177, 188, 206, 204, 218, 246,
	269, 274, 300, 332, 337, 352, 353, 354, 355, 208,
	0, 211, 187, 316, 186, 259, 239, 301, 359, 360,
	0, 160, 171, 253, 0, 314, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 205, 0, 0, 0,
	172, 181, 191, 203, 215, 222, 232, 235, 240, 241,
	243, 247, 261, 263, 264, 265, 266, 284, 285, 289,
	290, 293, 294, 297, 298, 299, 303, 304, 310, 0,
	317, 323, 324, 325, 326, 327, 335, 336, 338, 339,
	346, 368, 369, 382, 383, 356, 0, 157, 0, 0,
	163, 0, 0, 0, 0, 0, 292, 162, 0, 3493,
	0, 0, 0, 0, 0, 210, 3491, 0, 0, 0,
	0, 0, 0, 209, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 380,
	344, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	471, 0, 470, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 309, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	156, 0, 0, 0, 287, 0, 0, 0, 159, 254,
	0, 0, 0, 199, 0, 320, 0, 374, 0, 0,
	319, 256, 367, 0, 0, 373, 0, 351, 381, 385,
	221, 0, 190, 341, 212, 207, 0, 0, 0, 229,
	308, 202, 248, 0, 0, 0, 195, 0, 0, 0,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 230, 0,
	0, 378, 0, 329, 328, 0, 237, 0, 3492, 0,
	315, 0, 245, 164, 0, 387, 178, 250, 358, 0,
	224, 286, 201, 0, 296, 0, 158, 311, 268, 270,
	267, 271, 227, 0, 0, 0, 313, 331, 362, 180,
	347, 0, 0, 0, 0, 322, 0, 0, 0, 262,
	216, 220, 231, 242, 0, 318, 348, 379, 0, 175,
	167, 350, 372, 185, 330, 333, 386, 0, 174, 169,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 226, 0, 370, 371, 200, 388,
	0, 0, 170, 0, 0, 283, 291, 282, 0, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 0,
	0, 165, 0, 345, 0, 0, 349, 182, 0, 0,
	361, 0, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 0, 0, 295, 321, 189, 376, 342,
	213, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 0, 160, 171,
	253, 0, 314, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 205, 0, 0, 0, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 0, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 356, 0, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 292, 162, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 380, 344, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 960, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2448, 375, 0, 0, 0,
	0, 309, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 156, 0, 0,
	0, 287, 0, 0, 0, 159, 254, 0, 0, 0,
	199, 0, 320, 0, 374, 0, 0, 319, 256, 367,
	0, 0, 373, 0, 351, 381, 385, 221, 0, 190,
	341, 212, 207, 0, 0, 0, 229, 308, 202, 248,
	2449, 2450, 0, 195, 0, 0, 0, 340, 364, 161,
	272, 365, 384, 179, 357, 273, 280, 192, 194, 193,
	173, 334, 363, 184, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 230, 0, 0, 378, 0,
	329, 328, 0, 237, 0, 0, 0, 315, 0, 245,
	164, 0, 387, 178, 250, 358, 0, 224, 286, 201,
	0, 296, 0, 158, 311, 268, 270, 267, 271, 227,
	0, 0, 0, 313, 331, 362, 180, 347, 0, 0,
	0, 0, 322, 0, 0, 0, 262, 216, 220, 231,
	242, 0, 318, 348, 379, 0, 175, 167, 350, 372,
	185, 330, 333, 386, 0, 174, 169, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 226, 0, 370, 371, 200, 388, 0, 0, 170,
	0, 0, 283, 291, 282, 0, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 219, 233, 306, 258,
	307, 234, 278, 277, 279, 260, 0, 0, 165, 0,
	345, 0, 0, 349, 182, 0, 0, 361, 0, 312,
	183, 225, 217, 305, 281, 176, 236, 343, 249, 257,
	0, 0, 295, 321, 189, 376, 342, 213, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 166, 177, 188,
	206, 204, 218, 246, 269, 274, 300, 332, 337, 352,
	353, 354, 355, 208, 0, 211, 187, 316, 186, 259,
	239, 301, 359, 360, 0, 160, 171, 253, 0, 314,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	205, 0, 0, 0, 172, 181, 191, 203, 215, 222,
	232, 235, 240, 241, 243, 247, 261, 263, 264, 265,
	266, 284, 285, 289, 290, 293, 294, 297, 298, 299,
	303, 304, 310, 0, 317, 323, 324, 325, 326, 327,
	335, 336, 338, 339, 346, 368, 369, 382, 383, 356,
	0, 157, 0, 0, 163, 0, 0, 0, 0, 0,
	292, 162, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 380, 344, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 309, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 156, 0, 0, 0, 287, 0,
	0, 0, 159, 254, 0, 0, 0, 199, 0, 320,
	0, 374, 0, 0, 319, 256, 367, 0, 0, 373,
	0, 351, 381, 385, 221, 0, 190, 341, 212, 207,
	0, 0, 0, 229, 308, 202, 248, 0, 0, 0,
	195, 0, 0, 0, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 230, 0, 0, 378, 0, 329, 328, 0,
	237, 0, 0, 0, 315, 0, 245, 164, 0, 387,
	178, 250, 358, 0, 224, 286, 201, 0, 296, 0,
	158, 311, 268, 270, 267, 271, 227, 0, 0, 0,
	313, 331, 362, 180, 347, 0, 0, 0, 0, 322,
	0, 0, 0, 262, 216, 220, 231, 242, 0, 318,
	348, 379, 0, 175, 167, 350, 372, 185, 330, 333,
	386, 0, 174, 169, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 226, 0,
	370, 371, 200, 388, 0, 0, 170, 0, 0, 283,
	291, 282, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 0, 0, 165, 0, 345, 0, 0,
	349, 182, 0, 0, 361, 0, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 0, 0, 295,
	321, 189, 376, 342, 213, 0, 288, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 0, 160, 171, 253, 0, 314, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 205, 0, 0,
	0, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	0, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 356, 0, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 292, 162, 0,
	0, 0, 0, 0, 0, 0, 210, 1334, 0, 0,
	0, 0, 0, 0, 209, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	380, 344, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 960, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 309, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 156, 0, 0, 0, 287, 0, 0, 0, 159,
	254, 0, 0, 0, 199, 0, 320, 0, 374, 0,
	0, 319, 256, 367, 0, 0, 373, 0, 351, 381,
	385, 221, 0, 190, 341, 212, 207, 0, 0, 0,
	229, 308, 202, 248, 0, 0, 0, 195, 0, 0,
	0, 340, 364, 161, 272, 365, 384, 179, 357, 273,
	280, 192, 194, 193, 173, 334, 363, 184, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 230,
	0, 0, 378, 0, 329, 328, 0, 237, 0, 0,
	0, 315, 0, 245, 164, 0, 387, 178, 250, 358,
	0, 224, 286, 201, 0, 296, 0, 158, 311, 268,
	270, 267, 271, 227, 0, 0, 0, 313, 331, 362,
	180, 347, 0, 0, 0, 0, 322, 0, 0, 0,
	262, 216, 220, 231, 242, 0, 318, 348, 379, 0,
	175, 167, 350, 372, 185, 330, 333, 386, 0, 174,
	169, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 226, 0, 370, 371, 200,
	388, 0, 0, 170, 0, 0, 283, 291, 282, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	219, 233, 306, 258, 307, 234, 278, 277, 279, 260,
	0, 0, 165, 0, 345, 0, 0, 349, 182, 0,
	0, 361, 0, 312, 183, 225, 217, 305, 281, 176,
	236, 343, 249, 257, 0, 0, 295, 321, 189, 376,
	342, 213, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 166, 177, 188, 206, 204, 218, 246, 269, 274,
	300, 332, 337, 352, 353, 354, 355, 208, 0, 211,
	187, 316, 186, 259, 239, 301, 359, 360, 0, 160,
	171, 253, 0, 314, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 205, 0, 0, 0, 172, 181,
	191, 203, 215, 222, 232, 235, 240, 241, 243, 247,
	261, 263, 264, 265, 266, 284, 285, 289, 290, 293,
	294, 297, 298, 299, 303, 304, 310, 0, 317, 323,
	324, 325, 326, 327, 335, 336, 338, 339, 346, 368,
	369, 382, 383, 356, 0, 157, 0, 0, 163, 0,
	0, 0, 0, 0, 292, 162, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 209, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 380, 344, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 471, 0,
	470, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 375, 0, 0,
	0, 0, 309, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 252, 0, 156, 0,
	0, 0, 287, 0, 0, 0, 159, 254, 0, 0,
	0, 199, 0, 320, 0, 374, 0, 0, 319, 256,
	367, 0, 0, 373, 0, 351, 381, 385, 221, 0,
	190, 341, 212, 207, 0, 0, 0, 229, 308, 202,
	248, 0, 0, 0, 195, 0, 0, 0, 340, 364,
	161, 272, 365, 384, 179, 357, 273, 280, 192, 194,
	193, 173, 334, 363, 184, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 230, 0, 0, 378,
	0, 329, 328, 0, 237, 0, 0, 0, 315, 0,
	245, 164, 0, 387, 178, 250, 358, 0, 224, 286,
	201, 0, 296, 0, 158, 311, 268, 270, 267, 271,
	227, 0, 0, 0, 313, 331, 362, 180, 347, 0,
	0, 0, 0, 322, 0, 0, 0, 262, 216, 220,
	231, 242, 0, 318, 348, 379, 0, 175, 167, 350,
	372, 185, 330, 333, 386, 0, 174, 169, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 0,
	0, 0, 226, 0, 370, 371, 200, 388, 0, 0,
	170, 0, 0, 283, 291, 282, 0, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 219, 233, 306,
	258, 307, 234, 278, 277, 279, 260, 0, 0, 165,
	0, 345, 0, 0, 349, 182, 0, 0, 361, 0,
	312, 183, 225, 217, 305, 281, 176, 236, 343, 249,
	257, 0, 0, 295, 321, 189, 376, 342, 213, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 166, 177,
	188, 206, 204, 218, 246, 269, 274, 300, 332, 337,
	352, 353, 354, 355, 208, 0, 211, 187, 316, 186,
	259, 239, 301, 359, 360, 0, 160, 171, 253, 0,
	314, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 205, 0, 0, 0, 172, 181, 191, 203, 215,
	222, 232, 235, 240, 241, 243, 247, 261, 263, 264,
	265, 266, 284, 285, 289, 290, 293, 294, 297, 298,
	299, 303, 304, 310, 0, 317, 323, 324, 325, 326,
	327, 335, 336, 338, 339, 346, 368, 369, 382, 383,
	356, 0, 157, 0, 0, 163, 0, 0, 0, 0,
	0, 292, 162, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 209, 198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 380, 344, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2789, 0, 0, 0, 2791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 375, 0, 0, 0, 0, 309,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 156, 0, 0, 0, 287,
	0, 0, 0, 159, 254, 0, 0, 0, 199, 0,
	320, 0, 374, 0, 0, 319, 256, 367, 0, 0,
	373, 0, 351, 381, 385, 221, 0, 190, 341, 212,
	207, 0, 0, 0, 229, 308, 202, 248, 0, 0,
	0, 195, 0, 0, 0, 340, 364, 161, 272, 365,
	384, 179, 357, 273, 280, 192, 194, 193, 173, 334,
	363, 184, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 238, 230, 0, 0, 378, 0, 329, 328,
	0, 237, 0, 0, 0, 315, 0, 245, 164, 0,
	387, 178, 250, 358, 0, 224, 286, 201, 0, 296,
	0, 158, 311, 268, 270, 267, 271, 227, 0, 0,
	0, 313, 331, 362, 180, 347, 0, 0, 0, 0,
	322, 0, 0, 0, 262, 216, 220, 231, 242, 0,
	318, 348, 379, 0, 175, 167, 350, 372, 185, 330,
	333, 386, 0, 174, 169, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 0, 0, 0, 226,
	0, 370, 371, 200, 388, 0, 0, 170, 0, 0,
	283, 291, 282, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 219, 233, 306, 258, 307, 234,
	278, 277, 279, 260, 0, 0, 165, 0, 345, 0,
	0, 349, 182, 0, 0, 361, 0, 312, 183, 225,
	217, 305, 281, 176, 236, 343, 249, 257, 0, 0,
	295, 321, 189, 376, 342, 213, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 302, 166, 177, 188, 206, 204,
	218, 246, 269, 274, 300, 332, 337, 352, 353, 354,
	355, 208, 0, 211, 187, 316, 186, 259, 239, 301,
	359, 360, 0, 160, 171, 253, 0, 314, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 205, 0,
	0, 0, 172, 181, 191, 203, 215, 222, 232, 235,
	240, 241, 243, 247, 261, 263, 264, 265, 266, 284,
	285, 289, 290, 293, 294, 297, 298, 299, 303, 304,
	310, 0, 317, 323, 324, 325, 326, 327, 335, 336,
	338, 339, 346, 368, 369, 382, 383, 356, 0, 157,
	0, 0, 163, 0, 0, 0, 0, 0, 292, 162,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 0, 0, 0, 209, 198, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 380, 344, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 309, 228, 0, 0,
	0, 0, 0, 0, 2774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	252, 0, 156, 0, 0, 0, 287, 0, 0, 0,
	159, 254, 0, 0, 0, 199, 0, 320, 0, 374,
	0, 0, 319, 256, 367, 0, 0, 373, 0, 351,
	381, 385, 221, 0, 190, 341, 212, 207, 0, 0,
	0, 229, 308, 202, 248, 0, 0, 0, 195, 0,
	0, 0, 340, 364, 161, 272, 365, 384, 179, 357,
	273, 280, 192, 194, 193, 173, 334, 363, 184, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	230, 0, 0, 378, 0, 329, 328, 0, 237, 0,
	0, 0, 315, 0, 245, 164, 0, 387, 178, 250,
	358, 0, 224, 286, 201, 0, 296, 0, 158, 311,
	268, 270, 267, 271, 227, 0, 0, 0, 313, 331,
	362, 180, 347, 0, 0, 0, 0, 322, 0, 0,
	0, 262, 216, 220, 231, 242, 0, 318, 348, 379,
	0, 175, 167, 350, 372, 185, 330, 333, 386, 0,
	174, 169, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 226, 0, 370, 371,
	200, 388, 0, 0, 170, 0, 0, 283, 291, 282,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 219, 233, 306, 258, 307, 234, 278, 277, 279,
	260, 0, 0, 165, 0, 345, 0, 0, 349, 182,
	0, 0, 361, 0, 312, 183, 225, 217, 305, 281,
	176, 236, 343, 249, 257, 0, 0, 295, 321, 189,
	376, 342, 213, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 302, 166, 177, 188, 206, 204, 218, 246, 269,
	274, 300, 332, 337, 352, 353, 354, 355, 208, 0,
	211, 187, 316, 186, 259, 239, 301, 359, 360, 0,
	160, 171, 253, 0, 314, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 205, 0, 0, 0, 172,
	181, 191, 203, 215, 222, 232, 235, 240, 241, 243,
	247, 261, 263, 264, 265, 266, 284, 285, 289, 290,
	293, 294, 297, 298, 299, 303, 304, 310, 0, 317,
	323, 324, 325, 326, 327, 335, 336, 338, 339, 346,
	368, 369, 382, 383, 356, 0, 157, 0, 0, 163,
	0, 0, 0, 0, 0, 292, 162, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 209, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 380, 344,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 309, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 252, 0, 156,
	0, 0, 0, 287, 0, 0, 0, 159, 254, 0,
	0, 0, 199, 0, 320, 0, 374, 0, 0, 319,
	256, 367, 0, 0, 373, 0, 351, 381, 385, 221,
	0, 190, 341, 212, 207, 0, 0, 0, 229, 308,
	202, 248, 0, 0, 0, 195, 0, 0, 0, 340,
	364, 161, 272, 365, 384, 179, 357, 273, 280, 192,
	194, 193, 173, 334, 363, 184, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 230, 0, 0,
	378, 0, 329, 328, 0, 237, 0, 0, 0, 315,
	0, 245, 164, 0, 387, 178, 250, 358, 0, 224,
	286, 201, 0, 296, 0, 158, 311, 268, 270, 267,
	271, 227, 0, 0, 0, 313, 331, 362, 180, 347,
	0, 0, 0, 0, 322, 0, 0, 0, 262, 216,
	220, 231, 242, 0, 318, 348, 379, 0, 175, 167,
	350, 372, 185, 330, 333, 386, 0, 174, 169, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 226, 0, 370, 371, 200, 388, 0,
	0, 170, 0, 0, 283, 291, 282, 0, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 219, 233,
	306, 258, 307, 234, 278, 277, 279, 260, 0, 0,
	165, 0, 345, 0, 0, 349, 182, 0, 0, 361,
	0, 312, 183, 225, 217, 305, 281, 176, 236, 343,
	249, 257, 0, 0, 295, 321, 189, 376, 342, 213,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 302, 166,
	177, 188, 206, 204, 218, 246, 269, 274, 300, 332,
	337, 352, 353, 354, 355, 208, 0, 211, 187, 316,
	186, 259, 239, 301, 359, 360, 0, 160, 171, 253,
	0, 314, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 205, 0, 0, 0, 172, 181, 191, 203,
	215, 222, 232, 235, 240, 241, 243, 247, 261, 263,
	264, 265, 266, 284, 285, 289, 290, 293, 294, 297,
	298, 299, 303, 304, 310, 0, 317, 323, 324, 325,
	326, 327, 335, 336, 338, 339, 346, 368, 369, 382,
	383, 356, 0, 157, 0, 0, 163, 0, 0, 0,
	0, 0, 292, 162, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 209,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 380, 344, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 375, 0, 0, 0, 0,
	309, 228, 0, 0, 0, 0, 0, 0, 2160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 252, 0, 156, 0, 0, 0,
	287, 0, 0, 0, 159, 254, 0, 0, 0, 199,
	0, 320, 0, 374, 0, 0, 319, 256, 367, 0,
	0, 373, 0, 351, 381, 385, 221, 0, 190, 341,
	212, 207, 0, 0, 0, 229, 308, 202, 248, 0,
	0, 0, 195, 0, 0, 0, 340, 364, 161, 272,
	365, 384, 179, 357, 273, 280, 192, 194, 193, 173,
	334, 363, 184, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 230, 0, 0, 378, 0, 329,
	328, 0, 237, 0, 0, 0, 315, 0, 245, 164,
	0, 387, 178, 250, 358, 0, 224, 286, 201, 0,
	296, 0, 158, 311, 268, 270, 267, 271, 227, 0,
	0, 0, 313, 331, 362, 180, 347, 0, 0, 0,
	0, 322, 0, 0, 0, 262, 216, 220, 231, 242,
	0, 318, 348, 379, 0, 175, 167, 350, 372, 185,
	330, 333, 386, 0, 174, 169, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 0, 0, 0,
	226, 0, 370, 371, 200, 388, 0, 0, 170, 0,
	0, 283, 291, 282, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 219, 233, 306, 258, 307,
	234, 278, 277, 279, 260, 0, 0, 165, 0, 345,
	0, 0, 349, 182, 0, 0, 361, 0, 312, 183,
	225, 217, 305, 281, 176, 236, 343, 249, 257, 0,
	0, 295, 321, 189, 376, 342, 213, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 166, 177, 188, 206,
	204, 218, 246, 269, 274, 300, 332, 337, 352, 353,
	354, 355, 208, 0, 211, 187, 316, 186, 259, 239,
	301, 359, 360, 0, 160, 171, 253, 0, 314, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 205,
	0, 0, 0, 172, 181, 191, 203, 215, 222, 232,
	235, 240, 241, 243, 247, 261, 263, 264, 265, 266,
	284, 285, 289, 290, 293, 294, 297, 298, 299, 303,
	304, 310, 0, 317, 323, 324, 325, 326, 327, 335,
	336, 338, 339, 346, 368, 369, 382, 383, 356, 0,
	157, 0, 0, 163, 0, 0, 0, 0, 0, 292,
	162, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 2202, 2203, 198, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 380, 344, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 375, 0, 0, 0, 0, 309, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 156, 0, 0, 0, 287, 0, 0,
	0, 159, 254, 0, 0, 0, 199, 0, 320, 0,
	374, 0, 0, 319, 256, 367, 0, 0, 373, 0,
	351, 381, 385, 221, 0, 190, 341, 212, 207, 0,
	0, 0, 229, 308, 202, 248, 0, 0, 0, 195,
	0, 0, 0, 340, 364, 161, 272, 365, 384, 179,
	357, 273, 280, 192, 194, 193, 173, 334, 363, 184,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 230, 0, 0, 378, 0, 329, 328, 0, 237,
	0, 0, 0, 315, 0, 245, 164, 0, 387, 178,
	250, 358, 0, 224, 286, 201, 0, 296, 0, 158,
	311, 268, 270, 267, 271, 227, 0, 0, 0, 313,
	331, 362, 180, 347, 0, 0, 0, 0, 322, 0,
	0, 0, 262, 216, 220, 231, 242, 0, 318, 348,
	379, 0, 175, 167, 350, 372, 185, 330, 333, 386,
	0, 174, 169, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 226, 0, 370,
	371, 200, 388, 0, 0, 170, 0, 0, 283, 291,
	282, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 219, 233, 306, 258, 307, 234, 278, 277,
	279, 260, 0, 0, 165, 0, 345, 0, 0, 349,
	182, 0, 0, 361, 0, 312, 183, 225, 217, 305,
	281, 176, 236, 343, 249, 257, 0, 0, 295, 321,
	189, 376, 342, 213, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 166, 177, 188, 206, 204, 218, 246,
	269, 274, 300, 332, 337, 352, 353, 354, 355, 208,
	0, 211, 187, 316, 186, 259, 239, 301, 359, 360,
	0, 160, 171, 253, 0, 314, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 205, 0, 0, 0,
	172, 181, 191, 203, 215, 222, 232, 235, 240, 241,
	243, 247, 261, 263, 264, 265, 266, 284, 285, 289,
	290, 293, 294, 297, 298, 299, 303, 304, 310, 0,
	317, 323, 324, 325, 326, 327, 335, 336, 338, 339,
	346, 368, 369, 382, 383, 356, 0, 157, 0, 0,
	163, 0, 0, 0, 0, 0, 292, 162, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 209, 198, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 380,
	344, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	960, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 375,
	0, 0, 0, 0, 309, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	156, 0, 0, 0, 287, 0, 0, 0, 159, 254,
	0, 0, 0, 199, 0, 320, 0, 374, 0, 0,
	319, 256, 367, 0, 0, 373, 0, 351, 381, 385,
	221, 0, 190, 341, 212, 207, 0, 0, 0, 229,
	308, 202, 248, 0, 0, 0, 195, 0, 0, 0,
	340, 364, 161, 272, 365, 384, 179, 357, 273, 280,
	192, 194, 193, 173, 334, 363, 184, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 230, 0,
	0, 378, 0, 329, 328, 0, 237, 0, 0, 0,
	315, 0, 245, 164, 0, 387, 178, 250, 358, 0,
	224, 286, 201, 0, 296, 0, 158, 311, 268, 270,
	267, 271, 227, 0, 0, 0, 313, 331, 362, 180,
	347, 0, 0, 0, 0, 322, 0, 0, 0, 262,
	216, 220, 231, 242, 0, 318, 348, 379, 0, 175,
	167, 350, 372, 185, 330, 333, 386, 0, 174, 169,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 226, 0, 370, 371, 200, 388,
	0, 0, 170, 0, 0, 283, 291, 282, 0, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 219,
	233, 306, 258, 307, 234, 278, 277, 279, 260, 0,
	0, 165, 0, 345, 0, 0, 349, 182, 0, 0,
	361, 0, 312, 183, 225, 217, 305, 281, 176, 236,
	343, 249, 257, 0, 0, 295, 321, 189, 376, 342,
	213, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 302,
	166, 177, 188, 206, 204, 218, 246, 269, 274, 300,
	332, 337, 352, 353, 354, 355, 208, 0, 211, 187,
	316, 186, 259, 239, 301, 359, 360, 0, 160, 171,
	253, 0, 314, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 205, 0, 0, 0, 172, 181, 191,
	203, 215, 222, 232, 235, 240, 241, 243, 247, 261,
	263, 264, 265, 266, 284, 285, 289, 290, 293, 294,
	297, 298, 299, 303, 304, 310, 0, 317, 323, 324,
	325, 326, 327, 335, 336, 338, 339, 346, 368, 369,
	382, 383, 356, 0, 157, 0, 0, 163, 0, 0,
	0, 0, 0, 292, 162, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	209, 198, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 380, 344, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 375, 0, 0, 0,
	0, 309, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 156, 0, 0,
	0, 287, 0, 0, 0, 159, 254, 0, 0, 0,
	199, 0, 320, 0, 374, 0, 0, 319, 256, 367,
	0, 0, 373, 0, 351, 381, 385, 221, 0, 190,
	341, 212, 207, 0, 0, 0, 229, 308, 202, 248,
	0, 0, 0, 195, 0, 0, 0, 340, 364, 161,
	272, 365, 384, 179, 357, 273, 280, 192, 194, 193,
	173, 334, 363, 184, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 238, 230, 0, 0, 378, 0,
	329, 328, 0, 237, 0, 0, 0, 315, 0, 245,
	164, 0, 387, 178, 250, 358, 0, 224, 286, 201,
	0, 296, 0, 158, 311, 268, 270, 267, 271, 227,
	0, 0, 0, 313, 331, 362, 180, 347, 0, 0,
	0, 0, 322, 0, 0, 0, 262, 216, 220, 231,
	242, 0, 318, 348, 379, 0, 175, 167, 350, 372,
	185, 330, 333, 386, 0, 174, 169, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 226, 0, 370, 371, 200, 388, 0, 0, 170,
	0, 0, 283, 291, 282, 0, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 219, 233, 306, 258,
	307, 234, 278, 277, 279, 260, 0, 0, 165, 0,
	345, 0, 0, 349, 182, 0, 0, 361, 0, 312,
	183, 225, 217, 305, 281, 176, 236, 343, 249, 257,
	0, 0, 295, 321, 189, 376, 342, 213, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 166, 177, 188,
	206, 204, 218, 246, 269, 274, 300, 332, 337, 352,
	353, 354, 355, 208, 0, 211, 187, 316, 186, 259,
	239, 301, 359, 360, 0, 160, 171, 253, 0, 314,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	205, 0, 0, 0, 172, 181, 191, 203, 215, 222,
	232, 235, 240, 241, 243, 247, 261, 263, 264, 265,
	266, 284, 285, 289, 290, 293, 294, 297, 298, 299,
	303, 304, 310, 0, 317, 323, 324, 325, 326, 327,
	335, 336, 338, 339, 346, 368, 369, 382, 383, 356,
	0, 157, 0, 0, 163, 0, 0, 0, 0, 0,
	292, 162, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 209, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 380, 344, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 375, 0, 0, 0, 0, 309, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 156, 0, 0, 0, 287, 0,
	0, 0, 159, 254, 0, 0, 0, 199, 0, 320,
	0, 374, 0, 0, 319, 256, 367, 0, 0, 373,
	0, 351, 381, 385, 221, 0, 190, 341, 212, 207,
	0, 0, 0, 229, 308, 202, 248, 0, 0, 0,
	195, 0, 0, 0, 340, 364, 161, 272, 365, 384,
	179, 357, 273, 280, 192, 194, 193, 173, 334, 363,
	184, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 230, 0, 0, 378, 0, 329, 328, 0,
	237, 0, 0, 0, 315, 0, 245, 164, 0, 387,
	178, 250, 358, 0, 224, 286, 201, 0, 296, 0,
	158, 311, 268, 270, 267, 271, 227, 0, 0, 0,
	313, 331, 362, 180, 347, 0, 0, 0, 0, 322,
	0, 0, 0, 262, 216, 220, 231, 242, 0, 318,
	348, 379, 0, 175, 167, 350, 372, 185, 330, 333,
	386, 0, 174, 169, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 0, 0, 0, 226, 0,
	370, 371, 200, 388, 0, 0, 170, 0, 0, 283,
	291, 282, 0, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 219, 233, 306, 258, 307, 234, 278,
	277, 279, 260, 0, 0, 165, 0, 345, 0, 0,
	349, 182, 0, 0, 361, 0, 312, 183, 225, 217,
	305, 281, 176, 236, 343, 249, 257, 0, 0, 295,
	321, 189, 376, 342, 213, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 302, 166, 177, 188, 206, 204, 218,
	246, 269, 274, 300, 332, 337, 352, 353, 354, 355,
	208, 0, 211, 187, 316, 186, 259, 239, 301, 359,
	360, 0, 160, 171, 253, 0, 314, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 205, 0, 0,
	0, 172, 181, 191, 203, 215, 222, 232, 235, 240,
	241, 243, 247, 261, 263, 264, 265, 266, 284, 285,
	289, 290, 293, 294, 297, 298, 299, 303, 304, 310,
	0, 317, 323, 324, 325, 326, 327, 335, 336, 338,
	339, 346, 368, 369, 382, 383, 356, 0, 157, 0,
	0, 163, 0, 0, 0, 0, 0, 292, 162, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 209, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	380, 344, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 513, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	375, 0, 0, 0, 0, 309, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 156, 0, 0, 0, 287, 0, 0, 0, 159,
	254, 0, 0, 0, 199, 0, 320, 0, 374, 0,
	0, 319, 256, 367, 0, 0, 373, 0, 351, 381,
	385, 221, 0, 190, 341, 212, 207, 0, 0, 0,
	229, 308, 202, 248, 0, 0, 0, 195, 0, 0,
	0, 340, 364, 161, 272, 365, 384, 179, 357, 273,
	280, 192, 194, 193, 173, 334, 363, 184, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 230,
	0, 0, 378, 0, 329, 328, 0, 237, 0, 0,
	0, 315, 0, 245, 164, 0, 387, 178, 250, 358,
	0, 224, 286, 201, 0, 296, 0, 158, 311, 268,
	270, 267, 271, 227, 0, 0, 0, 313, 331, 362,
	180, 347, 0, 0, 0, 0, 322, 0, 0, 0,
	262, 216, 220, 231, 242, 0, 318, 348, 379, 0,
	175, 167, 350, 372, 185, 330, 333, 386, 0, 174,
	169, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 0, 0, 0, 226, 0, 370, 371, 200,
	388, 0, 0, 170, 0, 0, 283, 291, 282, 0,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	219, 233, 306, 258, 307, 234, 278, 277, 279, 260,
	0, 0, 165, 0, 345, 0, 0, 349, 182, 0,
	0, 361, 0, 312, 183, 225, 217, 305, 281, 176,
	236, 343, 249, 257, 0, 0, 295, 321, 189, 376,
	342, 213, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 166, 177, 188, 206, 204, 218, 246, 269, 274,
	300, 332, 337, 352, 353, 354, 355, 208, 0, 211,
	187, 316, 186, 259, 239, 301, 359, 360, 0, 160,
	171, 253, 0, 314, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 205, 0, 0, 0, 172, 181,
	191, 203, 215, 222, 232, 235, 240, 241, 243, 247,
	261, 263, 264, 265, 266, 284, 285, 289, 290, 293,
	294, 297, 298, 299, 303, 304, 310, 0, 317, 323,
	324, 325, 326, 327, 335, 336, 338, 339, 346, 368,
	369, 382, 383, 0, 0, 157, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 162,
}

var yyPact = [...]int{
	4749, -1000, -449, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2088, -1000, -1000, 315, -1000,
	1059, 654, -1000, -1000, 379, 154, 35380, 730, 1349, 50202,
	84, -1000, 84, 240, 647, 35997, 527, 637, 1558, 1938,
	1557, 89, -39, -42, 135, 37245, 36621, 51, -1000, 39713,
	88, 96, -1000, -1000, -1000, -1000, 2129, 216, -1000, -1000,
	2072, 2086, 1873, -1000, 8250, -1000, -1000, -1000, -1000, -1000,
	22242, -1000, 2127, 35997, 29206, -1000, 723, 713, -163, 679,
	679, 443, 679, 679, 729, -1000, 343, 1066, -1000, -1000,
	-1000, -1000, 1062, 35997, 45266, 681, 48968, 681, 681, 681,
	681, 681, 681, 681, 35997, -1000, 819, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 35997,
	1556, 1983, 1064, 146, -1000, -1000, -1000, 1128, -1000, 517,
	508, 583, 477, 128, 1094, 2069, -1000, 1794, 2072, 2072,
	-1000, -1000, -1000, -1000, -1000, -1000, 872, -1000, -1000, 1119,
	1119, 382, 710, 222, 216, 1050, 2043, 1979, 1978, 1381,
	1977, 711, 1976, 1823, -1, -1000, 1554, 35997, -1000, -1000,
	1348, 1341, 427, 1722, 822, 1842, -1000, -1000, 415, 473,
	1816, 497, 1816, 1816, 1816, 1816, 1816, -44, 1816, 1816,
	1816, 147, 1816, 183, 1816, 1816, 1816, 1816, 1816, 1560,
	-1000, -1000, -1000, 448, 1717, 1776, 1841, 650, -1000, -1000,
	-1000, 1847, 41564, 1783, -1000, 1794, -1000, -1000, -1000, 1518,
	726, -1000, -95, 1847, 2055, 1589, -1000, 39713, 1981, 1205,
	14610, 1927, -1000, -1000, 1175, 2117, -1000, 28589, 789, -1000,
	14610, 4735, 1794, -1000, -1000, 1794, -1000, 758, 858, -1000,
	754, 783, -1000, -1000, 13974, 13974, 13974, 13974, 13974, 13974,
	13974, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1794, 786, 785,
	1794, 1794, 1794, 1794, 1794, -1000, 12702, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1794,
	1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
	1794, 1794, 1794, 14610, 1794, 1794, 1794, 1794, 1794, 1794,
	1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
	1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
	1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794, 1794,
	1794, 1794, 1794, 1794, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 687, 687, 34763, 1791, -67,
	21606, -1000, -1000, -1000, -1000, 20334, 44649, 1046, -1000, -1000,
	-1000, -1000, 1974, -1000, -1000, 784, 783, 758, 757, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2088, -1000, -1000,
	1684, 657, -1000, 4783, 4783, 4783, 4783, 4783, 279, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1822, 48968,
	35997, 344, 1553, 1106, 1551, 50819, 50819, -1000, 320, 45266,
	45266, 679, 422, 45266, 339, 1790, 709, 1789, 708, 1531,
	35997, 2022, 1840, 35997, 1549, 1548, 50819, 50819, 45266, 45266,
	-1000, 27966, 1788, -1000, -1000, 1064, -1000, 7299, 14610, 679,
	679, 35997, 35997, 35997, 35997, 35997, -1000, -1000, 1064, 1064,
	1064, 1064, 1061, 2115, 1061, -1000, 1061, -1000, -1000, 14610,
	-1000, 13974, 44032, 900, -1000, -1000, 50202, 627, 627, 627,
	-1000, 1542, 376, -1000, -1000, -1000, -1000, -1000, -1000, 1529,
	-1000, 1942, 711, 711, -1000, 1458, 711, 1763, -1000, 1044,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 711, -1000, 13338, -427, -1000, -1000, 1786, -1000,
	262, -1000, -1000, 631, 1839, 631, 203, 45266, 45266, 45266,
	-1000, 1816, 48968, -1000, 1816, 1816, 1816, -46, 1816, 1816,
	-1000, -1000, 1816, -1000, -1000, -1000, -1000, -1000, 1816, -1000,
	-1000, -1000, 1816, 1816, -1000, 1816, 1816, -1000, -1000, -1000,
	-1000, -1000, 45266, 631, 258, 1785, 631, 45266, 45266, -1000,
	130, 124, 121, 116, -1000, -1000, -1000, -1000, 115, 114,
	-1000, -1000, -1000, 1783, 41564, 2052, 17154, 1998, -1000, 1998,
	-1000, -1000, -1000, 159, -1000, 35997, -87, -1000, -1000, 216,
	-1000, -1000, -1000, -1000, 1847, 1164, 2123, 956, 1746, -1000,
	-1000, 1780, -1000, 1122, 780, 1320, 1884, -1000, -1000, -1000,
	35997, -1000, 14610, 14610, 14610, 1276, -1000, 29823, -1000, -1000,
	-1000, -1000, -1000, -1000, 18426, 967, 13974, 1200, 1024, 13974,
	13974, 13974, 13974, 13974, 13974, 13974, 13974, 13974, 13974, 13974,
	13974, 13974, 13974, 13974, 1265, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1526, -1000, 216, 26058, 9522, 26058, 1534,
	1534, 48968, 867, 867, 867, 867, 867, 867, 37862, 2048,
	25422, 26058, 2048, 2048, 2048, 2048, 2048, 1589, 1682, 1285,
	39713, 12702, 9522, 9522, 9522, 1589, 14610, 14610, 9522, 9522,
	12066, 11430, 15882, 9522, 9522, 2048, 1073, 1285, 20334, 9522,
	-1000, -1000, 10794, -1000, -1000, -1000, -1000, -1000, 1589, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48968, 48968, 9522,
	9522, 9522, 9522, 1589, 1589, 9522, 9522, 9522, 9522, 9522,
	1589, 1589, 1589, 1589, 9522, 9522, 9522, 9522, 9522, 9522,
	9522, 9522, 9522, 9522, 9522, 9522, 34146, 32912, 35997, 1739,
	1694, -1000, 779, 20970, 1756, -1000, -83, -90, -67, -1000,
	-1000, 866, -1000, -1000, -1000, 10158, -1000, 19062, 2072, 1873,
	-1000, 6907, -1000, -1000, -24, -1000, -1000, -1000, 1805, -1000,
	1811, 341, 44, 1811, 1811, 1811, 1811, 1811, -1000, -1000,
	-1000, -1000, 45, -1000, -1000, -1000, -1000, -1000, 1821, 1820,
	-1000, 1805, 1805, 1805, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1814, 355, 1809, 1809, 1809, 1809, 1809,
	-1000, -1000, -1000, -1000, 648, 648, 648, -1000, 14610, 1825,
	2051, 712, 422, 1998, 2021, 1998, 581, -1000, 778, 1818,
	-1000, 777, 435, 1749, -1000, 272, 1720, 33529, -1000, -1000,
	-1000, -1000, -1000, 35997, 35997, 45266, 45266, 45266, 750, -1000,
	35997, 1777, -1000, -1000, -1000, -1000, -1000, 1744, -1000, 1720,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35997, -1000, -1000, 1457, 1285, 1522, 1520, 2043, -1000, -1000,
	-1000, 1120, -1000, -1000, -1000, -1000, 1064, 50202, 50202, 35997,
	2043, 1064, 1285, 1172, 1826, 1794, 1589, -1000, -1000, 78,
	-1000, 76, -1000, -1000, -1000, 1517, -1000, 13974, 1763, 1763,
	-1000, 1763, 711, 1534, 1763, -1000, 1678, 1153, 1456, 35997,
	-1000, 41564, -8, -1000, -105, 47734, -1000, -1000, -1000, 631,
	47734, -1000, 147, 170, -1000, 706, -1000, 1674, -1000, -1000,
	-1000, -1000, 1816, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 47734, 186, 248, 47734, 1744, 2114, -1000, -1000,
	-1000, -1000, 2068, -1000, -1000, 1794, 1629, -1000, 775, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1973,
	983, 983, 983, 603, -1000, -1000, 1589, -1000, 48351, -1000,
	1880, 1205, 1205, 14610, -1000, -1000, -1000, 19062, 2060, -1000,
	1895, 1890, 1852, -1000, -1000, 967, 1124, 1116, -1000, -1000,
	1232, -1000, -1000, -1000, -1000, -1000, 773, 1794, -1000, -1000,
	-1000, -1000, -1000, 4779, -1000, -1000, -1000, -1000, 1200, 13974,
	13974, 13974, 1172, 4779, 4483, 1547, 1519, 867, 976, 976,
	887, 887, 887, 887, 887, 1135, 1135, -1000, -1000, -1000,
	1589, -1000, 1619, -1000, -1000, 1285, 768, -1000, -1000, -1000,
	-1000, -1000, -1000, 9522, -1000, -1000, -1000, 9522, 9522, 9522,
	9522, 9522, -1000, 14610, -1000, 1589, 1619, 1619, 1619, -1000,
	1068, 1052, 1530, 1619, 919, 2113, 1619, 917, 2112, 1619,
	1608, 13974, 13974, 13974, 1619, 1619, 9522, 1081, -1000, 14610,
	1589, 1619, -1000, 1715, 1760, 1759, 1619, 1589, 1758, 1619,
	1619, -181, -181, 1589, 1619, 1589, 1619, 1619, -181, -181,
	-181, -181, 1619, 1619, 1619, 1619, 1619, 1619, 1619, 1619,
	1619, 1619, 1619, 1619, 955, 35997, -1000, 1728, 447, -1000,
	-1000, -1000, 2050, 31678, -1000, -1000, 38479, -1000, 1794, 1794,
	955, 1707, 32912, -1000, -1000, 32912, 50202, 24786, -1000, 20334,
	-67, -139, -1000, -1000, 1756, -1000, -1000, 1350, -1000, -1000,
	1285, -1000, 767, 1981, 2048, 4066, 657, -1000, -1000, -1000,
	1815, 259, -1000, 1916, 865, 865, 879, 1476, 1915, -1000,
	-1000, 161, -29, -1000, -1000, -1000, 1339, -1000, 196, -1000,
	1811, 1811, 335, 1811, -1000, -1000, -1000, -1000, -1000, -1000,
	1453, 1453, -1000, -1000, -1000, -1000, 1338, -1000, 1814, -1000,
	1335, -1000, -1000, -1000, -1000, 161, 161, 161, 161, -1000,
	-1000, -1000, 1295, 1838, 48968, -1000, 35997, -1000, -1000, -1000,
	2099, -1000, -1000, 48968, 43415, 48968, -1000, -1000, 153, 45266,
	264, 456, 220, -1000, -1000, 705, -1000, 703, -1000, -1000,
	-1000, -1000, -1000, -1000, 35997, 45266, -1000, -1000, -1000, -1000,
	-1000, 2094, 1507, 1486, -1000, -1000, -1000, 1061, 1064, -1000,
	-1000, 13974, 45266, -1000, 578, -1000, -1000, -1000, 4779, -1000,
	-1000, -1000, 955, 725, -1000, -1000, -73, -1000, -1000, 702,
	765, 764, 47734, 701, -1000, 167, 45266, -1000, 48968, -1000,
	2111, 2108, 180, 2107, 45266, -1000, 102, -1000, 215, -1000,
	17154, 26058, 983, 966, -1000, 954, 1451, 1755, -1000, 880,
	855, 828, 666, 666, -1000, 983, 666, 1949, 1944, 952,
	-1000, 1754, 1450, 1449, -1000, 1878, -1000, -1000, -1000, 35997,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 24150,
	9522, -1000, 1172, 4779, 4420, -1000, 13974, -1000, 9522, -1000,
	17790, 1589, 1619, 1619, 1619, 1619, 1619, 1285, -1000, -1000,
	-1000, -1000, 559, 1265, 559, -1000, 1265, -1000, 13974, 13974,
	-1000, 13974, 13974, -1000, -1000, 13974, 4252, 4111, 3842, -274,
	-1000, 1740, 1065, -1000, 14610, 1354, -1000, -1000, -1000, 13974,
	13974, -1000, -1000, -1000, -1000, -1000, 47117, -1000, -181, -181,
	-181, -181, -181, -1000, -1000, -1000, -1000, -181, -181, -181,
	-181, -181, -181, -181, -181, -181, -181, -181, -181, 209,
	1794, -1000, 19698, 32912, 32912, 32912, 32912, 32912, -1000, 1870,
	1869, -1000, 1861, 1860, 1857, 318, 41564, 1672, 1589, 460,
	31678, -1000, 1794, -1000, 40947, 818, 722, 721, 716, 9522,
	13974, 2094, 32912, 1753, 1753, -1000, 763, -1000, -1000, -1000,
	-99, -122, -1000, -1000, -1000, 26058, -1000, -1000, -1000, 4390,
	2085, 983, 983, 983, 983, 281, 1972, 983, 983, 983,
	983, 983, -235, -240, 983, 983, 983, 983, 983, 983,
	983, 983, 983, 983, 983, 94, 983, 983, 983, 983,
	22878, 983, -1000, 42181, 640, 1920, 649, 1476, 1476, 1476,
	-1000, 1476, -1000, -1000, -1000, 1813, -1000, 1182, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1794, -439, 1331, 1959,
	389, 2122, -1000, 1914, -1000, 1913, 1911, 1448, -1000, -1000,
	1679, 1675, 1655, -1000, -1000, -1000, 1811, -1000, 1669, -1000,
	1651, 1751, -1000, 1633, 108, 35997, -1000, -1000, 2045, 1837,
	-1000, -1000, -1000, -1000, 1653, 1750, -1000, 4783, 48968, 48968,
	48968, -1000, -282, 518, -1000, 45266, 192, 272, 509, 1485,
	35997, 45266, -1000, -1000, -1000, 14610, -1000, -1000, 2043, -1000,
	4779, 1720, -1000, -1000, 31, 35997, -1000, 45266, 899, 46500,
	700, 45266, 179, 163, -1000, 45266, 45266, 2106, 45266, 1744,
	1447, -1000, -1000, 945, -1000, -1000, -1000, -1000, -1000, 603,
	45883, 1476, 804, -1000, -1000, 668, -1000, 206, 1483, 31057,
	30440, 48968, 1910, 1909, 1482, 35997, 48968, -1000, -1000, 49585,
	1481, 14610, 48968, -1000, -1000, 48968, 48968, -1000, -1000, -1000,
	-1000, 1158, 8250, -1000, -1000, 1589, -1000, 13974, 4779, -1000,
	-1000, 761, -1000, -181, -181, -181, -181, -181, 1589, 1805,
	1805, -1000, 1805, 1809, -1000, 1805, 66, 1805, 65, 1589,
	1589, 1589, 3670, 2880, 2430, 2170, 1715, 13974, 13974, 13974,
	1794, -175, -1000, 1285, 14610, 2134, 2109, -1000, -1000, 1479,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1835, 19698,
	1794, 16518, -1000, 48968, 1761, -1000, 1030, 823, 1021, 1011,
	758, 757, 447, 1808, 1834, 338, -1000, -1000, -1000, -1000,
	1867, -1000, 1864, 1854, -1000, -1000, -1000, 1797, -1000, -1000,
	1747, 1794, 48968, 13974, 818, -1000, 1794, 1794, 1794, 1589,
	1930, 2088, 1753, -1000, -1000, 883, -1000, -1000, -1000, -1000,
	141, 501, 501, 501, 1265, 983, 1954, 983, 983, 1330,
	27330, 1440, 1439, 1438, 983, 983, 1328, 1436, 27330, 1420,
	626, 501, 501, 501, 1324, 1417, 294, -1000, 1414, 1318,
	1314, 501, -1000, -256, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 501, 1631, -1000, 1805, 1805, 1907, -1000, 865,
	-1000, -1000, -1000, -1000, -1000, 48968, -1000, 13974, 2041, -1000,
	932, -1000, 1534, -1000, 1794, 1794, 1794, 1794, 13974, -1000,
	-1000, -123, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1407, -1000, 1319, -1000, 1315, -1000, -1000, -382, 1804,
	216, -1000, 35997, 139, 43415, -1000, 4783, 4783, 4783, 246,
	185, -1000, 1113, -1000, -1000, -1000, 1406, 1403, 1400, 1720,
	275, 1111, 231, -1000, 2044, -1000, -1000, 1285, 1064, -54,
	-1000, -1000, 163, -1000, -1000, -1000, 45266, 163, -1000, -1000,
	238, 1744, 1744, 45266, 1744, -1000, -1000, -1000, -1000, 49585,
	634, 4783, 4783, 1825, 865, 1906, 649, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1478,
	-1000, 857, -1000, 699, 634, 49585, 1285, 891, 1146, -1000,
	2105, -1000, -1000, -1000, 4779, 23514, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 330, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13974, 13974, 13974, 13974, -1000, 1715, 1715,
	1715, 13974, 1589, 1398, 1285, 13974, 13974, 922, -1000, -1000,
	2016, 1706, 1727, -1000, -1000, 8886, 1589, 1888, 1629, -1000,
	39713, 1626, -1000, 2088, 19698, 14610, 14610, 14610, 14610, -1000,
	-1000, 14610, 1802, -1000, 14610, -1000, -1000, -1000, -1000, -1000,
	48968, 451, -1000, 14610, 1626, 1590, -1000, 48968, 48968, 48968,
	-1000, 1397, 2072, -1000, -266, -1000, 299, 282, 204, -1000,
	-1000, -1000, -1000, -1000, 1265, 983, 27330, 1265, -1000, -1000,
	-1000, -1000, -1000, 1386, 1382, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-251, -1000, 790, 42181, 2002, 2002, 1476, 1476, 1624, -1000,
	1715, 1794, -1000, -1000, -1000, -1000, 7614, -1000, 7614, -1000,
	7614, 7614, 1715, -1000, 1794, 1794, 1794, 1794, 1794, 1794,
	1794, 1794, 1794, 1794, 1794, -1000, 1637, 1610, -1000, 42181,
	-1000, -1000, 2067, -1000, 139, -1000, 1377, 421, 323, -1000,
	407, 334, 329, 327, 319, -1000, -1000, -1000, -1000, 469,
	246, -1000, -86, 1287, 982, 1963, 185, -1000, 1279, 1272,
	1266, 1263, 385, -1000, -1000, -1000, -1000, 218, 272, -1000,
	503, 1375, -1000, 1933, 1931, 2040, 163, 2040, 172, 1744,
	1607, -1000, -1000, 1477, -1000, -1000, 1799, 1476, 1476, -1000,
	1475, -1000, -1000, 48968, -1000, 634, 1995, 1992, 1794, 2094,
	32295, 8250, -1000, -1000, -1000, -1000, 1715, 1715, 1715, 1715,
	-1000, -1000, -1000, 177, -1000, -1000, 1715, 1715, 2088, 2084,
	1901, -1000, 1794, -1000, -1000, 1794, 212, -1000, 48968, 2072,
	-1000, 1285, 1285, 1285, 1285, 1285, 48968, 1285, 1621, 1794,
	39096, -1000, 41564, 1564, 1564, 1564, -50, -1000, -269, 1245,
	27330, 1794, 27330, 1794, 1794, 546, -1000, 1265, -1000, -1000,
	-1000, -1000, -1000, -1000, 790, -1000, 27330, 983, 1374, -1000,
	-1000, -1000, -1000, -1000, 619, 48968, -442, 13974, 1619, 1619,
	1619, -1000, 1619, -1000, -1000, -1000, 1617, -1000, 216, 464,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1937, 1936, 433,
	-1000, 1373, 1372, -1000, 494, 1277, 791, -186, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 484,
	1465, -1000, 228, -1000, -1000, 683, 1922, 1924, 2082, -1000,
	45266, 2040, -1000, -1000, -1000, -1000, 161, 161, 42181, 1825,
	1798, -1000, -1000, -1000, 13974, -1000, 916, 2092, -1000, 1738,
	-1000, -1000, -1000, -1000, -1000, 1589, 182, -295, -1000, -1000,
	935, 14610, 2121, -1000, 1727, 1794, -1000, 216, -1000, -1000,
	1615, -1000, -1000, -1000, 818, -1000, -1000, -1000, 1794, 1794,
	2078, -1000, 1589, 48968, 1589, 48968, 1425, 48968, 979, -1000,
	-1000, -1000, 1238, -1000, 35997, -1000, -1000, -1000, -1000, 1715,
	-1000, -1000, -1000, -1000, 790, -1000, 450, 6223, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1228, -1000, -1000, 1246,
	492, 225, -1000, 2038, -1000, 1797, 1227, 1931, 2077, 1928,
	1926, -1000, 1371, -283, -1000, 1595, 1796, 42181, 4779, 1587,
	-1000, 48968, 2090, 2076, -1000, -1000, 1877, -279, -302, 1589,
	236, 236, 1734, 19698, 1727, 1589, -1000, -1000, 26058, 916,
	-352, -1000, 1564, -1000, 1564, 1589, 1589, 1564, 1213, -1000,
	1795, -442, -1000, 790, -1000, 475, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14610, 14610, 26694,
	6223, 207, -1000, 188, -1000, -1000, -1000, 1361, -1000, 1004,
	-1000, 1360, -1000, 2075, 2074, -1000, 230, 790, 42181, 1593,
	-1000, 916, 1887, -183, 14610, 14610, -1000, 1876, -1000, -1000,
	-1000, 252, -1000, 937, 353, 924, -1000, 1534, -1000, 1726,
	-1000, 1591, -1000, 4783, 1587, -271, -1000, -1000, -1000, -1000,
	-1000, 1794, 48968, -1000, -1000, 1464, 1461, -1000, 1147, 1261,
	292, 284, 5578, -1000, -1000, -1000, -1000, -450, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1357, 1353, 42798, -1000, 1580,
	790, -1000, 580, -1000, 48968, -1000, 1285, 1725, -1000, 1285,
	-286, 1109, -1000, -1000, -1000, -1000, -1000, 48968, 1589, 26058,
	239, -1000, -1000, 1207, 48968, 1566, -1000, -1000, -1000, 991,
	-1000, 14610, 6223, 2064, 2061, 2059, 31, 26058, 6027, -1000,
	-1000, -1000, -1000, 169, 1720, 790, -1000, 480, 1721, -1000,
	2024, 14610, -298, 252, -1000, 40330, -1000, -1000, 1296, -227,
	-1000, 1564, 1833, 195, 1096, 6223, -1000, 1097, -451, 515,
	216, 755, 866, -1000, -1000, -1000, 45266, -1000, 1794, 48968,
	1794, -1000, -317, -1000, 41564, -1000, -1000, 1201, -1000, 1832,
	1831, 2101, -1000, -1000, -1000, -1000, -1000, -1000, 6223, 39713,
	-1000, -453, 6223, 849, -1000, -1000, -1000, 5805, -1000, -1000,
	-1000, -1000, 280, -1000, -1000, 1991, 1720, 15246, -1000, -1000,
	-1000, -1000, 416, -1000, -1000, 2120, -1000, 2110, 805, 805,
	-1000, -454, -1000, 5191, -455, 675, 6223, 1150, -1000, 14610,
	-1000, 755, -1000, 13974, 1715, 1589, -1000, 1830, 13974, 1810,
	-1000, -1000, -1000, 636, 1206, -1000, 4150, 1075, 6223, -1000,
	-456, 673, 6223, -1000, 1093, -1000, 4779, -1000, -1000, -328,
	1204, -331, -1000, -1000, -1000, -1000, -1000, 3662, -1000, -459,
	6223, -1000, -332, -1000, 671, 1598, -464, -1000, -1000, 670,
	6223, -1000,
}

var yyPgo = [...]int{
	0, 2594, 2593, 17, 175, 2590, 261, 2589, 2588, 24,
	2587, 32, 29, 26, 38, 2585, 2269, 2267, 2246, 2244,
	2221, 2583, 7, 2582, 2581, 2211, 2580, 2578, 2205, 2200,
	2198, 2194, 2577, 2575, 2573, 2192, 2190, 2186, 19, 2572,
	28, 2570, 4, 146, 171, 2569, 2, 2568, 2567, 14,
	2566, 2565, 2183, 2564, 2563, 2560, 2547, 114, 2544, 2181,
	2166, 2543, 2161, 2151, 2542, 2541, 2147, 2142, 2135, 2540,
	1938, 168, 349, 165, 179, 2537, 2535, 2534, 193, 2532,
	149, 2530, 2529, 2526, 121, 2525, 725, 120, 64, 122,
	2224, 2524, 16, 69, 269, 2522, 6, 2520, 118, 2519,
	115, 2513, 2508, 167, 2506, 143, 68, 106, 2505, 2504,
	154, 2500, 2499, 2497, 116, 2496, 2495, 176, 100, 2494,
	2493, 140, 2492, 61, 172, 53, 62, 2491, 112, 2488,
	2487, 2483, 47, 359, 2481, 110, 145, 2477, 2472, 97,
	2471, 2467, 89, 2465, 2462, 2460, 153, 54, 2455, 2454,
	51, 2453, 74, 67, 2452, 45, 2451, 141, 2448, 2447,
	2446, 2445, 2444, 57, 2442, 79, 2441, 142, 235, 1107,
	2440, 2439, 12, 8, 2438, 52, 15, 5, 55, 36,
	75, 91, 137, 133, 105, 2437, 34, 50, 129, 101,
	2436, 108, 85, 48, 2433, 150, 2430, 84, 152, 138,
	139, 151, 2429, 2428, 2427, 180, 2426, 127, 92, 2424,
	104, 1464, 169, 2419, 2418, 107, 2417, 2416, 2415, 2414,
	2413, 94, 134, 2412, 2410, 181, 178, 183, 573, 2409,
	364, 3325, 4575, 253, 3213, 44, 155, 2408, 60, 2406,
	2405, 2404, 2727, 124, 22, 96, 166, 2403, 117, 37,
	82, 2400, 2399, 2398, 2395, 2393, 2392, 2391, 2388, 111,
	170, 2387, 2386, 2385, 2384, 25, 23, 13, 21, 2383,
	161, 159, 158, 2378, 162, 41, 2370, 2369, 131, 119,
	2367, 2366, 2361, 2359, 132, 93, 148, 31, 2358, 125,
	128, 173, 2357, 98, 2356, 2354, 90, 1746, 2352, 2350,
	2349, 2346, 113, 135, 2342, 2337, 2336, 40, 2335, 2334,
	2332, 2330, 2329, 83, 42, 43, 81, 66, 2326, 2322,
	88, 99, 46, 35, 2320, 3, 9, 11, 2316, 2303,
	2287, 2285, 2284, 2281, 2280, 103, 2279, 2278, 80, 2276,
	2274, 2273, 49, 2272, 2271, 2248, 144, 126, 59, 164,
	268, 10, 2242, 2239, 20, 2223, 130, 2219, 70, 2209,
	65, 2202, 2188, 63, 2176, 2170, 73, 2168, 2164, 163,
	1895, 312, 2159, 160, 123, 56, 58, 2156, 109, 2154,
	0, 1208, 157, 597, 2149, 2145, 2139,
}

var yyR1 = [...]int{
	0, 379, 379, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 69, 3, 3, 9,
	10, 4, 4, 5, 5, 96, 96, 6, 95, 95,
	95, 191, 191, 191, 191, 190, 190, 97, 97, 94,
	94, 103, 7, 7, 8, 8, 11, 11, 77, 77,
	12, 13, 13, 13, 13, 382, 382, 112, 112, 110,
	110, 111, 111, 188, 188, 14, 14, 14, 195, 195,
	200, 200, 200, 203, 203, 203, 203, 177, 178, 179,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 352, 352, 361, 361, 361, 362, 362, 360,
	360, 360, 360, 360, 364, 364, 365, 365, 363, 363,
	363, 363, 367, 367, 368, 368, 366, 366, 366, 366,
	366, 366, 366, 366, 366, 366, 366, 366, 366, 366,
	355, 355, 355, 35, 35, 35, 35, 35, 36, 36,
	36, 36, 36, 36, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 369,
	369, 369, 369, 369, 369, 370, 370, 371, 371, 372,
	372, 373, 373, 373, 373, 374, 374, 374, 374, 374,
	375, 375, 375, 375, 375, 375, 375, 376, 376, 377,
	377, 2, 333, 333, 334, 334, 335, 335, 335, 335,
	336, 336, 337, 337, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 26, 227, 227, 224, 224, 224,
	225, 225, 226, 226, 226, 354, 354, 354, 348, 348,
	348, 350, 350, 349, 349, 349, 351, 351, 356, 356,
	356, 356, 356, 358, 358, 358, 358, 358, 358, 359,
	359, 359, 357, 357, 50, 50, 51, 51, 51, 166,
	166, 166, 15, 15, 15, 15, 15, 21, 23, 23,
	39, 39, 40, 24, 24, 24, 24, 41, 41, 42,
	27, 27, 27, 27, 27, 27, 48, 48, 48, 47,
	47, 46, 46, 46, 46, 46, 46, 25, 25, 25,
	25, 49, 49, 44, 44, 43, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 28, 28,
	28, 28, 28, 28, 20, 332, 332, 332, 38, 38,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	55, 55, 298, 299, 299, 299, 299, 299, 299, 299,
	299, 285, 285, 286, 286, 286, 286, 286, 275, 275,
	275, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 249, 249, 249, 249, 255,
	255, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 254, 254, 254, 254, 254, 254, 254, 254, 256,
	256, 256, 256, 256, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 258,
	258, 258, 258, 258, 258, 258, 258, 284, 284, 260,
	260, 259, 259, 259, 278, 278, 279, 279, 279, 276,
	276, 276, 277, 277, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 264, 280, 265, 265,
	266, 266, 267, 267, 268, 268, 269, 269, 274, 274,
	273, 273, 273, 273, 273, 273, 270, 270, 270, 270,
	271, 271, 272, 283, 283, 283, 283, 283, 261, 37,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 319, 319, 217, 217, 218, 218, 288, 288,
	317, 317, 316, 316, 315, 315, 315, 297, 297, 312,
	312, 312, 312, 312, 312, 312, 312, 292, 292, 292,
	291, 291, 293, 293, 296, 296, 314, 314, 313, 313,
	289, 289, 289, 320, 320, 320, 320, 320, 290, 290,
	290, 290, 290, 321, 294, 294, 295, 295, 295, 326,
	327, 325, 325, 325, 325, 325, 129, 129, 129, 301,
	301, 301, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 303, 303, 303, 303, 303, 304, 304, 304,
	304, 304, 304, 378, 378, 378, 305, 305, 305, 306,
	306, 306, 306, 306, 307, 307, 307, 307, 308, 308,
	309, 309, 310, 310, 311, 311, 330, 330, 329, 329,
	52, 52, 54, 54, 53, 58, 58, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 165,
	165, 165, 222, 222, 324, 322, 322, 323, 323, 17,
	17, 56, 56, 353, 353, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 328, 328, 328, 19, 19, 59,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 91, 209, 209, 208, 208,
	207, 207, 207, 210, 210, 210, 210, 247, 247, 247,
	61, 61, 61, 70, 70, 65, 65, 68, 68, 68,
	71, 71, 72, 72, 73, 73, 66, 67, 29, 30,
	30, 30, 30, 31, 223, 223, 63, 63, 64, 64,
	64, 64, 83, 83, 384, 384, 62, 385, 74, 75,
	75, 76, 76, 76, 213, 213, 80, 80, 80, 78,
	78, 78, 79, 79, 85, 85, 89, 89, 89, 89,
	88, 88, 88, 88, 168, 168, 173, 239, 239, 149,
	149, 169, 169, 174, 174, 174, 175, 175, 176, 176,
	176, 176, 176, 171, 171, 170, 170, 172, 137, 137,
	237, 237, 237, 237, 236, 236, 236, 236, 236, 236,
	93, 93, 98, 98, 100, 100, 100, 100, 100, 100,
	104, 151, 151, 122, 122, 123, 123, 123, 123, 123,
	135, 135, 187, 187, 186, 186, 189, 189, 99, 101,
	101, 101, 101, 107, 107, 108, 108, 109, 109, 221,
	221, 244, 244, 244, 113, 113, 113, 115, 114, 114,
	114, 114, 114, 114, 116, 116, 102, 102, 300, 300,
	287, 251, 251, 252, 386, 386, 386, 386, 117, 117,
	119, 120, 120, 118, 118, 118, 118, 118, 124, 124,
	121, 125, 125, 125, 125, 126, 126, 90, 90, 90,
	90, 90, 90, 90, 90, 206, 206, 128, 128, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 145,
	145, 145, 145, 145, 145, 130, 130, 130, 130, 130,
	130, 130, 84, 84, 146, 146, 146, 106, 105, 105,
	87, 87, 86, 86, 147, 147, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 140, 140, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 383, 383, 142, 141, 141,
	141, 141, 141, 141, 81, 81, 81, 81, 81, 245,
	245, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 158, 158, 82, 82,
	156, 156, 157, 159, 159, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 132,
	132, 132, 132, 132, 132, 132, 132, 134, 134, 134,
	160, 160, 148, 148, 92, 161, 161, 162, 163, 163,
	164, 164, 167, 180, 180, 180, 181, 181, 181, 181,
	136, 136, 182, 182, 182, 131, 131, 131, 131, 131,
	131, 131, 185, 185, 184, 184, 183, 183, 183, 183,
	183, 183, 192, 192, 150, 150, 153, 153, 152, 154,
	193, 193, 197, 197, 197, 197, 194, 194, 198, 198,
	198, 198, 201, 201, 202, 202, 202, 199, 199, 199,
	196, 196, 196, 241, 241, 241, 204, 204, 214, 214,
	211, 211, 212, 212, 205, 205, 262, 262, 262, 220,
	220, 219, 219, 219, 215, 215, 215, 216, 216, 238,
	238, 234, 234, 240, 240, 235, 235, 242, 242, 243,
	243, 331, 331, 281, 281, 341, 341, 282, 282, 342,
	342, 344, 344, 339, 339, 340, 340, 343, 343, 32,
	345, 345, 346, 346, 347, 347, 347, 347, 33, 34,
	34, 34, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 233,
	233, 233, 233, 233, 233, 231, 231, 231, 231, 231,
	380, 381,
}

var yyR2 = [...]int{
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 11, 5, 7, 1,
	5, 1, 3, 1, 3, 2, 1, 13, 0, 2,
	2, 0, 2, 3, 3, 1, 3, 0, 2, 1,
	3, 4, 1, 3, 1, 3, 8, 9, 1, 1,
	10, 9, 8, 7, 7, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 4, 5, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 0, 0, 0,
	2, 3, 3, 11, 9, 11, 5, 5, 16, 12,
	9, 4, 0, 3, 0, 2, 2, 1, 3, 1,
	1, 2, 2, 2, 0, 2, 1, 2, 2, 2,
	2, 2, 0, 1, 1, 2, 3, 3, 5, 3,
	3, 4, 5, 4, 4, 2, 2, 2, 2, 2,
	0, 2, 2, 9, 10, 9, 5, 7, 7, 7,
	7, 8, 4, 6, 2, 3, 2, 3, 3, 3,
	4, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 2, 2, 2, 3, 3, 2, 3, 3,
	2, 2, 2, 2, 2, 1, 3, 0, 3, 1,
	3, 0, 1, 1, 1, 1, 3, 1, 3, 3,
	0, 2, 5, 5, 5, 7, 5, 0, 3, 0,
	3, 4, 0, 1, 1, 3, 2, 3, 3, 3,
	0, 1, 1, 2, 2, 2, 2, 1, 2, 2,
	3, 3, 3, 3, 4, 2, 3, 3, 3, 3,
	0, 3, 0, 3, 3, 1, 1, 1, 3, 2,
	1, 1, 3, 3, 2, 1, 1, 3, 1, 2,
	5, 4, 6, 4, 3, 3, 6, 5, 5, 4,
	3, 5, 1, 3, 1, 1, 1, 1, 1, 0,
	2, 2, 1, 1, 1, 1, 1, 4, 5, 8,
	1, 2, 5, 7, 10, 8, 11, 1, 2, 5,
	5, 5, 5, 6, 5, 7, 1, 1, 1, 1,
	3, 1, 1, 1, 2, 1, 1, 2, 4, 2,
	4, 2, 3, 1, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	4, 3, 2, 4, 3, 0, 2, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	5, 5, 5, 1, 1, 2, 3, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 1,
	1, 0, 2, 3, 2, 2, 2, 2, 2, 2,
	2, 2, 6, 8, 3, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 3, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 3, 3, 2, 2,
	3, 2, 3, 4, 2, 2, 1, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 4, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 3, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 2, 3, 2, 3, 5, 3,
	5, 3, 5, 4, 5, 4, 3, 1, 0, 1,
	3, 3, 0, 1, 2, 2, 0, 1, 0, 1,
	1, 1, 1, 2, 2, 2, 5, 5, 4, 4,
	4, 4, 4, 2, 1, 2, 1, 2, 2, 3,
	2, 2, 2, 2, 1, 1, 1, 1, 3, 2,
	1, 1, 0, 3, 1, 1, 0, 1, 5, 4,
	0, 1, 1, 2, 2, 3, 2, 0, 1, 3,
	5, 3, 3, 5, 3, 2, 2, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 3, 3, 3,
	3, 3, 1, 10, 11, 11, 12, 12, 3, 3,
	3, 2, 1, 5, 1, 1, 0, 2, 2, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	2, 3, 3, 3, 3, 3, 4, 4, 5, 3,
	3, 4, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 3, 3, 3, 2, 2, 4,
	4, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 5, 8, 1,
	4, 5, 4, 5, 5, 5, 5, 8, 0, 1,
	0, 2, 0, 4, 0, 2, 0, 2, 0, 2,
	1, 1, 4, 3, 5, 1, 3, 5, 4, 3,
	5, 3, 8, 10, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 4, 5, 1, 2,
	2, 4, 3, 6, 5, 3, 9, 2, 2, 0,
	1, 2, 0, 1, 7, 1, 3, 8, 8, 3,
	3, 3, 5, 3, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 0, 1, 1, 3, 2, 3,
	3, 4, 3, 5, 5, 5, 4, 4, 4, 2,
	2, 2, 6, 2, 4, 4, 4, 5, 8, 6,
	3, 5, 4, 2, 4, 3, 2, 4, 5, 6,
	2, 6, 6, 3, 3, 3, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 3, 2, 0, 1, 1,
	2, 4, 1, 0, 1, 2, 1, 2, 4, 4,
	0, 1, 0, 3, 0, 2, 4, 4, 2, 3,
	4, 4, 5, 3, 1, 1, 3, 3, 1, 1,
	1, 1, 0, 3, 1, 1, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 0, 1, 1, 0,
	1, 1, 0, 1, 3, 5, 1, 1, 3, 5,
	1, 2, 3, 5, 2, 2, 6, 0, 1, 0,
	3, 0, 1, 0, 2, 2, 4, 1, 2, 2,
	2, 2, 2, 0, 2, 1, 3, 3, 1, 3,
	0, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 4, 1, 3, 1, 1,
	2, 2, 4, 2, 6, 1, 4, 6, 3, 2,
	0, 3, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 2, 2, 2, 12, 11, 1, 3,
	3, 4, 3, 0, 0, 3, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 1, 1, 1, 3,
	3, 0, 5, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	0, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	1, 1, 5, 6, 6, 6, 5, 5, 5, 6,
	5, 5, 6, 5, 5, 5, 5, 6, 5, 5,
	5, 4, 4, 5, 5, 5, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 3, 6, 6, 4,
	6, 6, 4, 8, 8, 8, 8, 4, 6, 7,
	7, 7, 9, 4, 7, 5, 4, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 1, 3, 1, 0, 2, 1, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	1, 1, 0, 2, 4, 2, 4, 1, 3, 5,
	4, 6, 0, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 3, 3, 3, 1, 3, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 3, 3, 1,
	1, 0, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 1, 0, 4, 0, 1, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 3, 3,
	1, 3, 2, 4, 1, 2, 1, 2, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -379, -1, -3, -10, -11, -12, -13, -14, -16,
	-52, -17, -18, -19, -59, -60, -61, -65, -66, -67,
	-63, -62, -25, -28, -20, -69, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -5, 6, 7, -97, 29,
	-55, 180, -54, -53, 183, 182, 219, 184, 212, 64,
	342, -68, 345, 346, -384, -223, 270, 271, 20, 37,
	347, 349, 30, 31, 233, 287, 289, 314, -4, 523,
	181, 343, 214, 213, 26, -6, -7, -380, 68, 641,
	-163, 15, -74, -385, -74, -77, 9, 10, 8, 444,
	-74, -298, -221, 108, 68, 23, -216, -227, 88, 435,
	188, -225, 283, 285, -214, -215, -224, 243, 253, 44,
	199, 198, 254, 189, 283, 189, 190, 192, 435, 188,
	226, 225, 283, 285, 189, -118, -242, -231, -232, 301,
	72, -230, 461, 465, 468, 469, 474, 291, 81, 323,
	324, 315, 325, 209, 413, 284, 290, 293, 316, 608,
	326, 328, 329, 455, 456, 192, 202, 626, 308, 210,
	520, 254, 636, 629, 295, 403, 492, 342, 359, 351,
	374, 521, 579, 265, 350, 341, 420, 493, 298, 258,
	321, 580, 409, 415, 268, 345, 513, 511, 494, 429,
	234, 581, 262, 264, 263, 248, 460, 269, 36, 215,
	370, 304, 243, 582, 496, 575, 495, 237, 508, 35,
	27, 510, 236, 432, 99, 583, 332, 417, 497, 391,
	333, 232, 584, 525, 302, 416, 366, 314, 117, 241,
	280, 334, 585, 392, 396, 586, 421, 288, 279, 515,
	587, 588, 335, 589, 191, 294, 498, 590, 244, 423,
	299, 390, 200, 522, 211, 48, 223, 424, 394, 514,
	400, 591, 331, 592, 593, 594, 595, 312, 310, 499,
	311, 313, 255, 260, 500, 53, 186, 398, 397, 399,
	261, 419, 379, 377, 596, 597, 303, 206, 434, 598,
	599, 378, 18, 600, 601, 427, 306, 602, 603, 604,
	501, 516, 491, 605, 606, 418, 393, 395, 242, 116,
	607, 309, 414, 318, 524, 292, 512, 609, 337, 222,
	217, 428, 327, 610, 611, 612, 613, 614, 286, 285,
	346, 319, 502, 347, 266, 615, 616, 503, 617, 618,
	252, 235, 431, 422, 52, 405, 619, 322, 338, 408,
	343, 229, 504, 505, 506, 507, 7, 259, 300, 517,
	518, 412, 320, 267, 253, 256, 381, 224, 620, 621,
	368, 369, 344, 227, 219, 111, 430, 574, 283, 339,
	51, 230, 622, 623, 257, 231, 348, 297, 371, 189,
	133, 375, 420, 180, 410, 411, 417, -292, 418, 225,
	228, -247, 189, -209, 409, 288, 309, 465, 231, 232,
	190, 191, 32, 422, 421, 413, -242, -70, 348, -70,
	-70, 193, 348, -83, 184, 220, -118, -49, 72, 272,
	-49, 29, 72, 72, 36, 72, 347, 412, 412, 75,
	524, 234, 21, -370, -351, 318, -369, -349, 181, 180,
	10, 182, 323, 324, 325, 190, 8, 30, 608, 207,
	326, 327, 6, 212, 328, 329, 226, 9, 330, -354,
	74, 72, -230, 21, -370, -351, 318, -218, -217, 340,
	400, -96, 578, -94, -103, -244, -242, -231, 74, 435,
	-205, 194, 344, -76, 5, -9, -3, 523, -181, 17,
	16, -80, 54, 55, -75, -88, 124, -90, -242, -127,
	91, -133, 28, 72, -230, 24, -132, 301, 220, -128,
	-155, -231, -154, -106, 133, -246, 122, 123, 130, 92,
	176, -140, -138, -139, -141, -143, -144, 74, 73, 82,
	75, 76, 77, 78, 83, 84, 85, -234, -232, -229,
	461, 465, 468, 469, 474, -152, -380, 134, 135, 136,
	137, 138, 139, 140, 141, 142, 143, 144, 145, 146,
	147, 148, 149, 150, 151, 152, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 162, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 174, 175, 58,
	59, 459, 188, 445, 446, 372, 8, 447, 448, 449,
	519, 209, 453, 94, 47, 563, 433, 443, 442, 441,
	439, 440, 436, 438, 437, 455, 456, 195, 435, 128,
	444, 478, 479, 480, 481, 482, 483, 484, 485, 487,
	488, 486, 462, 463, 464, 466, 467, 470, 471, 472,
	473, 475, 476, 477, 526, 185, 181, 184, 90, 23,
	25, 527, 240, 93, 357, 386, 452, 16, 20, 203,
	187, 375, 201, 132, 197, 204, 274, 276, 180, 62,
	528, 275, 410, 529, 530, 531, 532, 365, 363, 273,
	533, 10, 26, 213, 247, 534, 361, 182, 238, 97,
	98, 535, 41, 40, 307, 277, 214, 536, 362, 537,
	538, 19, 65, 205, 11, 199, 228, 635, 539, 287,
	13, 115, 14, 540, 541, 542, 543, 194, 110, 190,
	625, 60, 245, 544, 355, 545, 546, 547, 548, 549,
	356, 87, 550, 551, 107, 552, 56, 490, 32, 233,
	576, 450, 553, 554, 38, 37, 385, 389, 384, 555,
	401, 108, 17, 30, 556, 557, 221, 388, 354, 383,
	577, 558, 559, 250, 63, 340, 364, 639, 33, 66,
	218, 336, 305, 42, 88, 15, 246, 61, 34, 457,
	112, 640, 367, 196, 225, 561, 425, 249, 562, 113,
	360, 578, 207, 109, 349, 183, 317, 271, 208, 564,
	289, 565, 239, 114, 411, 566, 567, 454, 29, 212,
	270, 353, 198, 568, 251, 282, 272, 281, 569, 570,
	296, 43, 637, 624, 189, 39, 96, 387, 352, 382,
	193, 451, 226, 278, 5, 44, 31, 406, 9, 330,
	64, 67, 376, 373, 571, 380, 638, 12, 572, 458,
	523, 426, 89, 573, 407, -74, -74, -74, -194, 344,
	-201, -198, 421, 422, -199, -202, -196, -155, 400, 605,
	606, 420, 375, 419, -234, -242, -231, 301, 220, 133,
	462, 463, 464, 94, 372, 445, 478, 436, 438, 433,
	437, 435, 28, 479, 24, 85, 480, 459, 195, 8,
	176, 466, 467, 481, 482, 483, 58, 439, 440, 519,
	128, 91, 484, 485, 83, 487, 488, 563, 444, 59,
	486, 188, 472, 471, 470, 473, 447, 448, 84, 441,
	442, 443, 47, 476, 475, 477, -2, -6, 6, -118,
	-299, -286, -290, -234, -231, -232, -233, 216, 204, -321,
	72, -230, 301, 220, 50, 86, 55, 54, 201, 190,
	192, 444, -212, 195, -212, 226, 225, -226, 251, -212,
	-212, 189, -225, 100, 100, -56, -118, -353, -348, -354,
	-211, 195, -234, -211, -211, -211, -211, -211, -211, -211,
	-118, 177, -110, -118, 72, 29, -210, 108, 12, 435,
	188, 189, 225, 226, 192, -294, 11, 110, 229, 229,
	229, 230, 229, -208, 412, 414, 227, 415, 416, 12,
	-91, 108, 19, -380, -181, -181, 125, -72, 90, -72,
	72, 347, 193, -64, -3, -13, -11, -12, -9, 100,
	-135, 23, 29, 29, 74, 51, 29, -44, -43, -45,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 29, -332, 68, -281, 400, 72, -345, -346,
	-118, 75, 75, 66, 309, 66, 69, 193, 69, 66,
	-371, 319, 68, -371, 285, 319, 320, 253, 283, 192,
	-371, -371, 285, -371, -371, -371, -371, -371, 412, -371,
	-371, -371, 321, 322, -371, 410, 192, -371, -371, -371,
	-371, -371, 71, 66, 69, 309, 66, 11, 66, -318,
	133, 332, 333, 334, 335, 331, 309, 336, 337, 338,
	229, 339, -4, -94, 69, -185, -380, 72, -274, -273,
	-270, -271, -272, -269, 28, 189, 425, -8, -6, -380,
	21, 22, -381, 70, -96, -182, 19, 30, -136, 75,
	78, -164, -167, -90, -242, 50, -78, 21, 22, 80,
	11, -237, 90, 88, 89, 107, -236, 23, 72, -230,
	-231, 74, -232, -233, 177, -90, -130, 110, 91, 108,
	109, 93, 119, 118, 129, 122, 123, 124, 125, 126,
	127, 128, 120, 121, 132, 100, 101, 102, 103, 104,
	105, 106, -206, -380, -106, -380, 177, -380, 177, 178,
	179, 177, -133, -133, -133, -133, -133, -133, -133, -380,
	177, 177, -380, -380, -380, -380, -380, -9, -147, -90,
	523, -380, -380, -380, -380, -380, -380, -380, -380, -380,
	-380, -380, -380, -380, -380, -380, -158, -90, -380, -380,
	-383, -142, -380, -383, -142, -383, -142, -383, -380, -383,
	-142, -383, -142, -383, -383, -142, -383, -380, -380, -380,
	-380, -380, -380, -380, -380, -380, -380, -380, -380, -380,
	-380, -380, -380, -380, -380, -380, -380, -380, -380, -380,
	-380, -380, -380, -380, -380, -380, -205, -205, 11, -110,
	-111, -121, -242, 69, -195, -200, 423, 425, 344, -199,
	-199, -241, -234, 74, 28, 100, 29, 177, -163, -74,
	70, 69, -290, -249, -255, -257, -256, -258, -253, -254,
	372, 375, 379, 377, 373, 378, 133, 376, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 29,
	215, 368, 369, 370, 371, 392, 393, 394, 395, 396,
	397, 398, 399, 351, 374, 521, 352, 353, 354, 355,
	356, 357, 359, 360, 361, 362, 363, 364, 365, 366,
	-249, -249, -249, -249, 72, 229, -231, -321, 68, -234,
	-118, -227, -225, 72, 91, 72, -117, -234, -242, -124,
	-234, -242, 252, -357, -356, -348, -351, -212, -226, -348,
	257, 255, 256, 69, 193, 69, 193, 71, -110, 24,
	66, -112, -118, 72, 72, -117, -124, -350, -348, -351,
	-243, -242, -228, 526, 185, 21, 181, 184, 90, 23,
	25, 527, 240, 93, 357, 133, 462, 463, 464, 386,
	452, 16, 20, 203, 94, 187, 372, 375, 201, 132,
	197, 204, 274, 276, 445, 478, 180, 62, 528, 436,
	438, 433, 437, 275, 435, 410, 529, 530, 531, 532,
	365, 363, 273, 28, 533, 10, 479, 26, 213, 247,
	22, 534, 126, 361, 182, 489, 238, 97, 98, 535,
	41, 40, 307, 24, 277, 214, 85, 536, 480, 362,
	537, 538, 19, 65, 205, 11, 199, 228, 635, 539,
	287, 13, 459, 115, 14, 540, 541, 542, 543, 195,
	194, 110, 190, 625, 60, 245, 8, 544, 355, 545,
	546, 547, 548, 549, 356, 176, 87, 550, 551, 107,
	552, 56, 466, 467, 490, 45, 32, 233, 481, 482,
	576, 483, 450, 553, 554, 38, 37, 385, 389, 384,
	555, 401, 58, 108, 17, 439, 440, 30, 556, 557,
	519, 221, 388, 354, 383, 577, 558, 559, 128, 250,
	63, 91, 340, 484, 485, 83, 364, 639, 33, 66,
	218, 336, 305, 42, 88, 15, 246, 61, 34, 457,
	112, 640, 487, 367, 196, 225, 561, 425, 249, 562,
	113, 488, 360, 578, 207, 109, 349, 183, 563, 444,
	317, 271, 208, 564, 289, 59, 565, 239, 114, 486,
	188, 411, 566, 6, 567, 454, 29, 212, 270, 353,
	198, 568, 251, 282, 272, 281, 569, 49, 570, 296,
	43, 472, 471, 470, 473, 637, 57, 447, 448, 624,
	189, 39, 96, 387, 352, 382, 193, 451, 226, 84,
	278, 5, 44, 31, 406, 9, 330, 64, 67, 441,
	442, 443, 47, 376, 373, 571, 476, 380, 475, 477,
	638, 95, 12, 572, 458, 523, 426, 89, 573, 407,
	69, -210, 74, -246, -90, -212, -212, -118, -118, -118,
	-118, -118, -210, -210, -210, -210, -207, 11, 110, 11,
	-207, -207, -90, -133, -348, 437, 124, -242, -73, -71,
	206, -71, -73, 72, 72, 347, 72, 33, -44, -44,
	74, -44, 69, 100, -44, 70, -147, -331, 625, 69,
	-347, 23, 425, 426, 401, -373, 189, 228, 225, 66,
	-373, -369, 327, -350, -349, -348, -371, -372, -234, -371,
	-371, -371, 412, -371, -371, -371, -371, -371, -371, -371,
	-371, -354, -373, 287, 69, -373, -350, -348, 331, 331,
	331, 331, 331, 331, -103, 23, -184, -183, -235, -231,
	-232, -233, 216, -234, -228, -274, -271, -270, -272, 375,
	420, 132, 432, -118, 426, 427, -9, -191, 87, 9,
	110, 69, 18, 69, -180, 25, 26, 177, -134, 51,
	75, 78, -213, 49, -118, -90, -90, -90, -145, 83,
	91, 84, 85, -236, 216, 124, -243, -235, -232, -231,
	301, 220, -228, -133, -146, -152, -106, 79, 110, 108,
	109, 93, -133, -133, -133, -133, -133, -133, -133, -133,
	-133, -133, -133, -133, -133, -133, -133, -245, 72, 74,
	72, -235, -86, -89, 124, -90, -242, -235, -132, 83,
	-132, -234, -234, -78, -235, 413, -235, -78, -78, -78,
	-78, -78, -381, 69, -381, -9, -86, -86, -86, -381,
	-90, -90, -86, -86, -155, 74, -86, -155, 74, -86,
	-133, 450, 451, 452, -86, -86, -78, -156, -157, 95,
	-155, -86, -381, -133, -234, -234, -86, -87, -86, -86,
	-86, -381, -381, -89, -86, -89, -86, -86, -381, -381,
	-381, -381, -86, -86, -86, -86, -86, -86, -86, -86,
	-86, -86, -86, -86, -120, 87, -118, -93, -98, -100,
	-101, -122, -105, -380, -99, -102, -118, -106, 72, 490,
	-118, -110, -382, 11, 67, -382, 69, 177, -198, -201,
	69, 424, 426, 427, -195, -267, -268, 132, 66, 86,
	-90, -235, -243, -181, -80, -301, -286, -288, -289, -290,
	-312, 204, -320, 196, 198, 199, 44, -291, 205, 190,
	45, -250, -276, 405, 406, -260, 68, -259, 68, -259,
	380, 372, 375, 373, -259, -259, -259, -259, -259, 373,
	68, 68, -260, -260, -260, -278, 68, -278, 367, -279,
	68, -279, -279, -279, -279, -250, -250, -250, -250, -321,
	-321, -321, -90, -238, 67, 23, 192, -274, 24, -274,
	-50, 240, 210, 177, 68, 177, 243, 244, -352, 69,
	28, -358, 284, -118, 220, -118, -118, -348, -348, -354,
	-328, 208, 203, -118, 69, 69, -118, 74, 72, 72,
	-135, -295, 11, 110, -210, -242, -242, -118, -135, -210,
	-84, 216, 67, -383, -381, 349, 350, 72, -133, -43,
	-132, 70, -119, 87, 74, -346, -244, 400, 426, -374,
	124, -234, -373, -374, -377, 523, 193, 70, 69, -371,
	-374, 305, 287, -374, 11, -319, 19, -105, -380, -381,
	69, 177, 29, -297, 100, -297, -297, -58, -57, 185,
	182, 183, 186, 187, -324, 403, 181, 237, 236, 222,
	-381, -190, 34, 35, -234, 52, -136, -136, -167, -204,
	19, 11, 47, 47, -79, 57, 83, 84, 85, 177,
	-380, -146, -133, -133, -133, -84, 90, -381, 69, -381,
	177, -87, -86, -86, -86, -86, -86, -90, -381, -381,
	-381, -381, 69, 67, 23, -381, 67, -381, 11, 11,
	-381, 11, 11, -381, -381, 11, -133, -133, -133, -381,
	-381, -86, -159, -157, 97, -90, -381, -381, -381, 69,
	69, -381, -381, -381, -381, -168, 457, -168, -381, -381,
	-381, -381, -381, -168, -168, -168, -168, -381, -381, -381,
	-381, -381, -381, -381, -381, -381, -381, -381, -381, -188,
	112, -118, 29, 69, -113, -115, -114, -116, 56, 60,
	62, 57, 58, 59, 413, 63, -221, -93, -104, 47,
	-380, -123, 112, -125, 23, -244, 64, 194, 65, -380,
	-380, -188, 67, -93, -93, -121, -242, 124, -200, -203,
	428, 425, 431, 72, 74, 177, -182, -305, -302, 69,
	112, 632, 403, 492, 420, 28, 375, 493, 132, 81,
	494, 234, 36, 190, 496, 432, 332, 497, 498, 200,
	499, 500, 501, 293, 502, 343, 503, 504, 505, 506,
	320, 5, -290, 68, 72, -296, -231, 45, -291, -293,
	-291, -291, -296, 72, -296, 45, 83, 91, -266, -268,
	133, -263, -264, -280, -283, -261, 23, 635, 408, 375,
	28, 66, 403, 196, 45, 44, 199, 81, -277, 407,
	75, 75, 468, -259, -259, -259, 380, -259, -284, 74,
	-284, 75, -278, 75, 70, 66, -234, -177, -118, -51,
	8, 9, 10, -234, -333, -334, -335, -234, 110, 245,
	246, -234, -361, 317, -356, 285, 294, 90, 16, 523,
	193, 193, -118, -348, -126, 12, 72, 72, -207, -210,
	-133, -351, 231, 232, -188, 189, -347, 193, 177, 177,
	-374, 193, 308, -350, -234, 11, 11, 305, 11, -350,
	341, -183, -235, -297, 72, 133, 72, 133, 74, 69,
	-222, -291, -330, -289, -290, -329, 197, 204, -222, 204,
	201, -291, 205, 196, 197, -219, -291, 193, 23, -222,
	-222, -297, -222, 32, 32, 112, 69, 74, 74, 53,
	-118, -85, -178, 124, -235, -87, -84, 90, -133, -89,
	124, -243, -381, -381, -381, -381, -381, -381, -248, 133,
	372, 215, 370, 363, 390, 377, 405, 368, 406, -245,
	-248, -245, -133, -133, -133, -133, -133, 11, 11, 11,
	520, -163, 99, -90, 96, -133, -133, -234, -173, -380,
	-168, -168, -168, -168, -168, -169, -168, -169, -169, -169,
	-169, -169, -169, -169, -169, -169, -169, -169, -131, 29,
	47, -380, -9, -380, -193, -197, -155, -231, -233, 216,
	301, 220, -98, -100, -100, -98, -100, 56, 56, 56,
	61, 56, 61, 61, 56, 56, -114, -244, -381, -381,
	-151, 239, -380, 33, -244, -125, 190, 190, 190, -87,
	-133, -126, -93, -126, -126, 177, 425, 429, 430, -302,
	16, -297, -297, -297, -297, 420, 375, 132, 29, -297,
	-297, -297, -297, -297, 495, 495, -297, -297, -297, -297,
	-297, -297, -297, -297, -297, -297, -297, 344, -297, -297,
	-297, -297, -303, -378, 74, 75, 81, 323, 293, 72,
	-230, -228, -297, -314, -313, -234, -231, 196, -320, 44,
	-320, -296, -296, -296, -296, 68, 83, -380, 636, 75,
	29, -132, 123, -128, 433, 439, 440, 434, -380, 84,
	85, 9, 45, 45, 45, 74, 70, 70, 70, -259,
	70, 69, 70, 69, 70, 69, -129, 583, 91, -118,
	-179, 23, 66, 70, 69, -249, -234, -234, -234, -364,
	523, 290, -362, -360, 296, 297, 298, 299, 300, -351,
	295, -358, 292, 74, 72, -118, -348, -90, -135, -265,
	-266, -118, -350, 124, 124, -234, 193, -350, 305, -376,
	523, -350, -350, 11, -350, 74, 72, 133, -57, 68,
	-285, 72, -230, -296, -215, 196, 72, 72, 72, -231,
	-230, -232, -233, 72, -231, -230, -232, -233, -234, 45,
	45, 72, -118, -234, -285, 72, -90, -234, -234, -234,
	-191, 69, -88, -381, -133, 177, -169, -169, -169, -169,
	-169, -381, -260, -260, -260, -279, -260, 356, -260, 356,
	-381, -381, -381, 19, 19, 19, 19, -381, -133, -133,
	-133, -380, -82, 454, -90, 69, 69, -239, 72, -192,
	66, -193, -150, -153, -152, -380, -9, -381, -184, 6,
	523, -189, -234, -126, 69, 100, 100, 100, 100, -108,
	-107, 66, 67, -109, 66, -107, 56, 56, 56, -187,
	68, 69, -152, -380, -189, -133, -125, -380, -380, -380,
	-381, 69, -163, -126, -306, -307, 113, 514, -308, 554,
	-303, -303, -303, -245, -297, 29, -297, -297, 75, -378,
	74, 74, 74, -297, -297, 75, 74, -378, 74, 206,
	209, 211, -303, -303, -303, 75, 74, -304, 28, 510,
	366, 511, 512, 513, 74, 28, 75, 28, 75, -303,
	507, -303, 70, 69, -260, -260, 45, -293, -186, -234,
	-133, 23, 72, 133, -132, -383, -380, -383, -380, -383,
	-380, -380, -133, -139, 433, 443, 442, 441, 439, 440,
	436, 438, 437, 455, 456, 74, 75, 75, 583, 68,
	-9, -177, -118, -336, -337, -338, 81, 522, 91, 247,
	248, 206, 249, 250, 251, -335, -249, -249, -249, -367,
	-368, -366, 293, 315, 316, 301, -365, -363, 310, 311,
	312, 313, 90, 74, 74, 74, -359, 284, 90, 293,
	16, 23, -210, -339, -208, -376, -350, -376, 287, -350,
	-285, -165, 209, 210, -249, -249, -238, -293, 45, 72,
	-220, 193, 23, 193, -165, -285, 29, 182, 87, -95,
	11, -178, -178, 124, -265, 72, -133, -133, -133, -133,
	-381, -381, -381, -133, -381, 74, -133, -133, -149, 112,
	27, -192, 69, -381, -381, 47, -381, -381, 69, -163,
	-197, -90, -90, -90, -90, -90, 68, -90, -186, 239,
	-381, -125, -221, -186, -186, -186, 74, -181, -309, 516,
	-380, 415, -380, 415, 515, 45, -245, -297, -378, -245,
	74, 74, 508, 509, -316, -315, 67, 200, 81, -313,
	-180, -180, -296, -296, 70, 69, -381, -380, -86, -86,
	-86, -381, -86, -381, 70, 70, -314, -177, -179, 19,
	-178, -338, 74, 251, 247, 251, 251, 251, 251, 252,
	-355, 81, 291, -366, 302, 588, 286, 317, 75, 75,
	111, 30, 31, -363, 75, 75, 75, 75, -360, 16,
	523, -358, 292, 74, 74, -340, 38, -342, 39, -375,
	23, -376, -375, 305, 70, 72, -250, -250, 68, -296,
	-296, 72, -234, -165, 28, 28, -380, -126, 489, -93,
	-88, -381, -381, -381, -381, -81, 110, 523, -381, -381,
	-163, 16, 45, -153, -150, 47, -9, -380, -234, -181,
	-186, 70, -152, -123, -244, -381, -381, -381, 415, -310,
	517, 75, -378, -380, -378, -380, -380, -380, 254, -245,
	-315, -378, -297, 74, 207, -234, -275, 638, 637, -133,
	-381, -381, -381, -381, 70, -9, 238, -179, 36, 36,
	243, 244, 74, 74, 28, 303, 176, 28, 75, 176,
	460, 292, 74, 72, 293, -262, 194, -343, 43, -341,
	-282, 42, 16, -348, -375, -314, -238, 68, -133, -322,
	-323, 112, -160, 13, -178, -381, 521, 63, 524, -174,
	114, 113, -147, 9, -150, -9, 70, -125, -380, -380,
	16, -381, -186, -381, -186, -132, 72, -186, 100, 75,
	-118, -381, -317, -316, -177, 239, -22, -3, -11, -12,
	-13, -14, -16, -52, -17, -18, -23, -24, -19, -59,
	-60, -68, -66, -67, -63, -62, -27, -25, -28, -20,
	-29, -30, -31, -35, -36, -26, -37, 94, 195, 273,
	342, 75, 28, 75, 28, 306, 293, 23, -187, 75,
	-342, 16, -344, 40, 41, 74, 523, 70, 68, -314,
	-381, 69, -234, -161, 14, 16, 53, 522, 525, -381,
	-175, 93, -176, 111, 460, -137, 75, 176, -175, -193,
	-381, -300, -287, -235, -322, -307, -381, -381, -381, -381,
	-381, 75, 68, -275, -166, 241, 242, -177, -90, -90,
	72, -48, -240, 276, 277, 278, -235, -38, -22, 304,
	304, 74, 38, 114, 74, 16, 16, 285, -317, -314,
	70, -323, 47, -171, 458, -162, -90, -148, -92, -90,
	53, -176, 116, 117, 239, 116, 117, -132, -381, 69,
	-249, -381, -311, 518, -380, -186, -177, 72, 72, -39,
	-40, 95, 96, 274, 275, 279, -249, 69, 641, 74,
	74, 28, 290, 21, -351, 70, -317, 223, -170, -172,
	-234, 69, 523, 90, -234, -381, -287, -251, 491, 24,
	75, -186, 70, -179, 99, 97, -40, -90, -38, 19,
	19, 19, -265, -235, 99, -22, 307, -317, 224, 69,
	23, -92, 524, -176, 23, -244, 74, 491, -381, -326,
	-327, 66, -15, -21, -14, -11, -12, -13, 342, 523,
	94, -38, 96, 641, -49, 75, -9, -47, -46, 75,
	-49, 281, 91, 282, 72, -267, -351, -380, -172, -173,
	525, -244, -252, 74, -327, 66, -326, 66, 10, 9,
	-177, -38, -96, 641, -38, 99, 97, -41, -42, 98,
	-22, 69, 280, 28, -133, 221, -386, 83, 28, 333,
	-325, 208, 203, 206, 29, -325, 641, 99, 641, 195,
	-38, 99, 97, -42, -90, -46, -133, -381, -381, 66,
	-133, 66, 202, 28, 83, 99, 94, 641, 195, -38,
	96, 535, 66, 535, 99, 641, -38, 535, 195, 99,
	641, 195,
}

var yyDef = [...]int{
	-2, -2, 1, 3, 4, 5, 6, 7, 8, 9,
	10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 1288, 867, 867, 0, 867,
	969, -2, 710, 711, 0, 0, 0, 0, -2, 832,
	833, 836, 833, 833, 862, 864, 0, 348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 566, -2, 0,
	1364, 0, 865, 854, 855, 41, 0, 0, 2230, 2,
	1296, 0, 876, 869, 0, 867, 867, 867, 68, 69,
	0, 100, 0, 0, 0, 970, 0, 0, 0, 1362,
	1362, 252, 1362, 1362, 0, 1378, 250, 0, 1359, 1374,
	1375, 1376, 0, 0, 0, 1360, 0, 1360, 1360, 1360,
	1360, 1360, 1360, 1360, 0, 778, 1003, 1005, 1006, 1007,
	1387, 1388, 2225, 2226, 2227, 2228, 2229, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 1967, 1968, 1969, 1970,
	1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980,
	1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990,
	1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020,
	2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030,
	2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040,
	2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050,
	2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070,
	2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080,
	2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090,
	2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100,
	2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190,
	2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 0,
	0, 0, 823, 0, 789, 790, 791, 0, 793, 0,
	0, 0, 0, 0, 803, 806, 810, 0, 1296, 1296,
	587, 588, 589, 828, 829, 817, 830, 835, 834, 842,
	842, 0, 834, 57, 0, 0, 950, 327, 329, 0,
	349, 0, 352, 355, 1393, 848, 0, 0, 1418, 1419,
	0, 0, 0, 0, 0, 2124, 195, 266, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 0, 197, 197,
	197, 2133, 197, 0, 197, 197, 197, 197, 197, 265,
	255, 256, 257, 0, 0, 0, 2124, 0, 567, 564,
	565, 58, 0, 46, 59, 1312, 971, 972, 973, -2,
	0, 1365, 837, 0, 871, 0, 39, 0, 1302, 0,
	0, 879, 877, 878, 868, 0, 890, 920, 0, 1017,
	1852, 1023, -2, -2, -2, 1765, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1710, 0, 0, 0, 0, 0,
	1807, 1096, 1097, 1098, 1099, 1100, 1101, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, -2, -2, -2, 1255, 1256, 0,
	2225, 2226, 2227, 2228, 2229, 1329, 0, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1833,
	1896, 1784, 1901, 1729, 0, 1721, 1798, 1925, 1926, 0,
	1841, 2206, 0, -2, 1950, 1889, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 2216, 2217, 1791, 1739, 1849,
	1890, 1730, 1751, 1770, 1819, 1820, 1822, 1854, 1855, 1873,
	1882, 1900, 1711, 1712, 1713, 1814, 1815, 1922, 1921, 1920,
	1923, 1956, 1954, 1957, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1714, 1715, 1716, 1717, 1718,
	1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731, 1732,
	1733, 1738, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1766, 1767, 1769, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1785, 1786, 1787, 1788, 1789, 1790, 1792, 1793, 1794,
	1795, 1796, 1797, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1808, 1809, 1810, 1811, 1812, 1813, 1816, 1817, 1818,
	1821, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831,
	1832, 1834, 1835, 1838, 1839, 1840, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1850, 1851, 1853, 1857, 1858, 1859, 1860,
	1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870,
	1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881,
	1883, 1884, 1885, 1886, 1887, 1888, 1891, 1892, 1893, 1894,
	1895, 1897, 1898, 1899, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1924, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1938, 1939, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1951, 1952, 1953, 1955, 1958, 1959, 1960, 1961,
	1962, 1963, 1964, 1965, 1966, 1364, 1364, 0, 85, 2183,
	0, 1336, -2, -2, 1338, 0, 0, 0, -2, -2,
	-2, -2, 1722, -2, 1255, 0, 0, 0, 0, 1710,
	1711, 1712, 1713, 1719, 1721, 1729, 1730, 1734, 1735, 1736,
	1737, 1739, 1748, 1751, 1765, 1768, 1770, 1784, 1791, 1798,
	1807, 1814, 1815, 1819, 1820, 1822, 1833, 1836, 1837, 1841,
	1849, 1852, 1854, 1855, 1856, 1873, 1882, 1889, 1890, 1896,
	1900, 1901, 1920, 1921, 1922, 1923, 1925, 1926, 1937, 1947,
	1948, 1949, 1950, 1954, 1956, 1957, 101, 1288, 867, 102,
	0, 393, 394, 0, 0, 0, 0, 0, 0, 612,
	1381, 1382, 2219, 2220, 2221, 2222, 2223, 2224, 0, 0,
	0, 250, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 1362, 252, 0, 0, 759, 0, 760, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 779, 79, 780, 823, 782, 0, 0, 1362,
	1362, 0, 0, 0, 0, 0, 614, 615, 823, 823,
	823, 823, 820, 0, 820, 800, 820, 818, 819, 0,
	805, 0, 0, 0, 813, 814, 0, -2, 840, -2,
	849, 0, 0, 856, 858, 859, 860, 861, 857, 0,
	866, 0, 0, 0, 331, 0, 0, 351, 333, 0,
	336, 337, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 347, 0, 354, 0, 1391, 1394, 853, 1409, 1410,
	0, 1420, 1421, 201, 0, 201, 0, 0, 0, 0,
	164, 197, 0, 166, 197, 197, 197, 0, 197, 197,
	173, 174, 197, 176, 177, 178, 179, 180, 197, 182,
	183, 184, 197, 197, 187, 197, 197, 190, 191, 192,
	193, 194, 264, 201, 0, 0, 201, 0, 0, 549,
	0, 0, 0, 0, 554, 555, 556, 557, 0, 0,
	560, 561, -2, 45, 0, 0, 0, -2, 713, -2,
	530, 531, 532, 0, 527, 0, 0, 42, 64, 0,
	872, 873, 63, 2231, 0, 51, 0, 0, 1297, 1300,
	1301, 1289, 1290, 1293, 0, 0, 874, 880, 881, 870,
	0, 891, 0, 0, 0, 0, 921, 0, 924, 925,
	926, 927, 928, 929, 0, 1021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1024, 0, 1038, 0, 0, 0, 0, 0,
	0, 0, 1089, 1090, 1091, 1092, 1093, 1094, 0, 879,
	0, 0, 879, 879, 879, 879, 879, 0, 0, 1064,
	1962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 879, 0, 1247, 0, 0,
	1158, 1167, 0, 1159, 1168, 1160, 1169, 1161, 0, 1162,
	1170, 1163, 1171, 1164, 1165, 1172, 1166, 0, 0, 0,
	1060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 1003, 0, 86, 88, 0, 0, 2183, 1339,
	1340, 522, 1353, 1354, 1355, 0, 1351, 0, 1296, 876,
	629, 0, 395, 411, 499, 426, 427, 428, 489, 430,
	491, 491, 0, 491, 491, 491, 491, 491, 466, 467,
	468, 469, 470, 472, 473, 474, 475, 476, 0, 0,
	449, 489, 489, 489, 453, 479, 480, 481, 482, 483,
	484, 485, 486, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 494, 494, 496, 496, 496, 496, 496,
	411, 411, 411, 411, 0, 0, 0, 611, 0, 1379,
	0, 0, 252, -2, 0, -2, 0, 998, 0, 0,
	1008, 0, 0, 112, 282, 268, 111, 0, 246, 251,
	247, 248, 249, 0, 0, 0, 0, 259, 774, 1361,
	0, 767, 77, 768, 769, 770, 771, 772, 261, 773,
	1004, 1389, 1390, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	0, 781, 824, 0, 826, 0, 0, 950, 786, 787,
	788, 616, 794, 795, 796, 802, 823, 0, 0, 0,
	950, 823, 804, 1052, 807, 1175, 0, 831, 846, 0,
	841, 0, 847, 851, 850, 0, 863, 0, 328, 330,
	332, 350, 0, 0, 353, 356, 0, 0, 0, 0,
	1412, 0, 1414, 1416, 0, 0, 202, 203, 204, 201,
	0, 196, 0, 219, 267, 0, 165, 0, 199, 167,
	168, 169, 197, 171, 172, 175, 181, 185, 186, 188,
	189, 263, 0, 0, 0, 0, 162, 0, 550, 551,
	552, 553, 562, 559, 60, 0, 0, 1314, 1317, 1318,
	1319, 1320, 1321, 1385, 1386, 712, 533, 534, 535, 0,
	577, 577, 577, 0, 838, 839, 0, 37, 0, 1303,
	0, 0, 0, 0, 1292, 1294, 1295, 0, 0, 1277,
	0, 0, 882, 875, 40, 1018, 1019, 1020, 1022, 1039,
	0, 1041, 1043, 922, 923, 892, 0, 1257, 1258, 1259,
	1260, 1261, -2, 1029, 1030, 1054, 1055, 1056, 0, 0,
	0, 0, 1052, 1034, 0, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1189, 1190,
	0, 1266, 0, 1062, 886, 887, 0, 1267, 1086, 1276,
	1087, 1262, 1095, 1060, 1264, 1265, 1263, 0, 0, 0,
	0, 0, 1057, 0, 1328, 0, 0, 0, 0, 1136,
	0, 0, 0, 0, 1070, 1269, 0, 1070, 1269, 0,
	0, 1823, 1935, 1715, 0, 0, 0, 1253, 1250, 0,
	0, 0, 1176, 0, 0, 0, 0, 0, 1061, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 0, 1002, 0, 930, 932,
	933, 934, -2, 0, 938, 939, 1011, 1058, 1387, 0,
	-2, 0, 0, 75, 76, 0, 0, 0, 1337, 0,
	0, 0, 91, 92, 87, 1341, 523, 0, -2, 1348,
	1349, 1257, 0, 1302, 879, 686, 396, 398, 399, 400,
	0, 594, 602, 0, 0, 592, 594, 594, 0, 590,
	591, 403, 502, 500, 501, 429, 0, 454, 0, 455,
	491, 491, 491, 491, 458, 459, 461, 464, 465, 471,
	0, 0, 450, 451, 452, 441, 0, 442, 494, 444,
	0, 445, 446, 447, 448, 404, 405, 406, 407, 608,
	609, 610, 0, 0, 0, 97, 0, 106, 1363, 107,
	0, 284, 285, 0, 222, 0, 253, 254, 114, 0,
	0, 269, 0, 390, 391, 0, 761, 0, 763, 258,
	765, 775, 776, 766, 0, 0, 80, 825, 783, 784,
	785, 1015, 0, 0, 797, 821, 822, 820, 823, 801,
	815, 0, 0, 808, 0, 845, 843, 852, 951, 334,
	335, 357, 83, 0, 1392, 1411, 0, 1415, 1417, 0,
	205, 207, 0, 0, 156, 0, 0, 198, 0, 170,
	0, 0, 0, 0, 0, 558, 0, 61, 0, 1313,
	0, 0, 577, 0, 578, 0, 0, 714, 715, -2,
	752, 1371, 752, 752, 738, 577, 752, 0, 0, 0,
	65, 52, 0, 2020, 55, 0, 1298, 1299, 1291, 0,
	1356, 1357, 1278, 1279, 98, 883, 1040, 1042, 1044, 0,
	1060, 1031, 1052, 1035, 0, 1032, 0, 1026, 0, 1134,
	0, 0, 0, 0, 0, 0, 0, 1065, -2, 1132,
	1133, 1135, 0, 0, 0, 1139, 0, 1142, 0, 0,
	1182, 0, 0, 1183, 1147, 0, 0, 0, 0, 0,
	1153, 1288, 0, 1251, 0, 0, 1156, 1157, 1177, 0,
	0, 1178, 1179, 1180, 1181, 1121, 0, 1122, 0, 0,
	0, 0, 0, 1128, 1129, 1130, 1131, 901, 901, 901,
	901, 901, 901, 901, 901, 901, 901, 901, 901, 0,
	0, 1001, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 943, 0, 945, 0, 1011, 0, 0, 0, 1060,
	0, 1015, 0, 1015, 1015, 82, 0, 1010, 89, 90,
	0, 0, 96, 524, 525, 0, 221, 392, 630, 0,
	0, 577, 577, 577, 577, 0, 0, 577, 577, 577,
	577, 577, 0, 0, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 0, 577, 577, 577, 577,
	0, 577, 397, 0, 595, 0, 0, 594, 594, 594,
	593, 594, 585, 595, 586, 0, 412, 0, 414, 415,
	416, 417, 418, 419, 420, 421, 0, 0, 0, 0,
	0, 0, 517, 0, 544, 546, 0, 0, 425, 503,
	0, 0, 0, 460, 456, 457, 491, 462, 0, 487,
	0, 0, 443, 0, 626, 0, 1380, 99, 0, 0,
	286, 287, 288, 999, 0, 223, 224, 0, 0, 0,
	0, 1009, 124, 0, 283, 0, 0, 0, 0, 0,
	0, 0, 78, 262, 792, 0, 617, 618, 950, 799,
	1053, 809, 811, 812, 518, 0, 1413, 0, 0, 0,
	0, 0, 0, 217, 200, 0, 0, 0, 0, 163,
	0, 1315, 1316, 0, 538, 539, 540, 541, 542, 0,
	0, 594, 0, 739, 740, 0, 753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1372, 1373, 0,
	0, 0, 0, 747, 748, 0, 0, 53, 54, 1304,
	38, 51, 0, 893, 1268, 0, 1033, 0, 1036, 1063,
	888, 0, 1102, 901, 901, 901, 901, 901, 0, 489,
	489, 1236, 489, 496, 1239, 489, 1241, 489, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1248, 1155, 1254, 0, 0, 0, 894, 895, 897,
	1123, 1124, 1125, 1126, 1127, 1106, 902, 1107, 1108, 1110,
	1111, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1322, 0,
	0, 0, 1307, 0, 1015, 1330, 0, 0, 0, 0,
	2219, 2220, 931, 965, 967, 0, 962, 975, 976, 978,
	0, 980, 0, 0, 983, 984, 985, 952, 937, 1059,
	940, 0, 0, 0, 1011, 949, 0, 0, 0, 0,
	0, 1288, 1015, 73, 74, 0, 93, 94, 95, 631,
	698, 0, 0, 0, 0, 577, 0, 577, 577, 0,
	0, 0, 0, 0, 577, 577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 660, 0, 0,
	0, 0, 667, 668, 672, 673, 674, 675, 676, 683,
	684, 685, 0, 0, 596, 489, 489, 0, 600, 592,
	601, 579, 581, 582, 584, 0, 413, 0, 0, 424,
	0, 504, 0, 506, 1175, 1175, 1175, 0, 0, 1027,
	1028, 0, 543, 545, 547, 548, 490, 492, 493, 463,
	477, 0, 478, 0, 497, 0, 613, 627, 0, 0,
	0, 97, 0, 230, 0, 226, 0, 0, 0, 132,
	0, 115, 116, 117, 119, 120, 0, 0, 0, 113,
	0, 271, 0, 274, 275, 762, 764, 1016, 823, 1403,
	519, 1000, 217, 206, 208, 209, 0, 217, 220, 157,
	0, 158, 160, 0, 159, 563, 536, 537, 716, 0,
	749, 0, 0, 1379, 592, 0, -2, 719, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 0,
	745, 0, 721, 0, 749, 0, 742, 0, 0, 56,
	48, 98, 98, 1103, 1037, 0, 1105, 1109, 1104, 1112,
	1117, 1137, 1233, 518, 1237, 1238, 1240, 1242, 1243, 1245,
	1141, 1138, 1140, 0, 0, 0, 0, 1148, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 899, 898, 66,
	0, 1322, 1305, 1324, 1326, 0, 0, 0, 0, -2,
	1694, 0, 956, 1288, 0, 0, 0, 0, 0, 959,
	966, 0, 0, 960, 0, 961, 979, 981, 982, 935,
	0, 0, 941, 0, 0, -2, 948, 0, 0, 0,
	958, 0, 1296, 72, 700, 689, 0, 0, 0, 699,
	632, 633, 634, 635, 0, 577, 0, 0, 639, 640,
	642, 643, 644, 0, 0, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 677, 678,
	679, 680, 681, 682, 661, 662, 663, 664, 665, 666,
	0, 671, 569, 0, 1293, 1293, 594, 594, 0, 954,
	0, 0, 520, 521, 505, 507, 0, 509, 0, 511,
	0, 0, 0, 516, 1175, 1175, 1175, 1175, 1175, 1175,
	1175, 1175, 1175, 0, 0, 488, 0, 0, 628, 0,
	97, 99, 0, 98, 231, 232, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 225, 227, 228, 229, 150,
	133, 134, 0, 0, 0, 0, 125, 126, 0, 0,
	0, 0, 0, 121, 122, 123, 270, 0, 0, 273,
	0, 0, 798, 1405, 1399, 210, 217, 210, 0, 161,
	0, 718, 750, 0, 411, 411, 0, 594, 594, 741,
	0, 1369, 1370, 0, 736, 749, 0, 0, 0, 1015,
	0, 0, 884, 889, 1234, 1235, 0, 0, 0, 0,
	1149, 1150, 1151, 1184, 1154, 1249, 0, 0, 1288, 0,
	0, 67, 0, 1327, -2, 0, 0, 84, 0, 1296,
	1331, 1332, 1333, 1334, 1335, 963, 0, 968, 0, 0,
	1011, 946, 0, 0, 0, 0, 0, 71, 702, 0,
	0, 0, 0, 0, 0, 0, 636, 0, 641, 637,
	645, 646, 669, 670, 568, 572, 0, 577, 0, 597,
	598, 599, 580, 583, 0, 0, 408, 0, 0, 0,
	0, 513, 0, 515, 495, 498, 0, 104, 0, 0,
	99, 233, 234, 235, 236, 238, 239, 0, 0, 0,
	110, 0, 0, 135, 0, 0, 0, 0, 145, 146,
	147, 148, 149, 127, 128, 129, 130, 131, 118, 0,
	0, 272, 0, 277, 278, 1366, 1407, -2, 0, 153,
	0, 210, 155, 218, 717, 751, 401, 402, 0, 1379,
	0, 720, 735, 737, 0, 744, 0, 1280, 49, 50,
	98, 1143, 1145, 1144, 1146, 0, 0, 0, 1173, 1174,
	903, 0, 0, 1325, 1306, 0, 1310, 0, 957, 70,
	0, 953, 942, 944, 1011, 1012, 1013, 1014, 0, 687,
	0, 701, 0, 0, 0, 0, 0, 0, 0, 638,
	573, 574, 0, 576, 0, 955, 422, 409, 410, 0,
	508, 510, 512, 514, 570, 97, 0, 57, 240, 241,
	242, 243, 151, 152, 136, 137, 0, 139, 140, 0,
	0, 0, 280, 0, 276, 952, 0, 1399, 0, 1401,
	0, 1398, 0, 211, 154, 0, 0, 0, 743, 0,
	755, 0, 1285, 0, 885, 1152, 0, 0, 0, 0,
	0, 0, 900, 0, 1309, 0, 964, 947, 0, 0,
	698, 690, 0, 692, 0, 0, 0, 0, 0, 575,
	0, 408, 103, 571, 105, 289, 97, 360, 361, 362,
	363, 364, 365, 366, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 0, 0,
	57, 0, 141, 0, 143, 144, 279, 0, 36, 0,
	1406, 0, 1404, 0, 0, 1400, 0, 570, 0, 0,
	754, 0, 0, 913, 0, 0, 1185, 0, 1188, 896,
	904, 0, 907, 0, 0, 0, 918, 0, 905, 1323,
	-2, 0, 988, 0, 0, 704, 691, 693, 694, 695,
	696, 0, 0, 423, 97, 0, 0, 109, 0, 0,
	1381, 0, 0, -2, -2, -2, 1383, 0, 358, 138,
	142, 281, 1367, 1368, 1408, 0, 0, 0, 722, 0,
	570, 756, 0, 47, 0, 1286, 1287, 1281, 1282, 1284,
	1186, 0, 908, 909, 910, 911, 912, 0, 0, 0,
	0, 688, 703, 0, 0, 0, 99, 290, 291, 0,
	300, 0, 57, 0, 0, 0, 518, 0, 57, 1402,
	1396, 212, 213, 214, 216, 570, 746, 0, 914, 915,
	0, 0, 0, 0, 919, 0, 989, 990, 0, 0,
	705, 0, 603, 57, 0, 57, 301, 0, 0, 0,
	0, 0, 522, 1384, 244, 359, 0, 723, 0, 0,
	0, 1283, 0, 906, 0, 987, 993, 0, 697, 604,
	605, 0, 97, 292, 293, 294, 295, 296, 57, 0,
	298, 0, 57, 57, 310, 311, 312, 57, 319, 321,
	322, 323, 0, 325, 326, 314, 215, 0, 916, 917,
	1187, 986, 994, 992, 606, 0, 607, 0, 0, 0,
	108, 0, 58, 57, 0, 0, 57, 0, 307, 0,
	313, 0, 324, 0, 0, 1842, 991, 0, 0, 0,
	619, 621, 622, 0, 0, 620, 57, 0, -2, 303,
	0, 0, 57, 308, 0, 320, 315, 757, 758, 0,
	0, 0, 623, 624, 625, 297, 299, 57, 305, 0,
	57, 995, 0, 997, 0, 57, 0, 996, 304, 0,
	-2, 306,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 92, 3, 3, 3, 127, 119, 3,
	68, 70, 124, 122, 69, 123, 177, 125, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 641,
	101, 100, 102, 3, 71, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 118, 3, 130,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 82, 83, 84, 85,
	86, 87, 88, 89, 90, 91, 93, 94, 95, 96,
	97, 98, 99, 103, 104, 105, 106, 107, 108, 109,
	110, 111, 112, 113, 114, 115, 116, 117, 120, 121,
	126, 128, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 274, 275,
}

var yyTok3 = [...]int{
	57600, 276, 57601, 277, 57602, 278, 57603, 279, 57604, 280,
	57605, 281, 57606, 282, 57607, 283, 57608, 284, 57609, 285,
	57610, 286, 57611, 287, 57612, 288, 57613, 289, 57614, 290,
	57615, 291, 57616, 292, 57617, 293, 57618, 294, 57619, 295,
	57620, 296, 57621, 297, 57622, 298, 57623, 299, 57624, 300,
	57625, 301, 57626, 302, 57627, 303, 57628, 304, 57629, 305,
	57630, 306, 57631, 307, 57632, 308, 57633, 309, 57634, 310,
	57635, 311, 57636, 312, 57637, 313, 57638, 314, 57639, 315,
	57640, 316, 57641, 317, 57642, 318, 57643, 319, 57644, 320,
	57645, 321, 57646, 322, 57647, 323, 57648, 324, 57649, 325,
	57650, 326, 57651, 327, 57652, 328, 57653, 329, 57654, 330,
	57655, 331, 57656, 332, 57657, 333, 57658, 334, 57659, 335,
	57660, 336, 57661, 337, 57662, 338, 57663, 339, 57664, 340,
	57665, 341, 57666, 342, 57667, 343, 57668, 344, 57669, 345,
	57670, 346, 57671, 347, 57672, 348, 57673, 349, 57674, 350,
	57675, 351, 57676, 352, 57677, 353, 57678, 354, 57679, 355,
	57680, 356, 57681, 357, 57682, 358, 57683, 359, 57684, 360,
	57685, 361, 57686, 362, 57687, 363, 57688, 364, 57689, 365,
	57690, 366, 57691, 367, 57692, 368, 57693, 369, 57694, 370,
	57695, 371, 57696, 372, 57697, 373, 57698, 374, 57699, 375,
	57700, 376, 57701, 377, 57702, 378, 57703, 379, 57704, 380,
	57705, 381, 57706, 382, 57707, 383, 57708, 384, 57709, 385,
	57710, 386, 57711, 387, 57712, 388, 57713, 389, 57714, 390,
	57715, 391, 57716, 392, 57717, 393, 57718, 394, 57719, 395,
	57720, 396, 57721, 397, 57722, 398, 57723, 399, 57724, 400,
	57725, 401, 57726, 402, 57727, 403, 57728, 404, 57729, 405,
	57730, 406, 57731, 407, 57732, 408, 57733, 409, 57734, 410,
	57735, 411, 57736, 412, 57737, 413, 57738, 414, 57739, 415,
	57740, 416, 57741, 417, 57742, 418, 57743, 419, 57744, 420,
	57745, 421, 57746, 422, 57747, 423, 57748, 424, 57749, 425,
	57750, 426, 57751, 427, 57752, 428, 57753, 429, 57754, 430,
	57755, 431, 57756, 432, 57757, 433, 57758, 434, 57759, 435,
	57760, 436, 57761, 437, 57762, 438, 57763, 439, 57764, 440,
	57765, 441, 57766, 442, 57767, 443, 57768, 444, 57769, 445,
	57770, 446, 57771, 447, 57772, 448, 57773, 449, 57774, 450,
	57775, 451, 57776, 452, 57777, 453, 57778, 454, 57779, 455,
	57780, 456, 57781, 457, 57782, 458, 57783, 459, 57784, 460,
	57785, 461, 57786, 462, 57787, 463, 57788, 464, 57789, 465,
	57790, 466, 57791, 467, 57792, 468, 57793, 469, 57794, 470,
	57795, 471, 57796, 472, 57797, 473, 57798, 474, 57799, 475,
	57800, 476, 57801, 477, 57802, 478, 57803, 479, 57804, 480,
	57805, 481, 57806, 482, 57807, 483, 57808, 484, 57809, 485,
	57810, 486, 57811, 487, 57812, 488, 57813, 489, 57814, 490,
	57815, 491, 57816, 492, 57817, 493, 57818, 494, 57819, 495,
	57820, 496, 57821, 497, 57822, 498, 57823, 499, 57824, 500,
	57825, 501, 57826, 502, 57827, 503, 57828, 504, 57829, 505,
	57830, 506, 57831, 507, 57832, 508, 57833, 509, 57834, 510,
	57835, 511, 57836, 512, 57837, 513, 57838, 514, 57839, 515,
	57840, 516, 57841, 517, 57842, 518, 57843, 519, 57844, 520,
	57845, 521, 57846, 522, 57847, 523, 57848, 524, 57849, 525,
	57850, 526, 57851, 527, 57852, 528, 57853, 529, 57854, 530,
	57855, 531, 57856, 532, 57857, 533, 57858, 534, 57859, 535,
	57860, 536, 57861, 537, 57862, 538, 57863, 539, 57864, 540,
	57865, 541, 57866, 542, 57867, 543, 57868, 544, 57869, 545,
	57870, 546, 57871, 547, 57872, 548, 57873, 549, 57874, 550,
	57875, 551, 57876, 552, 57877, 553, 57878, 554, 57879, 555,
	57880, 556, 57881, 557, 57882, 558, 57883, 559, 57884, 560,
	57885, 561, 57886, 562, 57887, 563, 57888, 564, 57889, 565,
	57890, 566, 57891, 567, 57892, 568, 57893, 569, 57894, 570,
	57895, 571, 57896, 572, 57897, 573, 57898, 574, 57899, 575,
	57900, 576, 57901, 577, 57902, 578, 57903, 579, 57904, 580,
	57905, 581, 57906, 582, 57907, 583, 57908, 584, 57909, 585,
	57910, 586, 57911, 587, 57912, 588, 57913, 589, 57914, 590,
	57915, 591, 57916, 592, 57917, 593, 57918, 594, 57919, 595,
	57920, 596, 57921, 597, 57922, 598, 57923, 599, 57924, 600,
	57925, 601, 57926, 602, 57927, 603, 57928, 604, 57929, 605,
	57930, 606, 57931, 607, 57932, 608, 57933, 609, 57934, 610,
	57935, 611, 57936, 612, 57937, 613, 57938, 614, 57939, 615,
	57940, 616, 57941, 617, 57942, 618, 57943, 619, 57944, 620,
	57945, 621, 57946, 622, 57947, 623, 57948, 624, 57949, 625,
	57950, 626, 57951, 627, 57952, 628, 57953, 629, 57954, 630,
	57955, 631, 57956, 632, 57957, 633, 57958, 634, 57959, 635,
	57960, 636, 57961, 637, 57962, 638, 57963, 639, 57964, 640,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:555
		{
			setParseTree(yylex, yyDollar[1].statement)
			statementSeen(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:562
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:597
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Load{Local: yyDollar[3].boolVal, Infile: yyDollar[4].str, Table: yyDollar[5].tableName, Partition: yyDollar[6].partitions, Charset: yyDollar[7].str, Fields: yyDollar[8].Fields, Lines: yyDollar[9].Lines, IgnoreNum: yyDollar[10].sqlVal, Columns: yyDollar[11].columns}
		}
	case 37:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:609
		{
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			if err := yyDollar[1].selStmt.SetInto(yyDollar[5].into); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 38:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:620
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:636
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:647
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt}
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:653
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:657
		{
			yyDollar[3].selStmt.SetWith(yyDollar[2].with)
			yyVAL.selStmt = yyDollar[3].selStmt
		}
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyVAL.with = &With{Ctes: yyDollar[2].tableExprs, Recursive: true}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.with = &With{Ctes: yyDollar[1].tableExprs, Recursive: false}
		}
	case 47:
		yyDollar = yyS[yypt-13 : yypt+1]
//line sql.y:673
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[6].str, SelectExprs: yyDollar[7].selectExprs, From: yyDollar[9].tableExprs, Where: NewWhere(WhereStr, yyDollar[10].expr), GroupBy: GroupBy(yyDollar[11].exprs), Having: NewWhere(HavingStr, yyDollar[12].expr), Window: yyDollar[13].window, Into: yyDollar[8].into}
			if yyDollar[5].byt == 1 {
				yyVAL.selStmt.(*Select).CalcFoundRows = true
			}
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:681
		{
			yyVAL.tableExprs = nil
		}
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.tableExprs = nil
		}
	case 50:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:689
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:698
		{
			yyVAL.into = nil
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:702
		{
			yyVAL.into = &Into{Variables: yyDollar[2].variables}
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.into = &Into{Outfile: string(yyDollar[3].bytes)}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.into = &Into{Dumpfile: string(yyDollar[3].bytes)}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:716
		{
			yyVAL.variables = Variables{yyDollar[1].colIdent}
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:720
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].colIdent)
		}
	case 57:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:725
		{
			yyVAL.with = nil
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			yyVAL.with = yyDollar[2].with
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:739
		{
			yyVAL.tableExprs = append(yyDollar[1].tableExprs, yyDollar[3].tableExpr)
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:745
		{
			yyVAL.tableExpr = &CommonTableExpr{&AliasedTableExpr{Expr: yyDollar[4].simpleTableExpr, As: yyDollar[1].tableIdent}, yyDollar[2].columns}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:759
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:765
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:773
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:779
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[7].ins
			ins.Action = yyDollar[2].str
			ins.Comments = yyDollar[3].bytes2
			ins.Ignore = yyDollar[4].str
			ins.Table = yyDollar[5].tableName
			ins.Partitions = yyDollar[6].partitions
			ins.OnDup = OnDup(yyDollar[8].assignExprs)
			ins.With = yyDollar[1].with
			yyVAL.statement = ins
		}
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:792
		{
			cols := make(Columns, 0, len(yyDollar[8].assignExprs))
			vals := make(ValTuple, 0, len(yyDollar[9].assignExprs))
			for _, updateList := range yyDollar[8].assignExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[2].str, Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, Table: yyDollar[5].tableName, Partitions: yyDollar[6].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[9].assignExprs), With: yyDollar[1].with}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
			yyVAL.str = InsertStr
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.str = ReplaceStr
		}
	case 70:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:814
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[3].bytes2), Ignore: yyDollar[4].str, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].assignExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit, With: yyDollar[1].with}
		}
	case 71:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:820
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit, With: yyDollar[1].with}
		}
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:824
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), With: yyDollar[1].with}
		}
	case 73:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:828
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 74:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:832
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[3].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), With: yyDollar[1].with}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:837
		{
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:838
		{
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:842
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:846
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:852
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:866
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:871
		{
			yyVAL.partitions = nil
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:875
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setVarExprs}
		}
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			for i := 0; i < len(yyDollar[4].setVarExprs); i++ {
				yyDollar[4].setVarExprs[i].Scope = SetScope_None
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setVarExprs}
		}
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:892
		{
			for i := 0; i < len(yyDollar[5].setVarExprs); i++ {
				yyDollar[5].setVarExprs[i].Scope = yyDollar[3].setScope
			}
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[5].setVarExprs}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:905
		{
			yyVAL.setVarExprs = append(yyVAL.setVarExprs, yyDollar[3].setVarExpr)
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:915
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:933
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:942
		{
			yyVAL.int = yyPosition(yylex)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:947
		{
			yyVAL.int = yyOldPosition(yylex)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:952
		{
			yyVAL.boolean = yySpecialCommentMode(yylex)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:958
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			if len(yyDollar[1].ddl.TableSpec.Constraints) > 0 {
				yyDollar[1].ddl.ConstraintAction = AddStr
			}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:967
		{
			yyDollar[1].ddl.OptSelect = &OptSelect{Select: yyDollar[3].selStmt}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:972
		{
			yyDollar[1].ddl.OptLike = &OptLike{LikeTable: yyDollar[3].tableName}
			yyVAL.statement = yyDollar[1].ddl
		}
	case 103:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:977
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, IndexSpec: &IndexSpec{Action: CreateStr, ToName: yyDollar[4].colIdent, Using: yyDollar[5].colIdent, Type: yyDollar[2].str, Columns: yyDollar[9].indexColumns, Options: yyDollar[11].indexOptions}}
		}
	case 104:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:981
		{
			yyDollar[2].viewSpec.ViewName = yyDollar[4].tableName.ToViewName()
			yyDollar[2].viewSpec.ViewExpr = yyDollar[8].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[2].viewSpec, SpecialCommentMode: yyDollar[7].boolean, SubStatementPositionStart: yyDollar[6].int, SubStatementPositionEnd: yyDollar[9].int - 1}
		}
	case 105:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:987
		{
			yyDollar[4].viewSpec.ViewName = yyDollar[6].tableName.ToViewName()
			yyDollar[4].viewSpec.ViewExpr = yyDollar[10].selStmt
			yyVAL.statement = &DDL{Action: CreateStr, ViewSpec: yyDollar[4].viewSpec, SpecialCommentMode: yyDollar[9].boolean, SubStatementPositionStart: yyDollar[8].int, SubStatementPositionEnd: yyDollar[11].int - 1, OrReplace: true}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:993
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1001
		{
			var ne bool
			if yyDollar[3].byt != 0 {
				ne = true
			}
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes), IfNotExists: ne, CharsetCollate: yyDollar[5].charsetCollates}
		}
	case 108:
		yyDollar = yyS[yypt-16 : yypt+1]
//line sql.y:1009
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[8].tableName, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName, Definer: yyDollar[2].str, Time: yyDollar[5].str, Event: yyDollar[6].str, Order: yyDollar[12].triggerOrder, Body: yyDollar[15].statement}, SpecialCommentMode: yyDollar[14].boolean, SubStatementPositionStart: yyDollar[13].int, SubStatementPositionEnd: yyDollar[16].int - 1}
		}
	case 109:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1013
		{
			yyVAL.statement = &DDL{Action: CreateStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName, Definer: yyDollar[2].str, Params: yyDollar[6].procedureParams, Characteristics: yyDollar[8].characteristics, Body: yyDollar[11].statement}, SpecialCommentMode: yyDollar[10].boolean, SubStatementPositionStart: yyDollar[9].int, SubStatementPositionEnd: yyDollar[12].int - 1}
		}
	case 110:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1017
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			tlsOptions, err := NewTLSOptions(yyDollar[6].tlsOptionItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			accountLimits, err := NewAccountLimits(yyDollar[7].accountLimitItems)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			passwordOptions, locked := NewPasswordOptionsWithLock(yyDollar[8].passLockItems)
			yyVAL.statement = &CreateUser{IfNotExists: notExists, Users: yyDollar[4].accountsWithAuth, DefaultRoles: yyDollar[5].accountNames, TLSOptions: tlsOptions, AccountLimits: accountLimits, PasswordOptions: passwordOptions, Locked: locked, Attribute: yyDollar[9].str}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1036
		{
			var notExists bool
			if yyDollar[3].byt != 0 {
				notExists = true
			}
			yyVAL.statement = &CreateRole{IfNotExists: notExists, Roles: yyDollar[4].accountNames}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1045
		{
			yyVAL.accountNames = nil
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1049
		{
			yyVAL.accountNames = yyDollar[3].accountNames
		}
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1054
		{
			yyVAL.tlsOptionItems = nil
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.tlsOptionItems = nil
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.tlsOptionItems = yyDollar[2].tlsOptionItems
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1068
		{
			yyVAL.tlsOptionItems = []TLSOptionItem{yyDollar[1].tlsOptionItem}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.tlsOptionItems = append(yyDollar[1].tlsOptionItems, yyDollar[3].tlsOptionItem)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_SSL, ItemData: ""}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1082
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_X509, ItemData: ""}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1086
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Cipher, ItemData: string(yyDollar[2].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Issuer, ItemData: string(yyDollar[2].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1094
		{
			yyVAL.tlsOptionItem = TLSOptionItem{TLSOptionItemType: TLSOptionItemType_Subject, ItemData: string(yyDollar[2].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1099
		{
			yyVAL.accountLimitItems = nil
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yyVAL.accountLimitItems = yyDollar[2].accountLimitItems
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.accountLimitItems = []AccountLimitItem{yyDollar[1].accountLimitItem}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.accountLimitItems = append(yyDollar[1].accountLimitItems, yyDollar[2].accountLimitItem)
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Queries_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1123
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Updates_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1127
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections_PH, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.accountLimitItem = AccountLimitItem{AccountLimitItemType: AccountLimitItemType_Connections, Count: NewIntVal(yyDollar[2].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1136
		{
			yyVAL.passLockItems = nil
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.passLockItems = yyDollar[1].passLockItems
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.passLockItems = []PassLockItem{yyDollar[1].passLockItem}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.passLockItems = append(yyDollar[1].passLockItems, yyDollar[2].passLockItem)
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireDefault, Value: nil}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireNever, Value: nil}
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1164
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassExpireInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: nil}
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassHistory, Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1176
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: nil}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1180
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReuseInterval, Value: NewIntVal(yyDollar[4].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1184
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentDefault, Value: nil}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1188
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassReqCurrentOptional, Value: nil}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassFailedLogins, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1196
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: NewIntVal(yyDollar[2].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_PassLockTime, Value: nil}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1204
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountLock, Value: nil}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.passLockItem = PassLockItem{PassLockItemType: PassLockItemType_AccountUnlock, Value: nil}
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1213
		{
			yyVAL.str = ""
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1217
		{
			comment := string(yyDollar[2].bytes)
			yyVAL.str = `{"comment": "` + escapeDoubleQuotes(comment) + `"}`
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1222
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1228
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 154:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1233
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &GrantPrivilege{Privileges: allPriv, ObjectType: yyDollar[5].grantObjectType, PrivilegeLevel: yyDollar[6].privilegeLevel, To: yyDollar[8].accountNames, WithGrantOption: yyDollar[9].boolean, As: yyDollar[10].grantAssumption}
		}
	case 155:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1238
		{
			yyVAL.statement = &GrantPrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, To: yyDollar[7].accountNames, WithGrantOption: yyDollar[8].boolean, As: yyDollar[9].grantAssumption}
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1242
		{
			yyVAL.statement = &GrantRole{Roles: yyDollar[2].accountNames, To: yyDollar[4].accountNames, WithAdminOption: yyDollar[5].boolean}
		}
	case 157:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1246
		{
			yyVAL.statement = &GrantProxy{On: yyDollar[4].accountName, To: yyDollar[6].accountNames, WithGrantOption: yyDollar[7].boolean}
		}
	case 158:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1252
		{
			allPriv := []Privilege{Privilege{Type: PrivilegeType_All, Columns: nil}}
			yyVAL.statement = &RevokePrivilege{Privileges: allPriv, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 159:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1257
		{
			yyVAL.statement = &RevokePrivilege{Privileges: yyDollar[2].grantPrivileges, ObjectType: yyDollar[4].grantObjectType, PrivilegeLevel: yyDollar[5].privilegeLevel, From: yyDollar[7].accountNames}
		}
	case 160:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1261
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[7].accountNames}
		}
	case 161:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1265
		{
			yyVAL.statement = &RevokeAllPrivileges{From: yyDollar[8].accountNames}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1269
		{
			yyVAL.statement = &RevokeRole{Roles: yyDollar[2].accountNames, From: yyDollar[4].accountNames}
		}
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1273
		{
			yyVAL.statement = &RevokeProxy{On: yyDollar[4].accountName, From: yyDollar[6].accountNames}
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Alter, Columns: yyDollar[2].strs}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_AlterRoutine, Columns: yyDollar[3].strs}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Create, Columns: yyDollar[2].strs}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRole, Columns: yyDollar[3].strs}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateRoutine, Columns: yyDollar[3].strs}
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTablespace, Columns: yyDollar[3].strs}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1303
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateTemporaryTables, Columns: yyDollar[4].strs}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateUser, Columns: yyDollar[3].strs}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_CreateView, Columns: yyDollar[3].strs}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Delete, Columns: yyDollar[2].strs}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Drop, Columns: yyDollar[2].strs}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1323
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_DropRole, Columns: yyDollar[3].strs}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Event, Columns: yyDollar[2].strs}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Execute, Columns: yyDollar[2].strs}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_File, Columns: yyDollar[2].strs}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Index, Columns: yyDollar[2].strs}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Insert, Columns: yyDollar[2].strs}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_LockTables, Columns: yyDollar[3].strs}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Process, Columns: yyDollar[2].strs}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1355
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_References, Columns: yyDollar[2].strs}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1359
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Reload, Columns: yyDollar[2].strs}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationClient, Columns: yyDollar[3].strs}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ReplicationSlave, Columns: yyDollar[3].strs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Select, Columns: yyDollar[2].strs}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowDatabases, Columns: yyDollar[3].strs}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_ShowView, Columns: yyDollar[3].strs}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Shutdown, Columns: yyDollar[2].strs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Super, Columns: yyDollar[2].strs}
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Trigger, Columns: yyDollar[2].strs}
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1395
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Update, Columns: yyDollar[2].strs}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1399
		{
			yyVAL.grantPrivilege = Privilege{Type: PrivilegeType_Usage, Columns: yyDollar[2].strs}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1405
		{
			yyVAL.grantPrivileges = []Privilege{yyDollar[1].grantPrivilege}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.grantPrivileges = append(yyDollar[1].grantPrivileges, yyDollar[3].grantPrivilege)
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1414
		{
			yyVAL.strs = nil
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.strs = yyDollar[2].strs
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.strs = []string{yyDollar[1].colIdent.String()}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1433
		{
			yyVAL.grantObjectType = GrantObjectType_Any
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.grantObjectType = GrantObjectType_Table
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1441
		{
			yyVAL.grantObjectType = GrantObjectType_Function
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.grantObjectType = GrantObjectType_Procedure
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: "*"}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "*", TableRoutine: "*"}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: "", TableRoutine: yyDollar[1].colIdent.String()}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: "*"}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.privilegeLevel = PrivilegeLevel{Database: yyDollar[1].colIdent.String(), TableRoutine: yyDollar[3].colIdent.String()}
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1472
		{
			yyVAL.grantAssumption = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1476
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1480
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Default, User: yyDollar[2].accountName, Roles: nil}
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1484
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_None, User: yyDollar[2].accountName, Roles: nil}
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1488
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_All, User: yyDollar[2].accountName, Roles: nil}
		}
	case 215:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1492
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_AllExcept, User: yyDollar[2].accountName, Roles: yyDollar[7].accountNames}
		}
	case 216:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1496
		{
			yyVAL.grantAssumption = &GrantUserAssumption{Type: GrantUserAssumptionType_Roles, User: yyDollar[2].accountName, Roles: yyDollar[5].accountNames}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1501
		{
			yyVAL.boolean = false
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			yyVAL.boolean = true
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.boolean = false
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.boolean = true
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1521
		{
			if yyDollar[1].selStmt.GetInto() != nil {
				yylex.Error(fmt.Errorf("INTO clause is not allowed").Error())
				return 1
			}
			yyDollar[1].selStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].selStmt.SetLimit(yyDollar[3].limit)
			yyDollar[1].selStmt.SetLock(yyDollar[4].str)
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1533
		{
			yyVAL.procedureParams = nil
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1537
		{
			yyVAL.procedureParams = yyDollar[1].procedureParams
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.procedureParams = []ProcedureParam{yyDollar[1].procedureParam}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1547
		{
			yyVAL.procedureParams = append(yyVAL.procedureParams, yyDollar[3].procedureParam)
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1553
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[1].colIdent.String(), Type: yyDollar[2].columnType}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_In, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1561
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Inout, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1565
		{
			yyVAL.procedureParam = ProcedureParam{Direction: ProcedureParamDirection_Out, Name: yyDollar[2].colIdent.String(), Type: yyDollar[3].columnType}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1570
		{
			yyVAL.characteristics = nil
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.characteristics = yyDollar[1].characteristics
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[2].characteristic)
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Comment, Comment: string(yyDollar[2].bytes)}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_LanguageSql}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1598
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NotDeterministic}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_Deterministic}
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1606
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ContainsSql}
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1610
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_NoSql}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1614
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ReadsSqlData}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_ModifiesSqlData}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityDefiner}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1626
		{
			yyVAL.characteristic = Characteristic{Type: CharacteristicValue_SqlSecurityInvoker}
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1632
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1638
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: "", Definer: yyDollar[1].str, Security: yyDollar[2].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.viewSpec = &ViewSpec{Algorithm: yyDollar[1].str, Definer: yyDollar[2].str, Security: yyDollar[3].str}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.str = yyDollar[3].accountName.String()
		}
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = ""
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			anyHost := false
			if yyDollar[3].str == "%" {
				anyHost = true
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: anyHost}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1706
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: yyDollar[3].str, AnyHost: false}
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1734
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: false}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			if len(yyDollar[1].str) == 0 {
				yylex.Error("the anonymous user is not a valid role name")
				return 1
			}
			yyVAL.accountName = AccountName{Name: yyDollar[1].str, Host: "", AnyHost: true}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.accountNames = []AccountName{yyDollar[1].accountName}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.accountNames = append(yyDollar[1].accountNames, yyDollar[3].accountName)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1770
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, AuthInitial: yyDollar[5].authentication}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1774
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication}
		}
	case 272:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1778
		{
			yyVAL.accountWithAuth = AccountWithAuth{AccountName: yyDollar[1].accountName, Auth1: yyDollar[2].authentication, Auth2: yyDollar[4].authentication, Auth3: yyDollar[6].authentication}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1784
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1788
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1792
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1796
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), RandomPassword: true}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1800
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Password: string(yyDollar[5].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1804
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1810
		{
			yyVAL.authentication = &Authentication{RandomPassword: true}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.authentication = &Authentication{Password: string(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.authentication = &Authentication{Plugin: string(yyDollar[3].bytes), Identity: string(yyDollar[5].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.accountsWithAuth = []AccountWithAuth{yyDollar[1].accountWithAuth}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1828
		{
			yyVAL.accountsWithAuth = append(yyDollar[1].accountsWithAuth, yyDollar[3].accountWithAuth)
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = BeforeStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = AfterStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = InsertStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.str = UpdateStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.str = DeleteStr
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1857
		{
			yyVAL.triggerOrder = nil
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1861
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: FollowsStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.triggerOrder = &TriggerOrder{PrecedesOrFollows: PrecedesStr, OtherTriggerName: string(yyDollar[2].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &BeginEndBlock{Statements: yyDollar[2].statements}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1887
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases}
		}
	case 299:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1891
		{
			yyVAL.statement = &CaseStatement{Expr: yyDollar[2].expr, Cases: yyDollar[3].caseStatementCases, Else: yyDollar[5].statements}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.caseStatementCases = []CaseStatementCase{yyDollar[1].caseStatementCase}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.caseStatementCases = append(yyVAL.caseStatementCases, yyDollar[2].caseStatementCase)
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1907
		{
			yyVAL.caseStatementCase = CaseStatementCase{Case: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 303:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1913
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 304:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1918
		{
			conds := []IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[7].statements}
		}
	case 305:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1923
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds}
		}
	case 306:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1929
		{
			conds := yyDollar[6].ifStatementConditions
			conds = append([]IfStatementCondition{IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}}, conds...)
			yyVAL.statement = &IfStatement{Conditions: conds, Else: yyDollar[8].statements}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1937
		{
			yyVAL.ifStatementConditions = []IfStatementCondition{yyDollar[1].ifStatementCondition}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.ifStatementConditions = append(yyVAL.ifStatementConditions, yyDollar[2].ifStatementCondition)
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1947
		{
			yyVAL.ifStatementCondition = IfStatementCondition{Expr: yyDollar[2].expr, Statements: yyDollar[4].statements}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), SqlStateValue: string(yyDollar[5].bytes)}}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Declare{Condition: &DeclareCondition{Name: string(yyDollar[2].bytes), MysqlErrorCode: NewIntVal(yyDollar[5].bytes)}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Declare{Cursor: &DeclareCursor{Name: string(yyDollar[2].bytes), SelectStmt: yyDollar[5].selStmt}}
		}
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Declare{Handler: &DeclareHandler{Action: yyDollar[2].declareHandlerAction, ConditionValues: yyDollar[5].declareHandlerConditions, Statement: yyDollar[6].statement}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1969
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1975
		{
			yyDollar[3].columnType.Charset = yyDollar[4].str
			yyDollar[3].columnType.Collate = yyDollar[5].str
			yyDollar[3].columnType.Default = yyDollar[7].expr
			yyVAL.statement = &Declare{Variables: &DeclareVariables{Names: yyDollar[2].colIdents, VarType: yyDollar[3].columnType}}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1984
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Continue
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Exit
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.declareHandlerAction = DeclareHandlerAction_Undo
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.declareHandlerConditions = []DeclareHandlerCondition{yyDollar[1].declareHandlerCondition}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yyVAL.declareHandlerConditions = append(yyVAL.declareHandlerConditions, yyDollar[3].declareHandlerCondition)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_MysqlErrorCode, MysqlErrorCode: NewIntVal(yyDollar[1].bytes)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlState, String: string(yyDollar[1].bytes)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlWarning}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_NotFound}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_SqlException}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.declareHandlerCondition = DeclareHandlerCondition{ValueType: DeclareHandlerCondition_ConditionName, String: string(yyDollar[1].bytes)}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes)}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statement = &Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes)}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2046
		{
			yyVAL.statement = &Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.bytes = yyDollar[2].bytes
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yyVAL.bytes = yyDollar[3].bytes
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.signalInfos = []SignalInfo{yyDollar[1].signalInfo}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			yyVAL.signalInfos = append(yyVAL.signalInfos, yyDollar[3].signalInfo)
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2072
		{
			yyVAL.signalInfo = SignalInfo{ConditionItemName: yyDollar[1].signalConditionItemName, Value: yyDollar[3].expr.(*SQLVal)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ClassOrigin
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SubclassOrigin
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2086
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MessageText
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_MysqlErrno
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintCatalog
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintSchema
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2102
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ConstraintName
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CatalogName
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_SchemaName
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_TableName
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_ColumnName
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.signalConditionItemName = SignalConditionItemName_CursorName
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Resignal{}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes)}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &Resignal{Signal{SqlStateValue: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2140
		{
			yyVAL.statement = &Resignal{Signal{Info: yyDollar[3].signalInfos}}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes)}}
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2148
		{
			yyVAL.statement = &Resignal{Signal{ConditionName: string(yyDollar[2].bytes), Info: yyDollar[4].signalInfos}}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.statement = &Call{FuncName: string(yyDollar[2].bytes), Params: yyDollar[3].exprs}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2159
		{
			yyVAL.exprs = nil
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			yyVAL.exprs = nil
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.exprs = yyDollar[2].exprs
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.statements = Statements{yyDollar[1].statement}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.statements = append(yyVAL.statements, yyDollar[3].statement)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2218
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[5].tableName, IfNotExists: ne, Temporary: neTemp}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2232
		{
			var ne bool
			if yyDollar[4].byt != 0 {
				ne = true
			}

			var neTemp bool
			if yyDollar[2].byt != 0 {
				neTemp = true
			}

			yyVAL.ddl = &DDL{Action: CreateStr, Table: TableName{Name: NewTableIdent(string(yyDollar[5].bytes))}, IfNotExists: ne, Temporary: neTemp}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2248
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str + yyDollar[5].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2271
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2275
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2280
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2284
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2288
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2302
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2312
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2353
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2366
		{
			yyVAL.columnType = ColumnType{}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2370
		{
			opt := ColumnType{Null: BoolVal(true), NotNull: BoolVal(false), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			opt := ColumnType{Null: BoolVal(false), NotNull: BoolVal(true), sawnull: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			opt := ColumnType{Charset: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			opt := ColumnType{Collate: yyDollar[2].str}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			opt := ColumnType{BinaryCollate: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			opt := ColumnType{Default: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2424
		{
			opt := ColumnType{OnUpdate: yyDollar[2].optVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2433
		{
			opt := ColumnType{Autoincrement: yyDollar[2].boolVal, sawai: true}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			opt := ColumnType{KeyOpt: yyDollar[2].colKeyOpt}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2451
		{
			opt := ColumnType{Comment: yyDollar[2].sqlVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2460
		{
			opt := ColumnType{GeneratedExpr: yyDollar[4].expr, Stored: yyDollar[6].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 423:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2469
		{
			opt := ColumnType{GeneratedExpr: yyDollar[6].expr, Stored: yyDollar[8].boolVal}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			opt := ColumnType{SRID: NewIntVal(yyDollar[3].bytes)}
			if err := yyDollar[1].columnType.merge(opt); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2489
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2531
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2547
		{
			yyVAL.columnType = ColumnType{Type: "bigint", Unsigned: true, NotNull: true, Autoincrement: true, KeyOpt: colKeyUnique}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
			yyVAL.columnType.Length = yyDollar[3].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[3].LengthScaleOption.Scale
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2595
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2607
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2619
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Length: yyDollar[3].sqlVal}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Length: yyDollar[4].sqlVal}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2722
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, string(yyDollar[1].bytes))
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2767
		{
			yyVAL.strs = append(yyDollar[1].strs, string(yyDollar[3].bytes))
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2772
		{
			yyVAL.sqlVal = nil
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.sqlVal = nil
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2789
		{
			yyVAL.sqlVal = NewValArg(yyDollar[2].bytes)
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2794
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2798
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2806
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2810
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2816
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2824
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2837
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2847
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2851
		{
			if num, ok := yyDollar[3].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.optVal = num
				} else {
					yyVAL.optVal = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.optVal = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[3].expr}
			}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.optVal = yyDollar[2].boolVal
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2869
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2873
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2881
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2889
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2893
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2897
		{
			yyVAL.optVal = &FuncExpr{Name: NewColIdent(string(yyDollar[2].bytes)), Exprs: yyDollar[4].selectExprs}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2901
		{
			yyVAL.optVal = &ParenExpr{yyDollar[3].expr}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2907
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = yyDollar[1].str
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = yyDollar[1].str
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2956
		{
			yyVAL.boolean = false
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2960
		{
			yyVAL.boolean = true
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2965
		{
			yyVAL.charsetCollates = nil
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2969
		{
			yyVAL.charsetCollates = yyDollar[1].charsetCollates
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.charsetCollates = []*CharsetAndCollate{yyDollar[1].charsetCollate}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2991
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.charsetCollates = append(yyDollar[1].charsetCollates, yyDollar[2].charsetCollate)
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3001
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3005
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Value: string(yyDollar[5].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3009
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3013
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3019
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3023
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3029
		{
			yyVAL.charsetCollate = &CharsetAndCollate{Type: string(yyDollar[2].bytes), Value: string(yyDollar[4].bytes), IsDefault: yyDollar[1].boolean}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3035
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.colKeyOpt = colKey
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.colKeyOpt = colKeyFulltextKey
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3057
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.statement = &Flush{Type: yyDollar[2].str, Option: yyDollar[3].flushOption}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3069
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3073
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3081
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3085
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3089
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3101
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Channel: yyDollar[3].str}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.flushOption = &FlushOption{Name: string(yyDollar[1].bytes)}
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3129
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = yyDollar[1].str
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3135
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3139
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3144
		{
			yyVAL.indexOptions = nil
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3148
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3154
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3158
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3168
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3179
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3195
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Primary: true, Unique: true}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3199
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3207
		{
			var name string
			name = yyDollar[2].str
			if name == "" {
				name = yyDollar[5].str
			}
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[3].bytes) + " " + string(yyDollar[4].str), Name: NewColIdent(name), Unique: true}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3216
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3220
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3234
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3238
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3253
		{
			yyVAL.str = ""
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3257
		{
			yyVAL.str = yyDollar[1].str
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3262
		{
			yyVAL.str = ""
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3272
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3276
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.indexColumn = &IndexColumn{Column: NewColIdent(string(yyDollar[1].bytes)), Length: yyDollar[2].sqlVal, Order: yyDollar[3].str}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3292
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3296
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 603:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3306
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3310
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 605:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:3314
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 606:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3318
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 607:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:3322
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[12].ReferenceAction, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3328
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3337
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3341
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[2].constraintInfo}
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3345
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 613:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3351
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3361
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = ""
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3380
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3392
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3396
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3400
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3404
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3413
		{
			yyVAL.boolean = true
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.boolean = true
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			yyVAL.boolean = false
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3426
		{
			yyVAL.str = ""
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3430
		{
			yyVAL.str = yyDollar[1].str + " " + string(yyDollar[2].str)
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3434
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3448
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].str) + " "
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3456
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3460
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[4].str
		}
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3464
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + yyDollar[5].str
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3468
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3472
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3476
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3480
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + "'" + string(yyDollar[4].bytes) + "'"
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3532
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3536
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3540
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3556
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + "'" + string(yyDollar[3].bytes) + "'"
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3560
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[3].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = string(yyDollar[1].bytes) + yyDollar[2].str
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[4].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3596
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + yyDollar[3].str
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3629
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3633
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3641
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3645
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = ""
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str
		}
	case 688:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3664
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + yyDollar[4].str + yyDollar[5].str + "(partition_definitions)"
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = string(yyDollar[1].bytes) + " (" + string(yyDollar[3].bytes) + ")"
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3692
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (value)"
		}
	case 695:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (" + string(yyDollar[4].bytes) + ")"
		}
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " (column_list)"
		}
	case 697:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3704
		{
			yyVAL.str = yyDollar[1].str + string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes) + " " + string(yyDollar[5].bytes) + " (column_list)"
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = string(yyDollar[1].bytes) + " "
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = ""
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].str + " " + yyDollar[4].str
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " "
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3754
		{
			yyVAL.str = string("")
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3768
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].bytes), CharsetCollate: yyDollar[4].charsetCollates}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, CharsetCollate: yyDollar[3].charsetCollates}
		}
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3778
		{
			for i := 0; i < len(yyDollar[5].ddls); i++ {
				if yyDollar[5].ddls[i].Action == RenameStr {
					yyDollar[5].ddls[i].FromTables = append(TableNames{yyDollar[4].tableName}, yyDollar[5].ddls[i].FromTables...)
				} else {
					yyDollar[5].ddls[i].Table = yyDollar[4].tableName
				}
			}
			yyVAL.statement = &MultiAlterDDL{Table: yyDollar[4].tableName, Statements: yyDollar[5].ddls}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.ddls = []*DDL{yyDollar[1].ddl}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3795
		{
			yyVAL.ddls = append(yyVAL.ddls, yyDollar[3].ddl)
		}
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3801
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			ddl.Column = yyDollar[4].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3808
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: AddStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3815
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: DropStr, Column: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3819
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ColumnAction: RenameStr, Column: NewColIdent(string(yyDollar[3].bytes)), ToColumn: NewColIdent(string(yyDollar[5].bytes))}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3823
		{
			// Change this to a rename statement
			yyVAL.ddl = &DDL{Action: RenameStr, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 722:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3828
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[3].str), Using: yyDollar[4].colIdent, Columns: yyDollar[6].indexColumns, Options: yyDollar[8].indexOptions}}
		}
	case 723:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:3832
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr, ToName: NewColIdent(yyDollar[5].str), Type: yyDollar[3].str, Using: yyDollar[6].colIdent, Columns: yyDollar[8].indexColumns, Options: yyDollar[10].indexOptions}}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3836
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3841
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3846
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3851
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes)}}}}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3861
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3871
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3876
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3881
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[3].bytes), Details: &CheckConstraintDefinition{}}}}}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3886
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3890
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: RenameStr, FromName: yyDollar[3].colIdent, ToName: yyDollar[5].colIdent}}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3894
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ModifyStr, TableSpec: &TableSpec{}, ColumnOrder: yyDollar[4].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			ddl.Column = yyDollar[3].columnDefinition.Name
			yyVAL.ddl = ddl
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3901
		{
			ddl := &DDL{Action: AlterStr, ColumnAction: ChangeStr, TableSpec: &TableSpec{}, Column: NewColIdent(string(yyDollar[3].bytes)), ColumnOrder: yyDollar[5].columnOrder}
			ddl.TableSpec.AddColumn(yyDollar[4].columnDefinition)
			yyVAL.ddl = ddl
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.ddl = &DDL{Action: AlterStr, PartitionSpec: yyDollar[1].partSpec}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3911
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3917
		{
			ddl := &DDL{Action: AlterStr, ConstraintAction: AddStr, TableSpec: &TableSpec{}}
			ddl.TableSpec.AddConstraint(yyDollar[2].constraintDefinition)
			yyVAL.ddl = ddl
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3923
		{
			yyVAL.ddl = &DDL{Action: AlterStr, ConstraintAction: DropStr, TableSpec: &TableSpec{Constraints: []*ConstraintDefinition{&ConstraintDefinition{Name: string(yyDollar[4].bytes), Details: &ForeignKeyDefinition{}}}}}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			yyVAL.ddl = &DDL{Action: AlterStr, AutoIncSpec: &AutoIncSpec{Value: yyDollar[3].expr}}
		}
	case 743:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3932
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: SetStr, Column: yyDollar[3].colIdent, Value: yyDollar[6].expr}}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3936
		{
			yyVAL.ddl = &DDL{Action: AlterStr, DefaultSpec: &DefaultSpec{Action: DropStr, Column: yyDollar[3].colIdent}}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3940
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: DropStr, Type: PrimaryStr}}
		}
	case 746:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3946
		{
			ddl := &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: CreateStr}}
			ddl.IndexSpec = &IndexSpec{Action: CreateStr, Using: NewColIdent(""), ToName: NewColIdent(yyDollar[2].str), Type: PrimaryStr, Columns: yyDollar[7].indexColumns, Options: yyDollar[9].indexOptions}
			yyVAL.ddl = ddl
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3952
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3956
		{
			yyVAL.ddl = &DDL{Action: AlterStr, IndexSpec: &IndexSpec{Action: string(yyDollar[1].bytes)}}
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.columnOrder = nil
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3965
		{
			yyVAL.columnOrder = &ColumnOrder{First: true}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3969
		{
			yyVAL.columnOrder = &ColumnOrder{AfterColumn: NewColIdent(string(yyDollar[2].bytes))}
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3974
		{
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
		}
	case 754:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3980
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 757:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3996
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 758:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4000
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4010
		{
			yyVAL.statement = &RenameUser{Accounts: yyDollar[3].accountRenames}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4016
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4020
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.accountRenames = []AccountRename{{From: yyDollar[1].accountName, To: yyDollar[3].accountName}}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4032
		{
			yyVAL.accountRenames = append(yyDollar[1].accountRenames, AccountRename{From: yyDollar[3].accountName, To: yyDollar[5].accountName})
		}
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4038
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4046
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, IndexSpec: &IndexSpec{Action: DropStr, ToName: yyDollar[3].colIdent}}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4050
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromViews: yyDollar[4].tableNames, IfExists: exists}
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4058
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes), IfExists: exists}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4074
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, TriggerSpec: &TriggerSpec{TrigName: yyDollar[4].triggerName}, IfExists: exists}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4082
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, ProcedureSpec: &ProcedureSpec{ProcName: yyDollar[4].procedureName}, IfExists: exists}
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4090
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropUser{IfExists: exists, AccountNames: yyDollar[4].accountNames}
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4098
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DropRole{IfExists: exists, Roles: yyDollar[4].accountNames}
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4107
		{

		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4111
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4115
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4121
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4125
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4131
		{
			yyVAL.statement = &Analyze{Tables: yyDollar[3].tableNames}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4137
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4142
		{
			yyVAL.statement = &Show{Type: CharsetStr, Filter: yyDollar[4].showFilter}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Filter: yyDollar[3].showFilter}
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4150
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 784:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4154
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), IfNotExists: yyDollar[4].byt == 1, Database: string(yyDollar[5].bytes)}
		}
	case 785:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4158
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 786:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4163
		{
			yyVAL.statement = &Show{Type: CreateProcedureStr, Table: yyDollar[4].tableName}
		}
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4167
		{
			yyVAL.statement = &Show{Type: CreateTriggerStr, Table: yyDollar[4].tableName}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4171
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4175
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4179
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4183
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 792:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4187
		{
			yyVAL.statement = &Show{Type: IndexStr, Table: yyDollar[4].tableName, Database: yyDollar[5].str, ShowIndexFilterOpt: yyDollar[6].expr}
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4195
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4199
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4203
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4207
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Database: yyDollar[4].str, Filter: yyDollar[5].showFilter}
		}
	case 798:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:4211
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, AsOf: yyDollar[7].expr, Filter: yyDollar[8].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, Table: yyDollar[5].tableName, Full: yyDollar[2].boolean}
		}
	case 799:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4216
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[6].showFilter, AsOf: yyDollar[5].expr}
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt, Full: yyDollar[2].boolean}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4221
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), Full: yyDollar[2].boolean}
		}
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4225
		{
			yyVAL.statement = &Show{Type: string(yyDollar[3].bytes), ShowTablesOpt: &ShowTablesOpt{DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}, Full: yyDollar[2].boolean}
		}
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4229
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes), Filter: yyDollar[4].showFilter}
		}
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4233
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4237
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4243
		{
			// Cannot dereference $3 directly, or else the parser stackcannot be pooled. See yyParsePooled
			cmp := yyDollar[3].expr.(*ComparisonExpr)
			cmp.Left = &ColName{Name: NewColIdent("collation")}
			var ex Expr = cmp
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &ex}
		}
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.statement = &ShowGrants{}
		}
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4255
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an}
		}
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4260
		{
			yyVAL.statement = &ShowGrants{CurrentUser: true}
		}
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4264
		{
			an := yyDollar[4].accountName
			yyVAL.statement = &ShowGrants{For: &an, Using: yyDollar[6].accountNames}
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4269
		{
			yyVAL.statement = &ShowPrivileges{}
		}
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4273
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4277
		{
			yyVAL.statement = &Show{Type: string(yyDollar[6].bytes), CountStar: true}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4281
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4285
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), Limit: yyDollar[3].limit}
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yyVAL.expr = &ComparisonExpr{Operator: LikeStr, Right: yyDollar[2].expr, Escape: yyDollar[3].expr}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.boolean = false
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.boolean = true
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4307
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = ""
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4331
		{
			yyVAL.showFilter = nil
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4335
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[3].bytes)}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4349
		{
			yyVAL.str = ""
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.str = SessionStr
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.str = GlobalStr
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4363
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4367
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: yyDollar[2].tableIdent.v + "/" + yyDollar[4].tableIdent.v}}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4376
		{
			yyVAL.bytes = nil
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.statement = &Begin{}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4396
		{
			yyVAL.statement = &Begin{}
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4400
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadWrite}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4404
		{
			yyVAL.statement = &Begin{TransactionCharacteristic: TxReadOnly}
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4409
		{
			yyVAL.bytes = nil
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.bytes = nil
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4418
		{
			yyVAL.bytes = nil
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4422
		{
			yyVAL.bytes = nil
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4427
		{
			yyVAL.bytes = nil
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4431
		{
			yyVAL.bytes = nil
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4437
		{
			yyVAL.statement = &Commit{}
		}
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4443
		{
			yyVAL.statement = &Rollback{}
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4449
		{
			yyVAL.statement = &Savepoint{Identifier: string(yyDollar[2].bytes)}
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4459
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4463
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[4].bytes)}
		}
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4467
		{
			yyVAL.statement = &RollbackSavepoint{Identifier: string(yyDollar[5].bytes)}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4473
		{
			yyVAL.statement = &ReleaseSavepoint{Identifier: string(yyDollar[3].bytes)}
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4483
		{
			yyVAL.statement = &Explain{ExplainFormat: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4487
		{
			yyVAL.statement = &Explain{Analyze: true, ExplainFormat: TreeStr, Statement: yyDollar[3].selStmt}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4493
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = ""
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4516
		{
			showTablesOpt := &ShowTablesOpt{AsOf: yyDollar[3].expr}
			yyVAL.statement = &Show{Type: "columns", Table: yyDollar[2].tableName, ShowTablesOpt: showTablesOpt}
		}
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4522
		{
			setAllowComments(yylex, true)
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4526
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4532
		{
			yyVAL.bytes2 = nil
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4536
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = UnionStr
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4546
		{
			yyVAL.str = UnionAllStr
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = UnionDistinctStr
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4555
		{
			yyVAL.byt = 0
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.byt = 1
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			yyVAL.str = SQLCacheStr
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = DistinctStr
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4590
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4594
		{
			yyVAL.str = StraightJoinHint
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4600
		{
			if ae, ok := yyDollar[2].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[1].int
				ae.EndParsePos = yyDollar[3].int - 1
			}
			yyVAL.selectExprs = SelectExprs{yyDollar[2].selectExpr}
		}
	case 885:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4608
		{
			if ae, ok := yyDollar[4].selectExpr.(*AliasedExpr); ok {
				ae.StartParsePos = yyDollar[3].int
				ae.EndParsePos = yyDollar[5].int - 1
			}
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[4].selectExpr)
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4627
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4631
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4641
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4645
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4649
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4655
		{
			yyVAL.over = &Over{NameRef: yyDollar[2].colIdent}
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4659
		{
			yyVAL.over = (*Over)(yyDollar[2].windowDef)
		}
	case 896:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4665
		{
			yyVAL.windowDef = &WindowDef{NameRef: yyDollar[2].colIdent, PartitionBy: yyDollar[3].exprs, OrderBy: yyDollar[4].orderBy, Frame: yyDollar[5].frame}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4670
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4678
		{
			yyVAL.exprs = nil
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4682
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4687
		{
			yyVAL.over = nil
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
			yyVAL.over = yyDollar[1].over
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4696
		{
			yyVAL.frame = nil
		}
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4700
		{
			yyVAL.frame = &Frame{Unit: RowsUnit, Extent: yyDollar[2].frameExtent}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.frame = &Frame{Unit: RangeUnit, Extent: yyDollar[2].frameExtent}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4711
		{
			startBound := yyDollar[2].frameBound
			endBound := yyDollar[4].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.Type == UnboundedPreceding:
				yylex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.Type == CurrentRow && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == ExprPreceding:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.Type == ExprFollowing && endBound.Type == CurrentRow:
				yylex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound, End: endBound}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			startBound := yyDollar[1].frameBound
			switch {
			case startBound.Type == UnboundedFollowing:
				yylex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.Type == ExprFollowing:
				yylex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			yyVAL.frameExtent = &FrameExtent{Start: startBound}
		}
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedPreceding}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.frameBound = &FrameBound{Type: UnboundedFollowing}
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4757
		{
			yyVAL.frameBound = &FrameBound{Type: CurrentRow}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4761
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprPreceding,
			}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4768
		{
			yyVAL.frameBound = &FrameBound{
				Expr: yyDollar[1].expr,
				Type: ExprFollowing,
			}
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4776
		{
			yyVAL.window = nil
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4779
		{
			yyVAL.window = yyDollar[2].window
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.window = Window{yyDollar[1].windowDef}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4788
		{
			yyVAL.window = append(yyDollar[1].window, yyDollar[3].windowDef)
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4794
		{
			def := yyDollar[3].windowDef
			def.Name = yyDollar[1].colIdent
			yyVAL.windowDef = def
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4803
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4812
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4820
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4824
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[2].bytes))
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4846
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4850
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4856
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4860
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4874
		{
			switch n := yyDollar[1].simpleTableExpr.(type) {
			case *Subquery:
				n.Columns = yyDollar[4].columns
			case *ValuesStatement:
				n.Columns = yyDollar[4].columns
			}
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].simpleTableExpr, As: yyDollar[3].tableIdent}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4884
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4890
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4898
		{
			yyVAL.simpleTableExpr = &ValuesStatement{Rows: yyDollar[2].values}
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4904
		{
			yyVAL.values = Values{yyDollar[2].valTuple}
		}
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4908
		{
			yyVAL.values = append(yyVAL.values, yyDollar[4].valTuple)
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.aliasedTableName = yyDollar[2].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
		}
	case 944:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4919
		{
			yyVAL.aliasedTableName = yyDollar[6].aliasedTableName
			yyVAL.aliasedTableName.Expr = yyDollar[1].tableName
			yyVAL.aliasedTableName.Partitions = yyDollar[4].partitions
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Hints: yyDollar[1].indexHints}
		}
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4934
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, Hints: yyDollar[4].indexHints}
		}
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:4938
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{AsOf: &AsOf{Time: yyDollar[3].expr}, As: yyDollar[5].tableIdent, Hints: yyDollar[6].indexHints}
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4942
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4946
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{As: yyDollar[1].tableIdent, Hints: yyDollar[2].indexHints}
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4957
		{
			yyVAL.expr = nil
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.expr = yyDollar[3].expr
		}
	case 952:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4966
		{
			yyVAL.columns = nil
		}
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4970
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4976
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4980
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4986
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4990
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4996
		{
			yyVAL.tableExpr = &TableFuncExpr{Name: string(yyDollar[1].bytes), Exprs: yyDollar[3].selectExprs}
		}
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5010
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5014
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5018
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5022
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5028
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5030
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5034
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5036
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5040
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5042
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5045
		{
			yyVAL.empty = struct{}{}
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5047
		{
			yyVAL.empty = struct{}{}
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.str = JoinStr
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5066
		{
			yyVAL.str = JoinStr
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5070
		{
			yyVAL.str = JoinStr
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.str = StraightJoinStr
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5082
		{
			yyVAL.str = LeftJoinStr
		}
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5086
		{
			yyVAL.str = LeftJoinStr
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5090
		{
			yyVAL.str = RightJoinStr
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5094
		{
			yyVAL.str = RightJoinStr
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5098
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5102
		{
			yyVAL.str = FullOuterJoinStr
		}
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5108
		{
			yyVAL.str = NaturalJoinStr
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5112
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 986:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:5122
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[12].tableIdent}
		}
	case 987:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:5126
		{
			yyVAL.tableExpr = &JSONTableExpr{Data: yyDollar[3].expr, Path: string(yyDollar[5].bytes), Spec: yyDollar[8].TableSpec, Alias: yyDollar[11].tableIdent}
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5132
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5137
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5145
		{
			if err := yyDollar[2].columnType.merge(yyDollar[3].columnType); err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5157
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[2].bytes)}
		}
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5161
		{
			yyVAL.columnType = ColumnType{Path: string(yyDollar[3].bytes)}
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5167
		{

		}
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5185
		{

		}
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5189
		{

		}
	case 996:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5193
		{

		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5197
		{

		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.triggerName = TriggerName{Name: yyDollar[1].colIdent}
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5207
		{
			yyVAL.triggerName = TriggerName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5213
		{
			yyVAL.tableName = yyDollar[3].tableName
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5219
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5223
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5229
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5233
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5237
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5245
		{
			yyVAL.tableName = TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5251
		{
			yyVAL.procedureName = ProcedureName{Name: yyDollar[1].colIdent}
		}
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5255
		{
			yyVAL.procedureName = ProcedureName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent}
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5261
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5266
		{
			yyVAL.indexHints = nil
		}
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5270
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5274
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 1014:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5278
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5283
		{
			yyVAL.expr = nil
		}
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5287
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5293
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5297
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5301
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5305
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5309
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5313
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5317
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5321
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = ""
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5337
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5341
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5347
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5351
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5355
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5359
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5363
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5367
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5371
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 1036:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5375
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5379
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5383
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = IsNullStr
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = IsNotNullStr
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = IsTrueStr
		}
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5401
		{
			yyVAL.str = IsNotTrueStr
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5405
		{
			yyVAL.str = IsFalseStr
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5409
		{
			yyVAL.str = IsNotFalseStr
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5415
		{
			yyVAL.str = EqualStr
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = LessThanStr
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = GreaterThanStr
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5427
		{
			yyVAL.str = LessEqualStr
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = GreaterEqualStr
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = NotEqualStr
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5439
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5444
		{
			yyVAL.expr = nil
		}
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5448
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5454
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5458
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5462
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yyVAL.subquery = &Subquery{Select: yyDollar[2].selStmt}
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5474
		{
			yyVAL.simpleTableExpr = yyDollar[1].subquery
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5478
		{
			yyVAL.simpleTableExpr = yyDollar[2].simpleTableExpr
		}
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5484
		{
			yyVAL.selectExprs = nil
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5495
		{
			yyVAL.selectExprs = append(yyDollar[1].selectExprs, yyDollar[3].selectExpr)
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5501
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5505
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5511
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5515
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5519
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5523
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5527
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5531
		{
			yyVAL.expr = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5535
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5539
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5543
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5551
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5555
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5559
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 1079:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5563
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5567
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5571
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5575
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5579
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5583
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5587
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5591
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5595
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5599
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5603
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5607
		{
			yyVAL.expr = &UnaryExpr{Operator: yyDollar[1].str, Expr: yyDollar[2].expr}
		}
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5611
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5619
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5633
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5637
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5641
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5661
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: yyDollar[3].str == DistinctStr, Exprs: yyDollar[4].selectExprs}
		}
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5665
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5675
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5679
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5683
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5687
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5691
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5695
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5699
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5703
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5707
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5711
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5715
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5719
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5723
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5727
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[4].selectExprs, Distinct: yyDollar[3].str == DistinctStr, Over: yyDollar[6].over}
		}
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5731
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5735
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5739
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5748
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5756
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1124:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5760
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1125:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5764
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: SelectExprs{yyDollar[3].selectExpr}, Over: yyDollar[5].over}
		}
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1127:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs, Over: yyDollar[5].over}
		}
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5776
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5780
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5784
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5788
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Over: yyDollar[4].over}
		}
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5799
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5803
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5807
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5811
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5815
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5819
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5823
		{
			yyVAL.expr = &ConvertExpr{Name: string(yyDollar[1].bytes), Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5827
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5831
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5835
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5839
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1143:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5843
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1144:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5847
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1145:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5851
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5855
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5859
		{
			yyVAL.expr = &TrimExpr{Pattern: NewStrVal([]byte(" ")), Str: yyDollar[3].expr, Dir: Both}
		}
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:5863
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[3].expr, Str: yyDollar[5].expr, Dir: Both}
		}
	case 1149:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5867
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Leading}
		}
	case 1150:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5871
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Trailing}
		}
	case 1151:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5875
		{
			yyVAL.expr = &TrimExpr{Pattern: yyDollar[4].expr, Str: yyDollar[6].expr, Dir: Both}
		}
	case 1152:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:5879
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5883
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1154:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:5887
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5891
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5895
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5899
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5909
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5913
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5917
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5922
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5932
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5938
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5943
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5952
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5956
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5960
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5965
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5970
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5975
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Fsp: yyDollar[2].expr}
		}
	case 1173:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5979
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1174:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:5983
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5994
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6004
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6008
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1180:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6012
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6016
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6020
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6024
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Exprs: yyDollar[3].selectExprs}
		}
	case 1184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6030
		{
			yyVAL.str = ""
		}
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = BooleanModeStr
		}
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 1187:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6046
		{
			yyVAL.str = QueryExpansionStr
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6052
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6056
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6062
		{
			yyVAL.str = Armscii8Str
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6066
		{
			yyVAL.str = AsciiStr
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6070
		{
			yyVAL.str = Big5Str
		}
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6074
		{
			yyVAL.str = UBinaryStr
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6078
		{
			yyVAL.str = Cp1250Str
		}
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6082
		{
			yyVAL.str = Cp1251Str
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = Cp1256Str
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6090
		{
			yyVAL.str = Cp1257Str
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6094
		{
			yyVAL.str = Cp850Str
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6098
		{
			yyVAL.str = Cp852Str
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6102
		{
			yyVAL.str = Cp866Str
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6106
		{
			yyVAL.str = Cp932Str
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6110
		{
			yyVAL.str = Dec8Str
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6114
		{
			yyVAL.str = EucjpmsStr
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6118
		{
			yyVAL.str = EuckrStr
		}
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6122
		{
			yyVAL.str = Gb18030Str
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6126
		{
			yyVAL.str = Gb2312Str
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6130
		{
			yyVAL.str = GbkStr
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6134
		{
			yyVAL.str = Geostd8Str
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6138
		{
			yyVAL.str = GreekStr
		}
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6142
		{
			yyVAL.str = HebrewStr
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6146
		{
			yyVAL.str = Hp8Str
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = Keybcs2Str
		}
	case 1214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6154
		{
			yyVAL.str = Koi8rStr
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6158
		{
			yyVAL.str = Koi8uStr
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6162
		{
			yyVAL.str = Latin1Str
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6166
		{
			yyVAL.str = Latin2Str
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6170
		{
			yyVAL.str = Latin5Str
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = Latin7Str
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6178
		{
			yyVAL.str = MacceStr
		}
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6182
		{
			yyVAL.str = MacromanStr
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6186
		{
			yyVAL.str = SjisStr
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6190
		{
			yyVAL.str = Swe7Str
		}
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6194
		{
			yyVAL.str = Tis620Str
		}
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6198
		{
			yyVAL.str = Ucs2Str
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6202
		{
			yyVAL.str = UjisStr
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6206
		{
			yyVAL.str = Utf16Str
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6210
		{
			yyVAL.str = Utf16leStr
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.str = Utf32Str
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = Utf8mb3Str
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6226
		{
			yyVAL.str = Utf8mb4Str
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6232
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6236
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6240
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6244
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6248
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6252
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6258
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6262
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6266
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6270
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6274
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6278
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6282
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6287
		{
			yyVAL.expr = nil
		}
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6291
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6296
		{
			yyVAL.str = string("")
		}
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6300
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6306
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6310
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6316
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6321
		{
			yyVAL.expr = nil
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6325
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6331
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6335
		{
			yyVAL.colName = &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}
		}
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6339
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6343
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6347
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6351
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6355
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6359
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6367
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6371
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: NewColIdent(string(yyDollar[3].bytes))}
		}
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6375
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6379
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: NewTableIdent(string(yyDollar[1].bytes))}, Name: yyDollar[3].colIdent}
		}
	case 1268:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6383
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6389
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6393
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6397
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6401
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6405
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6409
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6413
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6417
		{
			yyVAL.expr = &NullVal{}
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6423
		{
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6427
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6431
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6436
		{
			yyVAL.exprs = nil
		}
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6440
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6450
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6456
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6461
		{
			yyVAL.expr = nil
		}
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6465
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6471
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6476
		{
			yyVAL.orderBy = nil
		}
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6480
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6486
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6490
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6496
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6501
		{
			yyVAL.str = AscScr
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6505
		{
			yyVAL.str = AscScr
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6509
		{
			yyVAL.str = DescScr
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6514
		{
			yyVAL.limit = nil
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6518
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6522
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6526
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6536
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6541
		{
			yyVAL.str = ""
		}
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6545
		{
			yyVAL.str = ForUpdateStr
		}
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6549
		{
			yyVAL.str = ShareModeStr
		}
	case 1305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6562
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 1306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6566
		{
			yyVAL.ins = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].values}
		}
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6570
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6574
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 1309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6579
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6583
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:6587
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6593
		{
			yyVAL.columns = nil
		}
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6597
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6603
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 1315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6607
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6613
		{
			yyVAL.colIdent = yyDollar[3].colIdent
		}
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6617
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6625
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6629
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6633
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6638
		{
			yyVAL.assignExprs = nil
		}
	case 1323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6642
		{
			yyVAL.assignExprs = yyDollar[5].assignExprs
		}
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6648
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6652
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6658
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6662
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6668
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6674
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6684
		{
			yyVAL.assignExprs = AssignmentExprs{yyDollar[1].assignExpr}
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6688
		{
			yyVAL.assignExprs = append(yyDollar[1].assignExprs, yyDollar[3].assignExpr)
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6694
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6697
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6701
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6705
		{
			yyVAL.assignExpr = &AssignmentExpr{Name: &ColName{Name: NewColIdent(string(yyDollar[1].bytes))}, Expr: yyDollar[3].expr}
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6711
		{
			yyVAL.setVarExprs = SetVarExprs{yyDollar[1].setVarExpr}
		}
	case 1337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6715
		{
			yyVAL.setVarExprs = append(yyDollar[1].setVarExprs, yyDollar[3].setVarExpr)
		}
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6721
		{
			colName, scope, err := VarScopeForColName(yyDollar[1].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			}
			yyDollar[1].setVarExpr.Name = colName
			yyDollar[1].setVarExpr.Scope = scope
			yyVAL.setVarExpr = yyDollar[1].setVarExpr
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6732
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6745
		{
			_, scope, err := VarScopeForColName(yyDollar[2].setVarExpr.Name)
			if err != nil {
				yylex.Error(err.Error())
				return 1
			} else if scope != SetScope_None {
				yylex.Error(fmt.Sprintf("invalid system variable name `%s`", yyDollar[2].setVarExpr.Name.Name.val))
				return 1
			}
			yyDollar[2].setVarExpr.Scope = yyDollar[1].setScope
			yyVAL.setVarExpr = yyDollar[2].setVarExpr
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6758
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: NewColName(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr, Scope: SetScope_Session}
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6764
		{
			yyVAL.setScope = SetScope_Global
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6768
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6774
		{
			yyVAL.setScope = SetScope_Session
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6778
		{
			yyVAL.setScope = SetScope_Persist
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6782
		{
			yyVAL.setScope = SetScope_PersistOnly
		}
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6788
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6792
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: NewStrVal(yyDollar[3].bytes), Scope: SetScope_None}
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6796
		{
			yyVAL.setVarExpr = &SetVarExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr, Scope: SetScope_None}
		}
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6803
		{
			yyVAL.bytes = []byte("charset")
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6810
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6814
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6818
		{
			yyVAL.expr = &Default{}
		}
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6827
		{
			yyVAL.byt = 0
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6829
		{
			yyVAL.byt = 1
		}
	case 1360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6832
		{
			yyVAL.byt = 0
		}
	case 1361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6834
		{
			yyVAL.byt = 1
		}
	case 1362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6837
		{
			yyVAL.byt = 0
		}
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6839
		{
			yyVAL.byt = 1
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6842
		{
			yyVAL.str = ""
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6844
		{
			yyVAL.str = IgnoreStr
		}
	case 1366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6847
		{
			yyVAL.sqlVal = nil
		}
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6849
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6851
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6855
		{
			yyVAL.empty = struct{}{}
		}
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6857
		{
			yyVAL.empty = struct{}{}
		}
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6860
		{
			yyVAL.empty = struct{}{}
		}
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6862
		{
			yyVAL.empty = struct{}{}
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6864
		{
			yyVAL.empty = struct{}{}
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6868
		{
			yyVAL.str = UniqueStr
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6870
		{
			yyVAL.str = FulltextStr
		}
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6872
		{
			yyVAL.str = SpatialStr
		}
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6875
		{
			yyVAL.str = ""
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6877
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6880
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6882
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6886
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6890
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6896
		{
			yyVAL.colIdents = []ColIdent{yyDollar[1].colIdent}
		}
	case 1384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6900
		{
			yyVAL.colIdents = append(yyVAL.colIdents, yyDollar[3].colIdent)
		}
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6907
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6913
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6917
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6924
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6929
		{
			yyVAL.str = string("")
		}
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6931
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6934
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6936
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6939
		{
			yyVAL.EnclosedBy = nil
		}
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6943
		{
			yyVAL.EnclosedBy = &EnclosedBy{Optionally: yyDollar[1].boolVal, Delim: NewStrVal(yyDollar[4].bytes)}
		}
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6948
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6952
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6957
		{
			yyVAL.sqlVal = nil
		}
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6961
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6966
		{
			yyVAL.sqlVal = nil
		}
	case 1402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6970
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6975
		{
			yyVAL.Fields = nil
		}
	case 1404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6979
		{
			yyVAL.Fields = &Fields{TerminatedBy: yyDollar[2].sqlVal, EnclosedBy: yyDollar[3].EnclosedBy, EscapedBy: yyDollar[4].sqlVal}
		}
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6984
		{
			yyVAL.Lines = nil
		}
	case 1406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6988
		{
			yyVAL.Lines = &Lines{StartingBy: yyDollar[2].sqlVal, TerminatedBy: yyDollar[3].sqlVal}
		}
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6993
		{
			yyVAL.sqlVal = nil
		}
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6997
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[3].bytes)
		}
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7003
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7009
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7013
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 1412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7019
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName}, Lock: yyDollar[2].lockType}
		}
	case 1413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7023
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[3].tableIdent}, Lock: yyDollar[4].lockType}
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7029
		{
			yyVAL.lockType = LockRead
		}
	case 1415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7033
		{
			yyVAL.lockType = LockReadLocal
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7037
		{
			yyVAL.lockType = LockWrite
		}
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7041
		{
			yyVAL.lockType = LockLowPriorityWrite
		}
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7047
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7053
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[2].bytes)}
		}
	case 1420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7057
		{
			yyVAL.statement = &Kill{ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7061
		{
			yyVAL.statement = &Kill{Connection: true, ConnID: NewIntVal(yyDollar[3].bytes)}
		}
	case 2230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7911
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 2231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7920
		{
			decNesting(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
